// Code generated by go-swagger; DO NOT EDIT.

package o_auth2_0

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io/ioutil"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// AuthCodeRequestV3Reader is a Reader for the AuthCodeRequestV3 structure.
type AuthCodeRequestV3Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AuthCodeRequestV3Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 302:
		result := NewAuthCodeRequestV3Found()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		data, err := ioutil.ReadAll(response.Body())
		if err != nil {
			return nil, err
		}

		return nil, fmt.Errorf("Requested GET /iam/v3/oauth/platforms/{platformId}/authorize returns an error %d: %s", response.Code(), string(data))
	}
}

// NewAuthCodeRequestV3Found creates a AuthCodeRequestV3Found with default headers values
func NewAuthCodeRequestV3Found() *AuthCodeRequestV3Found {
	return &AuthCodeRequestV3Found{}
}

/*AuthCodeRequestV3Found handles this case with default header values.

  Found. Redirect to clientâ€™s redirect URI with either code or error on the query parameter
*/
type AuthCodeRequestV3Found struct {
}

func (o *AuthCodeRequestV3Found) Error() string {
	return fmt.Sprintf("[GET /iam/v3/oauth/platforms/{platformId}/authorize][%d] authCodeRequestV3Found ", 302)
}

func (o *AuthCodeRequestV3Found) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

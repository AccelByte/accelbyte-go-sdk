// Code generated by go-swagger; DO NOT EDIT.

package iamclientmodels

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ClientmodelClientUpdateV3Request clientmodel client update v3 request
//
// swagger:model clientmodel.ClientUpdateV3Request
type ClientmodelClientUpdateV3Request struct {

	// audiences
	Audiences []string `json:"audiences"`

	// base Uri
	BaseURI string `json:"baseUri,omitempty"`

	// client name
	ClientName string `json:"clientName,omitempty"`

	// client permissions
	ClientPermissions []*AccountcommonPermissionV3 `json:"clientPermissions"`

	// client platform
	// Required: true
	ClientPlatform *string `json:"clientPlatform"`

	// deletable
	Deletable bool `json:"deletable"`

	// length 0~1024
	// Required: true
	Description *string `json:"description"`

	// namespace
	Namespace string `json:"namespace,omitempty"`

	// min value 1 second, max value 86400 seconds
	OauthAccessTokenExpiration int32 `json:"oauthAccessTokenExpiration,omitempty"`

	// valid time unit: SECONDS, MINUTES, or HOURS. Default is SECONDS
	OauthAccessTokenExpirationTimeUnit string `json:"oauthAccessTokenExpirationTimeUnit,omitempty"`

	// min value 1 seconds, max value 2592000 seconds
	OauthRefreshTokenExpiration int32 `json:"oauthRefreshTokenExpiration,omitempty"`

	// valid time unit: SECONDS, MINUTES, HOURS or DAYS. Default is MINUTES
	OauthRefreshTokenExpirationTimeUnit string `json:"oauthRefreshTokenExpirationTimeUnit,omitempty"`

	// redirect Uri
	RedirectURI string `json:"redirectUri,omitempty"`

	// scopes
	Scopes []string `json:"scopes"`

	// two factor enabled
	TwoFactorEnabled bool `json:"twoFactorEnabled"`
}

// Validate validates this clientmodel client update v3 request
func (m *ClientmodelClientUpdateV3Request) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateClientPermissions(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateClientPlatform(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDescription(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ClientmodelClientUpdateV3Request) validateClientPermissions(formats strfmt.Registry) error {

	if swag.IsZero(m.ClientPermissions) { // not required
		return nil
	}

	for i := 0; i < len(m.ClientPermissions); i++ {
		if swag.IsZero(m.ClientPermissions[i]) { // not required
			continue
		}

		if m.ClientPermissions[i] != nil {
			if err := m.ClientPermissions[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("clientPermissions" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *ClientmodelClientUpdateV3Request) validateClientPlatform(formats strfmt.Registry) error {

	if err := validate.Required("clientPlatform", "body", m.ClientPlatform); err != nil {
		return err
	}

	return nil
}

func (m *ClientmodelClientUpdateV3Request) validateDescription(formats strfmt.Registry) error {

	if err := validate.Required("description", "body", m.Description); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ClientmodelClientUpdateV3Request) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ClientmodelClientUpdateV3Request) UnmarshalBinary(b []byte) error {
	var res ClientmodelClientUpdateV3Request
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

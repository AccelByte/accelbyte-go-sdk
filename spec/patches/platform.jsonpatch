[
  {
    "op": "add",
    "path": "/schemes",
    "value": [
      "https"
    ]
  },
  {
    "op": "add",
    "path": "/host",
    "value": "demo.accelbyte.io"
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1payment~1orders~1{paymentOrderNo}/get/description",
    "value": "Get payment order by paymentOrderNo.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:PAYMENT&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: payment order instance&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1payment~1orders~1{paymentOrderNo}/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:PAYMENT [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1payment~1orders~1{paymentOrderNo}/put/description",
    "value": "&lt;b&gt;[TEST FACILITY ONLY] Forbidden in live environment. &lt;/b&gt; Charge payment order without payment flow for unpaid payment order, usually for test usage to simulate real currency payment process.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:PAYMENT&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: payment order instance&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1payment~1orders~1{paymentOrderNo}/put/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:PAYMENT [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1items~1{itemId}/get/description",
    "value": "This API is used to get an item.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:ITEM&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: item data&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1items~1{itemId}/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:ITEM [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1items~1{itemId}/put/description",
    "value": "This API is used to update an item.&lt;p&gt;An item update example:&lt;p&gt;&lt;pre&gt;&lt;code&gt;{\r\n\t&#34;categoryPath&#34;: &#34;/games&#34;,\r\n\t&#34;localizations&#34;: \\{\r\n       &#34;en&#34;: \\{\r\n           &#34;title&#34;:&#34;required&#34;,\r\n           &#34;description&#34;:&#34;optional&#34;,\r\n           &#34;longDescription&#34;:&#34;optional&#34;,\r\n           &#34;localExt&#34;: \\{\r\n                  &#34;properties&#34;:\\[\r\n                                   \\{\r\n                                       &#34;key1&#34;:&#34;value1&#34;,\r\n                                       &#34;key2&#34;:&#34;value2&#34;\r\n                                   \\}\r\n                  \\],\r\n                  &#34;functions&#34;:\\[\r\n                                   \\{\r\n                                       &#34;key1&#34;:&#34;value1&#34;,\r\n                                       &#34;key2&#34;:&#34;value2&#34;\r\n                                   \\}\r\n                 \\]\r\n           \\}\r\n       \\}\r\n   \\},\r\n   &#34;images&#34;: \\[\r\n     \\{\r\n           &#34;as&#34;:&#34;optional, image for&#34;,\r\n           &#34;caption&#34;:&#34;optional&#34;,\r\n           &#34;height&#34;:10,\r\n           &#34;width&#34;:10,\r\n           &#34;imageUrl&#34;:&#34;http://img-url-required&#34;,\r\n           &#34;smallImageUrl&#34;:&#34;http://small-img-url-required&#34;\r\n     \\}\r\n   \\],\r\n   &#34;thumbnailUrl&#34;: &#34;optional, thumbnail url&#34;,\r\n   &#34;status&#34;: &#34;ACTIVE&#34;,\r\n   &#34;listable&#34;: true,\r\n   &#34;purchasable&#34;: true,\r\n   &#34;itemType&#34;: &#34;APP(allowed: [APP,COINS,INGAMEITEM,CODE,BUNDLE])&#34;,\r\n   &#34;name&#34;: &#34;optional&#34;,\r\n   &#34;entitlementType&#34;: &#34;DURABLE(allowed:[DURABLE,CONSUMABLE], should be CONSUMABLE when item type is COINS)&#34;, \r\n   &#34;useCount&#34;: 1(optional, required if the entitlement type is consumable),\r\n   &#34;stackable&#34;: false,\r\n   &#34;appId&#34;: &#34;optional, required if itemType is APP&#34;,\r\n   &#34;baseAppId&#34;: &#34;optional, set value of game app id if you want to link to a game&#34;,\r\n   &#34;appType&#34;: &#34;GAME(optional, required if itemType is APP)&#34;,\r\n   &#34;seasonType&#34;: &#34;PASS(optional, required if itemType is SEASON)&#34;,\r\n   &#34;sku&#34;: &#34;optional, commonly unique item code&#34;,\r\n   &#34;targetCurrencyCode&#34;: &#34;optional, required if itemType is COINS&#34;,\r\n   &#34;targetNamespace&#34;: &#34;optional, required when itemType is INGAMEITEM, the targetNamespace will only take effect when the item\r\n   created belongs to the publisher namespace&#34;,\r\n   &#34;regionData&#34;: \\{\r\n       &#34;US(store&#39;s default region is required)&#34;: \\[\r\n         \\{\r\n            &#34;price&#34;:10,\r\n            &#34;discountPercentage&#34;:0(integer, optional, range[0,100], discountedPrice = price\\*((100 - discountPercentage) \\* 0.01),\r\n              if it is not 0, will use it to calculate discounted price),\r\n            &#34;discountAmount&#34;:0(integer, optional, range[0,itemPrice], will use it to calculate discounted price if discountPercentage is 0),\r\n            &#34;currencyCode&#34;:&#34;code(required, example: USD)&#34;,\r\n            &#34;currencyNamespace&#34;:&#34;test-ns-required&#34;,\r\n            &#34;trialPrice&#34;:5(required while fixedTrialCycles set, should &gt;=0 and &lt;= price, will same as price if not present),\r\n            &#34;purchaseAt&#34;:&#34;optional yyyy-MM-dd&#39;T&#39;HH:mm:ss.SSS&#39;Z&#39;&#34;,\r\n            &#34;expireAt&#34;:&#34;optional yyyy-MM-dd&#39;T&#39;HH:mm:ss.SSS&#39;Z&#39;&#34;,\r\n            &#34;discountPurchaseAt&#34;:&#34;optional yyyy-MM-dd&#39;T&#39;HH:mm:ss.SSS&#39;Z&#39;&#34;,\r\n            &#34;discountExpireAt&#34;:&#34;optional yyyy-MM-dd&#39;T&#39;HH:mm:ss.SSS&#39;Z&#39;&#34;\r\n         \\}\r\n       \\]\r\n   \\},\r\n   &#34;itemIds&#34;: \\[\r\n       &#34;itemId&#34;\r\n   \\],\r\n   &#34;recurring&#34;: \\{\r\n       &#34;cycle&#34;:&#34;MONTHLY(allowed: [WEEKLY,MONTHLY,QUARTERLY,YEARLY])&#34;,\r\n       &#34;fixedFreeDays&#34;:0(integer, fixed free days, 0 means not set),\r\n       &#34;fixedTrialCycles&#34;:0(integer, fixed trial cycles, 0 means not set, will not take effect if fixedFreeDays set),\r\n       &#34;graceDays&#34;:7(integer, recurring grace days, retry recurring charge within configured days if charge fail, default 7)\r\n   \\},\r\n   &#34;tags&#34;: \\[\r\n       &#34;tag&#34;\r\n   \\],\r\n   &#34;features&#34;: \\[\r\n       &#34;feature&#34;\r\n   \\],\r\n   &#34;clazz&#34;: &#34;weapon&#34;,\r\n   &#34;boothName&#34;: &#34;C_campaign1&#34;,\r\n   &#34;displayOrder&#34;: 1000,\r\n   &#34;ext&#34;: \\{\r\n       &#34;properties&#34;:\\[\r\n           \\{\r\n               &#34;key1&#34;:&#34;value1&#34;,\r\n               &#34;key2&#34;:&#34;value2&#34;\r\n           \\}\r\n       \\],\r\n       &#34;functions&#34;:\\[\r\n           \\{\r\n               &#34;key1&#34;:&#34;value1&#34;,\r\n               &#34;key2&#34;:&#34;value2&#34;\r\n           \\}\r\n       \\]\r\n   \\},\r\n   &#34;maxCountPerUser&#34;: 1(integer, optional, -1 means UNLIMITED),\r\n   &#34;maxCount&#34;: 1(integer, optional, -1 means UNLIMITED, new value should &gt;= old value if both old value and new value is\r\n   limited, unset when item type is CODE)\r\n}&lt;/code&gt;&lt;/pre&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:ITEM&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: updated item data&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1items~1{itemId}/put/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:ITEM [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1items~1{itemId}/delete/description",
    "value": "This API is used to delete an item permanently, usually for test purpose.&lt;b&gt;DO NOT delete already published item.&lt;/b&gt;&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:ITEM&#34;, action=8 (DELETE)&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1items~1{itemId}/delete/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:ITEM [DELETE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1stores/post/description",
    "value": "This API is used to create a non published store in a namespace.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:STORE&#34;, action=1 (CREATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: created store data&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1stores/post/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:STORE [CREATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1stores/get/description",
    "value": "This API is used to list stores in a namespace.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:STORE&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: the list of stores&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1stores/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:STORE [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1stores~1import/put/description",
    "value": "This API is used to import a store.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:STORE&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1stores~1import/put/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:STORE [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1subscriptions~1subscribable~1byItemId/get/description",
    "value": "Check user subscription subscribable by itemId, ACTIVE USER subscription can&#39;t do subscribe again.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:SUBSCRIPTION&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: subscribable info&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1subscriptions~1subscribable~1byItemId/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:SUBSCRIPTION [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1iap~1config~1epicgames/get/description",
    "value": "Get epic games iap config.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:IAP:CONFIG&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: epic games iap config&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1iap~1config~1epicgames/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:IAP:CONFIG [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1iap~1config~1epicgames/put/description",
    "value": "Update epic games iap config. Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:IAP:CONFIG&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: updated epic games iap config&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1iap~1config~1epicgames/put/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:IAP:CONFIG [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1iap~1config~1epicgames/delete/description",
    "value": "Delete epic games iap config.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:IAP:CONFIG&#34;, action=8 (DELETE)&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1iap~1config~1epicgames/delete/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:IAP:CONFIG [DELETE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1me~1entitlements~1ownershipToken/get/description",
    "value": "Gets an entitlement ownership token of specified itemIds, skus and appIds&lt;p&gt;The decoded ownership token header like below:&lt;p&gt;&lt;pre&gt;&lt;code&gt;{\r\n  &#34;kid&#34;: &#34;9fd4cd5f991cebe3323605cd12d3b8bfdfc73fa4&#34;,\r\n  &#34;typ&#34;: &#34;JWT&#34;,\r\n  &#34;alg&#34;: &#34;RS256&#34;\r\n}\r\n&lt;/code&gt;&lt;/pre&gt;That you can get the jwks by api &lt;baseUrl&gt;/platform/jwks, if the configured private key is same as IAM, &lt;p&gt;you can also get jwks from IAM endpoint. &lt;p&gt;The decoded ownership token payload like below:&lt;p&gt;&lt;pre&gt;&lt;code&gt;{\r\n &#34;namespace&#34;: &#34;accelbyte&#34;,\r\n &#34;entitlements&#34;: [\r\n  {\r\n    &#34;itemId&#34;: &#34;4c1296291f604c199f7bb7f0ee02e5f8&#34;,\r\n    &#34;appType&#34;: null,\r\n    &#34;appId&#34;: null,\r\n    &#34;namespace&#34;: &#34;accelbyte&#34;,\r\n    &#34;itemNamespace&#34;: &#34;accelbyte&#34;,\r\n    &#34;sku&#34;: &#34;prime-plus&#34;\r\n  },\r\n  {\r\n    &#34;itemId&#34;: &#34;e8f4974cf45c4e1f8d4f0c6990c518bd&#34;,\r\n    &#34;appType&#34;: &#34;GAME&#34;,\r\n    &#34;appId&#34;: &#34;omeganebula&#34;,\r\n    &#34;namespace&#34;: &#34;accelbyte&#34;,\r\n    &#34;itemNamespace&#34;: &#34;accelbyte&#34;,\r\n    &#34;sku&#34;: &#34;APPG005ON&#34;\r\n  }\r\n ],\r\n&#34;sub&#34;: &#34;66459eb6a4e44e6fb0040bd20c1079a5&#34;,\r\n&#34;exp&#34;: 1619624360,\r\n&#34;iat&#34;: 1619624060\r\n}\r\n&lt;/code&gt;&lt;/pre&gt;&lt;b&gt;if there&#39;s no active entitlement for the specific params, the entitlements section will be omitted&lt;/b&gt;.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;NAMESPACE:{namespace}:ENTITLEMENT&#34;, action=2 (READ)&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1me~1entitlements~1ownershipToken/get/security/1",
    "value": {
      "HasPermission": [
        "NAMESPACE:{namespace}:ENTITLEMENT [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1iap~1psn~1sync/put/description",
    "value": "Synchronize with entitlements in PSN Store.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;NAMESPACE:{namespace}:USER:{userId}:IAP&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: result of synchronization&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1iap~1psn~1sync/put/security/1",
    "value": {
      "HasPermission": [
        "NAMESPACE:{namespace}:USER:{userId}:IAP [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1public~1namespaces~1{namespace}~1stores/get/description",
    "value": "This API is used to list all stores in a namespace.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Optional permission&lt;/i&gt;: resource=&#34;PREVIEW&#34;, action=1(CREATE) (user with this permission can view draft store)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Optional permission&lt;/i&gt;: resource=&#34;SANDBOX&#34;, action=1(CREATE) (user with this permission can view draft store)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: the list of stores&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1categories~1{categoryPath}~1children/get/description",
    "value": "This API is used to get child categories by category path.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:CATEGORY&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: list of child categories data&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1categories~1{categoryPath}~1children/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:CATEGORY [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1wallets~1{walletId}~1debit/put/description",
    "value": "Debit a user wallet.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:WALLET&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1wallets~1{walletId}~1debit/put/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:WALLET [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1iap~1config~1steam/get/description",
    "value": "Get steam iap config.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:IAP:CONFIG&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: steam iap config&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1iap~1config~1steam/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:IAP:CONFIG [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1iap~1config~1steam/put/description",
    "value": "Update steam iap config. Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:IAP:CONFIG&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: updated steam iap config&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1iap~1config~1steam/put/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:IAP:CONFIG [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1iap~1config~1steam/delete/description",
    "value": "Delete steam iap config.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:IAP:CONFIG&#34;, action=8 (DELETE)&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1iap~1config~1steam/delete/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:IAP:CONFIG [DELETE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1payment~1config~1merchant~1{id}~1stripeconfig~1test/get/description",
    "value": "Test stripe configuration in payment merchant config. Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:PAYMENT:CONFIG&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: test adyen config&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1payment~1config~1merchant~1{id}~1stripeconfig~1test/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:PAYMENT:CONFIG [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1payment~1config~1provider~1{id}/put/description",
    "value": "Update payment provider config.&lt;br&gt;&lt;pre&gt;&lt;p&gt;&lt;strong&gt;Request Body Parameters:&lt;/strong&gt;&lt;/p&gt;&lt;pre&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;Parameter&lt;/td&gt;&lt;td&gt;Type&lt;/td&gt;&lt;td&gt;Required&lt;/td&gt;&lt;td&gt;Description&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;namespace&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;namespace, * indicates all namespace&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;region&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;region, * indicates all regions&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;aggregate&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;td&gt;aggregate payment provider, such as XSOLLA, ADYEN, STRIPE&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;specials&lt;/td&gt;&lt;td&gt;List&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;td&gt;special payment provider, such as ALIPAY, WXPAY&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/pre&gt;payment provider applied has priority: &lt;ol&gt;&lt;li&gt;namespace and region match&lt;/li&gt;&lt;li&gt;namespace matches and region is *&lt;/li&gt;&lt;li&gt;region matches and namespace is *&lt;/li&gt;&lt;li&gt;namespace and region are *&lt;/li&gt;&lt;/ol&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:PAYMENT:CONFIG&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: payment provider config&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1payment~1config~1provider~1{id}/put/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:PAYMENT:CONFIG [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1payment~1config~1provider~1{id}/delete/description",
    "value": "Delete payment provider config.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:PAYMENT:CONFIG&#34;, action=8 (DELETE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: payment provider config&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1payment~1config~1provider~1{id}/delete/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:PAYMENT:CONFIG [DELETE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1payment~1config~1merchant~1{id}~1alipayconfig~1test/get/description",
    "value": "Test AliPay configuration in payment merchant config. Reference: &lt;a href=&#34;https://docs.open.alipay.com/270/alipay.trade.page.pay&#34;&gt;Alipay Document&lt;/a&gt;.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:PAYMENT:CONFIG&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: test alipay config&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1payment~1config~1merchant~1{id}~1alipayconfig~1test/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:PAYMENT:CONFIG [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1entitlements~1bySku/get/description",
    "value": "Get user entitlement by sku.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:ENTITLEMENT&#34;, action=2 (READ)&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1entitlements~1bySku/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:ENTITLEMENT [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1public~1namespaces~1{namespace}~1items~1{itemId}~1app~1locale/get/description",
    "value": "This API is used to get an app in locale. If app not exist in specific region, default region app will return.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Optional permission&lt;/i&gt;: resource=&#34;PREVIEW&#34;, action=1(CREATE) (user with this permission can view draft store app)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Optional permission&lt;/i&gt;: resource=&#34;SANDBOX&#34;, action=1(CREATE) (user with this permission can view draft store app)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: app data&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1subscriptions/get/description",
    "value": "Query subscriptions.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:SUBSCRIPTION&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: paginated subscriptions&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1subscriptions/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:SUBSCRIPTION [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1currencies~1{currencyCode}/put/description",
    "value": "Update a currency by currency code.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:CURRENCY&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: updated currency&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1currencies~1{currencyCode}/put/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:CURRENCY [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1currencies~1{currencyCode}/delete/description",
    "value": "Delete a currency by currency code.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:CURRENCY&#34;, action=8 (DELETE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: &lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1currencies~1{currencyCode}/delete/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:CURRENCY [DELETE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1stores~1published~1backup/get/description",
    "value": "This API is used to get a store&#39;s backup. &lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:STORE&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: store backup info&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1stores~1published~1backup/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:STORE [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1payment~1config~1merchant~1{id}~1paypalconfig~1test/get/description",
    "value": "Test PayPal configuration in payment merchant config. Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:PAYMENT:CONFIG&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: test result&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1payment~1config~1merchant~1{id}~1paypalconfig~1test/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:PAYMENT:CONFIG [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1payment~1config~1merchant~1{id}~1wxpayconfig~1test/get/description",
    "value": "Test WxPay configuration in payment merchant config. Reference: &lt;a href=&#34;https://pay.weixin.qq.com/wiki/doc/api/native.php?chapter=9_1&#34;&gt;WxPay Document&lt;/a&gt;.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:PAYMENT:CONFIG&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: test WxPay config&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1payment~1config~1merchant~1{id}~1wxpayconfig~1test/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:PAYMENT:CONFIG [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1payment~1config~1provider~1matched/get/description",
    "value": "Debug matched payment provider config.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:PAYMENT:CONFIG&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: payment provider config&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1payment~1config~1provider~1matched/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:PAYMENT:CONFIG [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1codes~1campaigns~1{campaignId}~1disable~1bulk/put/description",
    "value": "Bulk disable codes.&lt;p&gt;Bulk disable campaign codes, all matched codes will be disabled except those have already been redeemed.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:CAMPAIGN&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: the number of code actually disabled&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1codes~1campaigns~1{campaignId}~1disable~1bulk/put/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:CAMPAIGN [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1rewards~1{rewardId}~1match/put/description",
    "value": "&lt;b&gt;[TEST FACILITY ONLY] Forbidden in live environment. &lt;/b&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:REWARD&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: match result&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1rewards~1{rewardId}~1match/put/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:REWARD [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1keygroups~1{keyGroupId}~1keys/post/description",
    "value": "This API is used to upload keys with csv format to a key group.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:KEYGROUP&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: item data&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1keygroups~1{keyGroupId}~1keys/post/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:KEYGROUP [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1keygroups~1{keyGroupId}~1keys/get/description",
    "value": "This API is used to list keys of a key group.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:KEYGROUP&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: keys&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1keygroups~1{keyGroupId}~1keys/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:KEYGROUP [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1items/post/description",
    "value": "This API is used to create an item. APP item only can created in publisher namespace.&lt;p&gt;An item create example:&lt;p&gt;&lt;pre&gt;&lt;code&gt;{\r\n   &#34;categoryPath&#34;: &#34;/games&#34;,\r\n   &#34;localizations&#34;: \\{\r\n       &#34;en&#34;: \\{\r\n           &#34;title&#34;:&#34;required&#34;,\r\n           &#34;description&#34;:&#34;optional&#34;,\r\n           &#34;longDescription&#34;:&#34;optional&#34;,\r\n           &#34;localExt&#34;: \\{\r\n                  &#34;properties&#34;:\\[\r\n                                   \\{\r\n                                       &#34;key1&#34;:&#34;value1&#34;,\r\n                                       &#34;key2&#34;:&#34;value2&#34;\r\n                                   \\}\r\n                  \\],\r\n                  &#34;functions&#34;:\\[\r\n                                   \\{\r\n                                       &#34;key1&#34;:&#34;value1&#34;,\r\n                                       &#34;key2&#34;:&#34;value2&#34;\r\n                                   \\}\r\n                 \\]\r\n           \\}\r\n        \\}\r\n   \\},\r\n   &#34;images&#34;: \\[\r\n     \\{\r\n           &#34;as&#34;:&#34;optional, image for&#34;,\r\n           &#34;caption&#34;:&#34;optional&#34;,\r\n           &#34;height&#34;:10,\r\n           &#34;width&#34;:10,\r\n           &#34;imageUrl&#34;:&#34;http://img-url-required&#34;,\r\n           &#34;smallImageUrl&#34;:&#34;http://small-img-url-required&#34;\r\n     \\}\r\n   \\],\r\n   &#34;thumbnailUrl&#34;: &#34;optional, thumbnail url&#34;,\r\n   &#34;status&#34;: &#34;ACTIVE&#34;,\r\n   &#34;listable&#34;: true,\r\n   &#34;purchasable&#34;: true,\r\n   &#34;itemType&#34;: &#34;APP(allowed: [APP,COINS,INGAMEITEM,CODE,BUNDLE])&#34;,\r\n   &#34;name&#34;: &#34;required, also will be used as entitlement name&#34;,\r\n   &#34;entitlementType&#34;: &#34;DURABLE(allowed:[DURABLE,CONSUMABLE], should be CONSUMABLE when item type is COINS)&#34;, \r\n   &#34;useCount&#34;: 1(optional, required if the entitlement type is consumable),\r\n   &#34;stackable&#34;: false,\r\n   &#34;appId&#34;: &#34;optional, required if itemType is APP&#34;,\r\n   &#34;appType&#34;: &#34;GAME(optional, required if itemType is APP)&#34;,\r\n   &#34;seasonType&#34;: &#34;PASS(optional, required if itemType is SEASON)&#34;,\r\n   &#34;baseAppId&#34;: &#34;optional, set value of game app id if you want to link to a game&#34;,\r\n   &#34;targetCurrencyCode&#34;: &#34;optional, required if itemType is COINS&#34;,\r\n   &#34;targetNamespace&#34;: &#34;optional, required when itemType is INGAMEITEM, the targetNamespace will only take effect when the item\r\n   created belongs to the publisher namespace&#34;,\r\n   &#34;sku&#34;: &#34;optional, commonly unique item code&#34;,\r\n   &#34;regionData&#34;: \\{\r\n       &#34;US(store&#39;s default region is required)&#34;: \\[\r\n         \\{\r\n            &#34;price&#34;:10,\r\n            &#34;discountPercentage&#34;: 0(integer, optional, range[0,100], discountedPrice = price  \\* ((100 - discountPercentage) \\* 0.01),\r\n              will use it to calculate discounted price if it is not 0),\r\n            &#34;discountAmount&#34;:0(integer, optional, range[0,itemPrice], will use it to calculate discounted price if discountPercentage is 0),\r\n            &#34;currencyCode&#34;:&#34;code(required, example: USD)&#34;,\r\n            &#34;currencyNamespace&#34;:&#34;test-ns-required&#34;,\r\n            &#34;trialPrice&#34;:5(required while fixedTrialCycles set, should &gt;=0 and &lt;= price, will same as price if not present),\r\n            &#34;purchaseAt&#34;:&#34;optional yyyy-MM-dd&#39;T&#39;HH:mm:ss.SSS&#39;Z&#39;&#34;,\r\n            &#34;expireAt&#34;:&#34;optional yyyy-MM-dd&#39;T&#39;HH:mm:ss.SSS&#39;Z&#39;&#34;,\r\n            &#34;discountPurchaseAt&#34;:&#34;optional yyyy-MM-dd&#39;T&#39;HH:mm:ss.SSS&#39;Z&#39;&#34;,\r\n            &#34;discountExpireAt&#34;:&#34;optional yyyy-MM-dd&#39;T&#39;HH:mm:ss.SSS&#39;Z&#39;&#34;\r\n         \\}\r\n       \\]\r\n   \\},\r\n   &#34;itemIds&#34;: \\[\r\n       &#34;itemId&#34;\r\n   \\],\r\n   &#34;recurring&#34;: \\{\r\n       &#34;cycle&#34;:&#34;MONTHLY(allowed: [WEEKLY,MONTHLY,QUARTERLY,YEARLY])&#34;,\r\n       &#34;fixedFreeDays&#34;:0(integer, fixed free days, 0 means not set),\r\n       &#34;fixedTrialCycles&#34;:0(integer, fixed trial cycles, 0 means not set, will not take effect if fixedFreeDays set),\r\n       &#34;graceDays&#34;:7(integer, recurring grace days, retry recurring charge within configured days if charge fail, default 7)\r\n   \\},\r\n   &#34;tags&#34;: \\[\r\n       &#34;tag&#34;\r\n   \\],\r\n   &#34;features&#34;: \\[\r\n       &#34;feature&#34;\r\n   \\],\r\n   &#34;clazz&#34;: &#34;weapon&#34;,\r\n   &#34;boothName&#34;: &#34;C_campaign1&#34;,\r\n   &#34;displayOrder&#34;: 1000,\r\n   &#34;ext&#34;: \\{\r\n       &#34;properties&#34;:\\[\r\n           \\{\r\n               &#34;key1&#34;:&#34;value1&#34;,\r\n               &#34;key2&#34;:&#34;value2&#34;\r\n           \\}\r\n       \\],\r\n       &#34;functions&#34;:\\[\r\n           \\{\r\n               &#34;key1&#34;:&#34;value1&#34;,\r\n               &#34;key2&#34;:&#34;value2&#34;\r\n           \\}\r\n       \\]\r\n   \\},\r\n   &#34;maxCountPerUser&#34;: 1(integer, optional, -1 means UNLIMITED),\r\n   &#34;maxCount&#34;: 1(integer, optional, -1 means UNLIMITED, unset when itemType is CODE)\r\n}&lt;/code&gt;&lt;/pre&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:ITEM&#34;, action=1 (CREATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: created item data&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1items/post/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:ITEM [CREATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1items/put/description",
    "value": "This API is used to sync an in game item in game namespace to publisher namespace, at current BUNDLE can&#39;t be synced.&lt;p&gt;The synced item has an additional field targetItemId besides targetNamespace, mostly this item should not modified manually again. &lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:ITEM&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: item data&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1items/put/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:ITEM [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1public~1namespaces~1{namespace}~1items~1search/get/description",
    "value": "This API is used to search items by keyword in title, description and long description, It&#39;s language constrained, also if item not exist in specific region, default region item will return.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Optional permission&lt;/i&gt;: resource=&#34;PREVIEW&#34;, action=1(CREATE) (user with this permission can view draft store item)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Optional permission&lt;/i&gt;: resource=&#34;SANDBOX&#34;, action=1(CREATE) (user with this permission can view draft store item)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: the list of items&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1payment~1config~1provider~1aggregate/get/description",
    "value": "Get aggregate payment providers, such as XSOLLA, ADYEN.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:PAYMENT:CONFIG&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: payment provider list&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1payment~1config~1provider~1aggregate/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:PAYMENT:CONFIG [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1anonymization~1orders/delete/description",
    "value": "Anonymize order. At current it will only anonymize order, order history.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:ANONYMIZATION&#34;, action=8 (DELETE)&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1anonymization~1orders/delete/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:ANONYMIZATION [DELETE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1rewards~1{rewardId}/get/description",
    "value": "This API is used to get reward by reward Id.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:REWARD&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: reward instance&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1rewards~1{rewardId}/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:REWARD [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1rewards~1{rewardId}/put/description",
    "value": "This API is used to update a reward.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:REWARD&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: reward instance&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1rewards~1{rewardId}/put/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:REWARD [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1rewards~1{rewardId}/delete/description",
    "value": "This API is used to delete a reward by reward Id. &lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:REWARD&#34;, action=8 (DELETE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: the deleted reward data&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1rewards~1{rewardId}/delete/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:REWARD [DELETE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1payment~1orders/post/description",
    "value": "&lt;b&gt;[SERVICE COMMUNICATION ONLY]&lt;/b&gt; This API is used to create payment order from justice service. The result contains the payment station url.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:PAYMENT&#34;, action=1 (CREATE)&lt;/li&gt;&lt;li&gt;It will be forbidden while the user is banned: PAYMENT_INITIATE or ORDER_AND_PAYMENT&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: created order&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1payment~1orders/post/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:PAYMENT [CREATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1subscriptions~1activities/get/description",
    "value": "Get user subscription activity.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:SUBSCRIPTION&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: paginated subscription activity&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1subscriptions~1activities/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:SUBSCRIPTION [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1categories~1{categoryPath}~1descendants/get/description",
    "value": "This API is used to get descendant categories by category path.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:CATEGORY&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: list of descendant categories data&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1categories~1{categoryPath}~1descendants/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:CATEGORY [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1stores~1published~1rollback/put/description",
    "value": "This API is used to rollback a published store. &lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:STORE&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: updated store info&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1stores~1published~1rollback/put/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:STORE [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1payment~1config~1merchant~1stripeconfig~1test/post/description",
    "value": "Test stripe configuration. &lt;h4&gt;Check List:&lt;/h4&gt; &lt;ul&gt;&lt;li&gt;secretKey&lt;/li&gt;&lt;li&gt;allowedPaymentMethodTypes&lt;/li&gt;&lt;/ul&gt;&lt;h4&gt;Non-check list:&lt;/h4&gt;&lt;ul&gt;&lt;li&gt;publishableKey&lt;/li&gt;&lt;li&gt;webhookSecret&lt;/li&gt;&lt;/ul&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:PAYMENT:CONFIG&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: test adyen config&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1payment~1config~1merchant~1stripeconfig~1test/post/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:PAYMENT:CONFIG [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1items~1byAppId/get/description",
    "value": "This API is used to get the item by appId.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:ITEM&#34;, action=2 (READ)&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: the item with that appId&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1items~1byAppId/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:ITEM [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1subscriptions~1subscribable~1byItemId/get/description",
    "value": "Check user subscription subscribable by itemId, ACTIVE USER subscription can&#39;t do subscribe again.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;NAMESPACE:{namespace}:USER:{userId}:SUBSCRIPTION&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: subscribable info&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1subscriptions~1subscribable~1byItemId/get/security/1",
    "value": {
      "HasPermission": [
        "NAMESPACE:{namespace}:USER:{userId}:SUBSCRIPTION [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1me~1wallets~1{currencyCode}/get/description",
    "value": "get my wallet by currency code and namespace.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;NAMESPACE:{namespace}:WALLET&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: wallet info&lt;/li&gt;&lt;li&gt;&lt;i&gt;Path&#39;s namespace&lt;/i&gt; : &lt;ul&gt;   &lt;li&gt;can be filled with &lt;b&gt;publisher namespace&lt;/b&gt; in order to get &lt;b&gt;publisher user wallet&lt;/b&gt;&lt;/li&gt;   &lt;li&gt;can be filled with &lt;b&gt;game namespace&lt;/b&gt; in order to get &lt;b&gt;game user wallet&lt;/b&gt;&lt;/li&gt;   &lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1me~1wallets~1{currencyCode}/get/security/1",
    "value": {
      "HasPermission": [
        "NAMESPACE:{namespace}:WALLET [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1items~1{itemId}~1app/get/description",
    "value": "This API is used to get an app info.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:ITEM&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: app data&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1items~1{itemId}~1app/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:ITEM [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1items~1{itemId}~1app/put/description",
    "value": "This API is used to update an app.&lt;p&gt;An app update example:&lt;p&gt;&lt;pre&gt;&lt;code&gt;{\r\n  &#34;developer&#34;: &#34;accelbyte&#34;,\r\n  &#34;publisher&#34;: &#34;accelbyte&#34;,\r\n  &#34;websiteUrl&#34;: &#34;http://accelbyte.io&#34;,\r\n  &#34;forumUrl&#34;: &#34;http://accelbyte.io&#34;,\r\n  &#34;platforms&#34;: \\[&#34;Windows(allowed values: Windows, MacOS, Linux, IOS, Android)&#34;\\],\r\n  &#34;platformRequirements&#34;: \\{\r\n    &#34;Windows&#34;: \\[\r\n      \\{\r\n        &#34;label&#34;:&#34;minimum(can be minimum or recommended)&#34;,\r\n        &#34;osVersion&#34;:&#34;os version&#34;,\r\n        &#34;processor&#34;:&#34;processor&#34;,\r\n        &#34;ram&#34;:&#34;RAM&#34;,\r\n        &#34;graphics&#34;:&#34;graphics&#34;,\r\n        &#34;directXVersion&#34;:&#34;directXVersion&#34;,\r\n        &#34;diskSpace&#34;:&#34;diskSpace&#34;,\r\n        &#34;soundCard&#34;:&#34;soundCard&#34;,\r\n        &#34;additionals&#34;:&#34;additionals&#34;\r\n      \\}\r\n     \\]\r\n  \\},\r\n  &#34;carousel&#34;: \\[\r\n    \\{\r\n      &#34;type&#34;:&#34;image(allowed values: image, video)&#34;,\r\n      &#34;videoSource&#34;:&#34;generic(allowed values:generic, youtube, viemo)&#34;,\r\n      &#34;url&#34;:&#34;url&#34;,\r\n      &#34;alt&#34;:&#34;alternative url or text&#34;,\r\n      &#34;thumbnailUrl&#34;:&#34;thumbnail url&#34;,\r\n      &#34;previewUrl&#34;:&#34;preview url&#34;,\r\n    \\}\r\n  \\],\r\n  &#34;localizations&#34;: \\{\r\n    &#34;en&#34;: \\{\r\n      &#34;slogan&#34;:&#34;slogan&#34;,\r\n      &#34;announcement&#34;:&#34;announcement&#34;,\r\n    \\}\r\n  \\},\r\n  &#34;primaryGenre&#34;: &#34;Action&#34;,\r\n  &#34;genres&#34;: \\[&#34;Action&#34;, &#34;Adventure&#34;\\],\r\n  &#34;players&#34;: \\[&#34;Single&#34;\\],\r\n  &#34;releaseDate&#34;: &#34;optional yyyy-MM-dd&#39;T&#39;HH:mm:ss.SSS&#39;Z&#39;&#34;\r\n}&lt;/code&gt;&lt;/pre&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:ITEM&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: updated app data&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1items~1{itemId}~1app/put/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:ITEM [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1campaigns/post/description",
    "value": "Create campaign.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:CAMPAIGN&#34;, action=1 (CREATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: created campaign&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1campaigns/post/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:CAMPAIGN [CREATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1campaigns/get/description",
    "value": "Query campaigns, if name is presented, it&#39;s fuzzy match.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:CAMPAIGN&#34;, action=2 (READ) (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: slice of campaigns&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1campaigns/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:CAMPAIGN [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1payment~1orders/get/description",
    "value": "Sync payment orders. If response contains nextEvaluatedKey, please use it as query param in the next call to fetch the next batch, a batch has 1000 elements or less.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:PAYMENT&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: sync payment orders&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1payment~1orders/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:PAYMENT [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1iap~1epicgames~1sync/put/description",
    "value": "Sync epic games inventory&#39;s items.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;NAMESPACE:{namespace}:USER:{userId}:IAP&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: &lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1iap~1epicgames~1sync/put/security/1",
    "value": {
      "HasPermission": [
        "NAMESPACE:{namespace}:USER:{userId}:IAP [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1payment~1config~1merchant~1{id}~1wxpayconfig~1cert/put/description",
    "value": "Upload wxpay cert file.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:PAYMENT:CONFIG&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: updated payment merchant config&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1payment~1config~1merchant~1{id}~1wxpayconfig~1cert/put/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:PAYMENT:CONFIG [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1wallets~1{walletId}/get/description",
    "value": "get a user wallet.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:WALLET&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: wallet info&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1wallets~1{walletId}/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:WALLET [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1public~1namespaces~1{namespace}~1categories~1{categoryPath}/get/description",
    "value": "This API is used to get category by category path.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Optional permission&lt;/i&gt;: resource=&#34;PREVIEW&#34;, action=1(CREATE) (user with this permission can view draft store category)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Optional permission&lt;/i&gt;: resource=&#34;SANDBOX&#34;, action=1 (CREATE)(user with this permission can view draft store category)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: category data&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "replace",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1entitlements~1ownership~1any/get/description",
    "value": "Exists any user active entitlement of specified itemIds, skus and appIds&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;NAMESPACE:{namespace}:USER:{userId}:ENTITLEMENT&#34;, action=2 (READ)&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1entitlements~1ownership~1any/get/security/1",
    "value": {
      "HasPermission": [
        "NAMESPACE:{namespace}:USER:{userId}:ENTITLEMENT [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1payment~1config~1merchant~1{id}~1xsollaconfig/put/description",
    "value": "Update xsolla configuration. Reference: &lt;a href=&#34;https://developers.xsolla.com/?#simple-checkout&#34;&gt;Xsolla Document&lt;/a&gt;.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:PAYMENT:CONFIG&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: updated payment merchant config&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1payment~1config~1merchant~1{id}~1xsollaconfig/put/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:PAYMENT:CONFIG [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1entitlements~1{entitlementId}~1decrement/put/description",
    "value": "Consume user entitlement. If the entitlement useCount is 0, the status will be CONSUMED.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:ENTITLEMENT&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: consumed entitlement&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1entitlements~1{entitlementId}~1decrement/put/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:ENTITLEMENT [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1public~1namespaces~1{namespace}~1currencies/get/description",
    "value": "List currencies of a namespace.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: Currency List&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "replace",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1subscriptions/post/description",
    "value": "Subscribe a subscription. Support both real and virtual payment. Need go through payment flow using the paymentOrderNo if paymentFlowRequired true.&lt;br&gt;&lt;b&gt;ACTIVE USER subscription can&#39;t do subscribe again.&lt;/b&gt;&lt;br&gt;&lt;b&gt;The next billing date will be X(default 4) hours before the current period ends if correctly subscribed.&lt;/b&gt;&lt;br&gt;User with permission SANDBOX will create sandbox subscription that not real paid.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;NAMESPACE:{namespace}:USER:{userId}:SUBSCRIPTION&#34;, action=1 (CREATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Optional permission(user with this permission will create sandbox subscription)&lt;/i&gt;: resource=&#34;SANDBOX&#34;, action=1 (CREATE)&lt;/li&gt;&lt;li&gt;It will be forbidden while the user is banned: ORDER_INITIATE or ORDER_AND_PAYMENT&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: created subscription&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1subscriptions/post/security/1",
    "value": {
      "HasPermission": [
        "NAMESPACE:{namespace}:USER:{userId}:SUBSCRIPTION [CREATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1subscriptions/get/description",
    "value": "Query user subscriptions.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;NAMESPACE:{namespace}:USER:{userId}:SUBSCRIPTION&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: paginated subscription&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1subscriptions/get/security/1",
    "value": {
      "HasPermission": [
        "NAMESPACE:{namespace}:USER:{userId}:SUBSCRIPTION [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1keygroups~1{keyGroupId}~1dynamic/get/description",
    "value": "Get key group dynamic.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:KEYGROUP&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: key group info&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1keygroups~1{keyGroupId}~1dynamic/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:KEYGROUP [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1stores~1{storeId}~1clone/put/description",
    "value": "This API is used to clone a store. Usually clone a draft store to published store because published store can&#39;t directly edit content.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:STORE&#34;, action=1 (CREATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: clone store info&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1stores~1{storeId}~1clone/put/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:STORE [CREATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1items~1{itemId}~1return/put/description",
    "value": "&lt;b&gt;[SERVICE COMMUNICATION ONLY]&lt;/b&gt; This api is used for returning a published item while the item is maxCount limited, it will increase the sale available count if orderNo already acquired.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:ITEM&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1items~1{itemId}~1return/put/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:ITEM [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1payment~1config~1merchant~1wxpayconfig~1test/post/description",
    "value": "Test WxPay configuration. Reference: &lt;a href=&#34;https://pay.weixin.qq.com/wiki/doc/api/native.php?chapter=9_1&#34;&gt;WxPay Document&lt;/a&gt;.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:PAYMENT:CONFIG&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: test WxPay config&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1payment~1config~1merchant~1wxpayconfig~1test/post/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:PAYMENT:CONFIG [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1tickets~1{boothName}~1id/get/description",
    "value": "Get ticket(code/key) booth ID.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:TICKET&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: ticket booth id&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1tickets~1{boothName}~1id/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:TICKET [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1iap~1config~1google~1cert/put/description",
    "value": "Upload google play p12 file.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:IAP:CONFIG&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: updated google iap config&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1iap~1config~1google~1cert/put/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:IAP:CONFIG [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1entitlements/get/description",
    "value": "Query entitlements.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:ENTITLEMENT&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: entitlement list&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1entitlements/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:ENTITLEMENT [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1payment~1config~1callback/get/description",
    "value": "Get payment callback configuration.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:PAYMENT:CONFIG&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: Payment callback config&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1payment~1config~1callback/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:PAYMENT:CONFIG [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1payment~1config~1callback/put/description",
    "value": "Update payment callback configuration.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:PAYMENT:CONFIG&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: Payment callback config&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1payment~1config~1callback/put/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:PAYMENT:CONFIG [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1public~1namespaces~1{namespace}~1payment~1orders~1{paymentOrderNo}~1info/get/description",
    "value": "Get payment order info.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: Payment order details&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1wallets~1{walletId}~1transactions/get/description",
    "value": "List user wallet transactions ordered by create time desc.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:WALLET&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: wallet transaction info&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1wallets~1{walletId}~1transactions/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:WALLET [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1entitlements~1byAppId/get/description",
    "value": "Get user app entitlement by appId.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;NAMESPACE:{namespace}:USER:{userId}:ENTITLEMENT&#34;, action=2 (READ)&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1entitlements~1byAppId/get/security/1",
    "value": {
      "HasPermission": [
        "NAMESPACE:{namespace}:USER:{userId}:ENTITLEMENT [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1payment~1config~1merchant~1xsollaconfig~1test/post/description",
    "value": "Check xsolla configuration, Reference: &lt;a href=&#34;https://developers.xsolla.com/?#simple-checkout&#34;&gt;Xsolla Document&lt;/a&gt;.&lt;h4&gt;Check List:&lt;/h4&gt; &lt;ul&gt;&lt;li&gt;merchantId&lt;/li&gt;&lt;li&gt;projectId&lt;/li&gt;&lt;li&gt;apiKey&lt;/li&gt;&lt;/ul&gt;&lt;h4&gt;Non-check list:&lt;/h4&gt;&lt;ul&gt;&lt;li&gt;projectSecretKey&lt;/li&gt;&lt;/ul&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:PAYMENT:CONFIG&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: test result&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1payment~1config~1merchant~1xsollaconfig~1test/post/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:PAYMENT:CONFIG [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1orders~1{orderNo}~1receipt.pdf/get/description",
    "value": "Download user order receipt by orderNo.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;NAMESPACE:{namespace}:USER:{userId}:ORDER&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: order receipt pdf&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1orders~1{orderNo}~1receipt.pdf/get/security/1",
    "value": {
      "HasPermission": [
        "NAMESPACE:{namespace}:USER:{userId}:ORDER [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1iap~1config~1apple/get/description",
    "value": "Get apple iap config.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:IAP:CONFIG&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: apple iap config&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1iap~1config~1apple/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:IAP:CONFIG [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1iap~1config~1apple/put/description",
    "value": "Update apple iap config. Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:IAP:CONFIG&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: updated apple iap config&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1iap~1config~1apple/put/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:IAP:CONFIG [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1iap~1config~1apple/delete/description",
    "value": "Delete apple iap config.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:IAP:CONFIG&#34;, action=8 (DELETE)&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1iap~1config~1apple/delete/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:IAP:CONFIG [DELETE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1tickets~1{boothName}~1decrement/put/description",
    "value": "&lt;b&gt;[SERVICE COMMUNICATION ONLY]&lt;/b&gt; Decrease ticket(code/key) sale if requested orderNo is already increased.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:TICKET&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1tickets~1{boothName}~1decrement/put/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:TICKET [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1public~1namespaces~1{namespace}~1payment~1tax/get/description",
    "value": "Check and get a payment order&#39;s should pay tax.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: tax result&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "replace",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1iap~1google~1receipt/put/description",
    "value": "Verify google iap receipt and fulfill item.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;NAMESPACE:{namespace}:USER:{userId}:IAP&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: &lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1iap~1google~1receipt/put/security/1",
    "value": {
      "HasPermission": [
        "NAMESPACE:{namespace}:USER:{userId}:IAP [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1items~1bySku/get/description",
    "value": "This API is used to get the item by sku.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:ITEM&#34;, action=2 (READ)&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: the item with sku&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1items~1bySku/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:ITEM [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1public~1namespaces~1{namespace}~1payment~1qrcode/get/description",
    "value": "Get qrcode.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: QRCode image stream&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1public~1namespaces~1{namespace}~1payment~1qrcode/get/responses/200/schema",
    "value": {
      "format": "binary",
      "type": "string"
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1payment~1orders~1{paymentOrderNo}~1refund/put/description",
    "value": "&lt;p&gt;This API is used to refund payment order by paymentOrderNo from non justice service. e.g. dedicated server. &lt;ul&gt;&lt;li&gt;if the status field of response json is &#34;REFUNDED&#34;, usually wallet paid, it indicates payment order already refunded&lt;/li&gt;&lt;li&gt;if the status field of response json is &#34;REFUNDING&#34;, usually real money paid, platform will send notification to registered notify url once refund successfully&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Path Parameter:&lt;/strong&gt;&lt;/p&gt;&lt;pre&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;Parameter&lt;/td&gt;&lt;td&gt;Type&lt;/td&gt;&lt;td&gt;Required&lt;/td&gt;&lt;td&gt;Description&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;namespace&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;Namespace that payment order resides in&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;paymentOrderNo&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;Payment order number&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Request Body Parameters:&lt;/strong&gt;&lt;/p&gt;&lt;pre&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;Parameter&lt;/td&gt;&lt;td&gt;Type&lt;/td&gt;&lt;td&gt;Required&lt;/td&gt;&lt;td&gt;Description&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;description&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;Refund description&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Request Body Example:&lt;/strong&gt;&lt;/p&gt;&lt;pre&gt;&lt;code style=&#39;overflow: auto&#39;&gt;{\r\n           &#34;description&#34;: &#34;Repeated item.&#34;\r\n}&lt;/pre&gt;&lt;/code&gt;&lt;h4&gt;Refund Notification:&lt;/h4&gt;&lt;p&gt;It will send notification to configured web hook after refund successfully, http status code should return 200 or 204 once you resolve notification successfully, otherwise payment system will retry notification in interval&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Refund notification parameter:&lt;/strong&gt;&lt;/p&gt;&lt;pre&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;Parameter&lt;/td&gt;&lt;td&gt;Type&lt;/td&gt;&lt;td&gt;Required&lt;/td&gt;&lt;td&gt;Description&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;payload&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;Refund notification payload in json string &lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;sign&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;sha1 hex signature for payload and private key&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Refund notification Example:&lt;/strong&gt;&lt;/p&gt;&lt;pre&gt;&lt;code style=&#39;overflow: auto&#39;&gt;{\r\n       &#34;payload&#34;: &#34;{\n           \\&#34;type\\&#34;: \\&#34;payment\\&#34;,\n           \\&#34;nonceStr\\&#34;: \\&#34;34c1dcf3eb58455eb161465bbfc0b590\\&#34;,\n           \\&#34;paymentOrderNo\\&#34;: \\&#34;18081239088\\&#34;,\n           \\&#34;namespace\\&#34;: \\&#34;accelbyte\\&#34;,\n           \\&#34;targetNamespace\\&#34;: \\&#34;game1\\&#34;,\n           \\&#34;targetUserId\\&#34;: \\&#34;94451623768940d58416ca33ca767ec3\\&#34;,\n           \\&#34;extOrderNo\\&#34;: \\&#34;123456789\\&#34;,\n           \\&#34;sku\\&#34;: \\&#34;sku\\&#34;,\n           \\&#34;extUserId\\&#34;: \\&#34;678\\&#34;,\n           \\&#34;price\\&#34;: 100,\n           \\&#34;paymentProvider\\&#34;: \\&#34;XSOLLA\\&#34;,\n           \\&#34;vat\\&#34;: 0,\n           \\&#34;salesTax\\&#34;: 0,\n           \\&#34;paymentProviderFee\\&#34;: 0,\n           \\&#34;paymentMethodFee\\&#34;: 0,\n           \\&#34;currency\\&#34;: {\n                   \\&#34;currencyCode\\&#34;: \\&#34;USD\\&#34;,\n                   \\&#34;currencySymbol\\&#34;: \\&#34;$\\&#34;,\n                   \\&#34;currencyType\\&#34;: \\&#34;REAL\\&#34;,\n                   \\&#34;namespace\\&#34;: \\&#34;accelbyte\\&#34;,\n                   \\&#34;decimals\\&#34;: 2\n               },\n           \\&#34;status\\&#34;: \\&#34;REFUNDED\\&#34;,\n           \\&#34;createdTime\\&#34;: \\&#34;2018-07-28T00:39:16.274Z\\&#34;,\n           \\&#34;chargedTime\\&#34;: \\&#34;2018-07-28T00:39:16.274Z\\&#34;,\n           \\&#34;refundedTime\\&#34;: \\&#34;2018-07-28T00:39:16.274Z\\&#34;\n       }&#34;,\r\n       &#34;sign&#34;:&#34;e31fb92516cc9faaf50ad70343e1293acec6f3d5&#34;\r\n}&lt;/pre&gt;&lt;/code&gt;&lt;p&gt;&lt;strong&gt;Refund notification payload parameter list:&lt;/strong&gt;&lt;/p&gt;&lt;pre&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;Parameter&lt;/td&gt;&lt;td&gt;Type&lt;/td&gt;&lt;td&gt;Required&lt;/td&gt;&lt;td&gt;Description&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;type&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;Notification type: &#39;payment&#39;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;paymentOrderNo&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;Payment system generated order number&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;extOrderNo&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;td&gt;External order number that passed by invoker&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;namespace&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;Namespace that related payment order resides in&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;targetNamespace&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;The game namespace&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;targetUserId&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;The user id in game namespace&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;sku&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;td&gt;Item identify, it will return if pass it when create payment&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;extUserId&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;td&gt;External user id, can be character id, it will return if pass it when create payment&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;price&lt;/td&gt;&lt;td&gt;int&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;Price of item&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;paymentProvider&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;Payment provider: xsolla/alipay/wxpay/wallet&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;vat&lt;/td&gt;&lt;td&gt;int&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;Payment order VAT&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;salesTax&lt;/td&gt;&lt;td&gt;int&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;Payment order sales tax&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;paymentProviderFee&lt;/td&gt;&lt;td&gt;int&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;Payment provider fee&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;paymentMethodFee&lt;/td&gt;&lt;td&gt;int&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;Payment method fee&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;currency&lt;/td&gt;&lt;td&gt;Map&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;Payment order currency info&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;status&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;Payment order status&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;statusReason&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;td&gt;Payment order refund status reason&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;createdTime&lt;/td&gt;&lt;td&gt;Datetime&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;td&gt;The time of the order created&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;chargedTime&lt;/td&gt;&lt;td&gt;Datetime&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;td&gt;The time of the order charged&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;refundedTime&lt;/td&gt;&lt;td&gt;Datetime&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;td&gt;The time of the order refunded&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;customParameters&lt;/td&gt;&lt;td&gt;Map&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;td&gt;custom parameters, will return if pass it when create payment&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;nonceStr&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;Random string, max length is 32, &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Currency info parameter list:&lt;/strong&gt;&lt;/p&gt;&lt;pre&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;Parameter&lt;/td&gt;&lt;td&gt;Type&lt;/td&gt;&lt;td&gt;Required&lt;/td&gt;&lt;td&gt;Description&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;currencyCode&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;Currency Code&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;currencySymbol&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;Currency Symbol&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;currencyType&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;Currency type(REAL/VIRTUAL)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;namespace&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;Currency namespace&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;decimals&lt;/td&gt;&lt;td&gt;int&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;Currency decimals&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/pre&gt;&lt;h4&gt;Encryption Rule:&lt;/h4&gt;&lt;p&gt;Concat payload json string and private key and then do sha1Hex.&lt;/p&gt;&lt;h4&gt;Other detail info:&lt;/h4&gt; &lt;ul&gt;&lt;li&gt;&lt;i&gt;Token type&lt;/i&gt;: client token&lt;/li&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:PAYMENT&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;b&gt;cross namespace allowed&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1payment~1orders~1{paymentOrderNo}~1refund/put/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:PAYMENT [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1payment~1config~1merchant~1checkoutconfig~1test/post/description",
    "value": "Test checkout.com configuration. &lt;h4&gt;Check List:&lt;/h4&gt; &lt;ul&gt;&lt;li&gt;publicKey&lt;/li&gt;&lt;li&gt;secretKey&lt;/li&gt;&lt;/ul&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:PAYMENT:CONFIG&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: test result&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1payment~1config~1merchant~1checkoutconfig~1test/post/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:PAYMENT:CONFIG [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1iap~1xbl~1sync/put/description",
    "value": "Sync Xbox inventory&#39;s items.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;NAMESPACE:{namespace}:USER:{userId}:IAP&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: &lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1iap~1xbl~1sync/put/security/1",
    "value": {
      "HasPermission": [
        "NAMESPACE:{namespace}:USER:{userId}:IAP [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1campaigns~1{campaignId}/get/description",
    "value": "Get campaign info.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:CAMPAIGN&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: campaign info&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1campaigns~1{campaignId}/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:CAMPAIGN [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1campaigns~1{campaignId}/put/description",
    "value": "Update campaign.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:CAMPAIGN&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: updated campaign&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1campaigns~1{campaignId}/put/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:CAMPAIGN [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1fulfillment~1scripts/get/description",
    "value": "List all fulfillment scripts.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:FULFILLMENT&#34;, action=2 (READ)&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1fulfillment~1scripts/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:FULFILLMENT [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1public~1namespaces~1{namespace}~1rewards~1{rewardId}/get/description",
    "value": "This API is used to get reward by reward Id.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;NAMESPACE:{namespace}:REWARD&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: reward instance&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1public~1namespaces~1{namespace}~1rewards~1{rewardId}/get/security/1",
    "value": {
      "HasPermission": [
        "NAMESPACE:{namespace}:REWARD [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1entitlements~1byItemId/get/description",
    "value": "Get user entitlement by itemId.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;NAMESPACE:{namespace}:USER:{userId}:ENTITLEMENT&#34;, action=2 (READ)&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1entitlements~1byItemId/get/security/1",
    "value": {
      "HasPermission": [
        "NAMESPACE:{namespace}:USER:{userId}:ENTITLEMENT [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1subscriptions~1{subscriptionId}~1recurring/put/description",
    "value": "&lt;b&gt;[TEST FACILITY ONLY] Forbidden in live environment. &lt;/b&gt; Recurring charge subscription, it will trigger recurring charge if the USER subscription status is ACTIVE, nextBillingDate is before now and no fail recurring charge within X(default 12) hours.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:SUBSCRIPTION&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: recurring charge result&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1subscriptions~1{subscriptionId}~1recurring/put/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:SUBSCRIPTION [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1subscriptions~1{subscriptionId}~1grant/put/description",
    "value": "Grant days to a subscription, if grantDays is positive, it will add free days and push the next billing date by the amount of day.&lt;br&gt;if the grantDays is negative or zero, it only apply to active/cancelled subscription, remove days will decrease current period end, and move the next billing date closer.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:SUBSCRIPTION&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: updated subscription&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1subscriptions~1{subscriptionId}~1grant/put/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:SUBSCRIPTION [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1stores~1{storeId}~1export/get/description",
    "value": "This API is used to export a store.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:STORE&#34;, action=2 (READ)&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1stores~1{storeId}~1export/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:STORE [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1payment~1config~1merchant~1{id}~1adyenconfig~1test/get/description",
    "value": "Test adyen configuration in payment merchant config. Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:PAYMENT:CONFIG&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: test adyen config&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1payment~1config~1merchant~1{id}~1adyenconfig~1test/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:PAYMENT:CONFIG [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1wallets~1{currencyCode}/get/description",
    "value": "get a wallet by currency code.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;NAMESPACE:{namespace}:USER:{userId}:WALLET&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: wallet info&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1wallets~1{currencyCode}/get/security/1",
    "value": {
      "HasPermission": [
        "NAMESPACE:{namespace}:USER:{userId}:WALLET [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1keygroups~1{keyGroupId}/get/description",
    "value": "Get key group.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:KEYGROUP&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: key group info&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1keygroups~1{keyGroupId}/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:KEYGROUP [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1keygroups~1{keyGroupId}/put/description",
    "value": "Update key group.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:KEYGROUP&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: updated key group&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1keygroups~1{keyGroupId}/put/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:KEYGROUP [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1payment~1config~1merchant~1{id}~1alipayconfig/put/description",
    "value": "Update alipay configuration.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:PAYMENT:CONFIG&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: updated payment merchant config&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1payment~1config~1merchant~1{id}~1alipayconfig/put/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:PAYMENT:CONFIG [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1items~1{itemId}~1enable/put/description",
    "value": "Enable an item.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:ITEM&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: updated item&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1items~1{itemId}~1enable/put/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:ITEM [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1wallets~1{currencyCode}~1payment/put/description",
    "value": "Pay with user wallet by currency code.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:WALLET&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1wallets~1{currencyCode}~1payment/put/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:WALLET [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1entitlements~1{entitlementId}~1revoke/put/description",
    "value": "Revoke user entitlement.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:ENTITLEMENT&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: revoke entitlement&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1entitlements~1{entitlementId}~1revoke/put/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:ENTITLEMENT [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1codes~1campaigns~1{campaignId}~1codes.csv/get/description",
    "value": "Download all or a batch of campaign&#39;s codes as a csv file.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:CAMPAIGN&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: codes csv file&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1codes~1campaigns~1{campaignId}~1codes.csv/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:CAMPAIGN [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1iap~1config~1playstation/get/description",
    "value": "Get playstation iap config.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:IAP:CONFIG&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: playstation iap config&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1iap~1config~1playstation/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:IAP:CONFIG [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1iap~1config~1playstation/put/description",
    "value": "Update playstation iap config. Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:IAP:CONFIG&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: updated playstation iap config&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1iap~1config~1playstation/put/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:IAP:CONFIG [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1iap~1config~1playstation/delete/description",
    "value": "Delete playstation iap config.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:IAP:CONFIG&#34;, action=8 (DELETE)&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1iap~1config~1playstation/delete/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:IAP:CONFIG [DELETE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1tickets~1{boothName}/get/description",
    "value": "&lt;b&gt;[SERVICE COMMUNICATION ONLY]&lt;/b&gt; Get ticket(code/key) dynamic based on booth name.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:TICKET&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: ticket dynamic&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1tickets~1{boothName}/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:TICKET [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1campaigns~1{campaignId}~1dynamic/get/description",
    "value": "Get campaign dynamic.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:CAMPAIGN&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: campaign dynamic&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1campaigns~1{campaignId}~1dynamic/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:CAMPAIGN [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1wallets~1{currencyCode}~1credit/put/description",
    "value": "Credit a user wallet by currency code, if wallet not exists, it will create a new wallet.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:WALLET&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1wallets~1{currencyCode}~1credit/put/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:WALLET [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1anonymization~1wallets/delete/description",
    "value": "Anonymize wallet. At current it will only anonymize wallet, wallet transaction.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:ANONYMIZATION&#34;, action=8 (DELETE)&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1anonymization~1wallets/delete/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:ANONYMIZATION [DELETE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1items~1bySku~1locale/get/description",
    "value": "This API is used to get an item by sku in specific locale. If item not exist in specific region, default region item will return.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:ITEM&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: item data&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1items~1bySku~1locale/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:ITEM [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1categories~1basic/get/description",
    "value": "This API is used to list all categories&#39; basic info of a store ordered by category path.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:CATEGORY&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: list of categories&#39; paths&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1categories~1basic/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:CATEGORY [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1entitlements~1byAppType/get/description",
    "value": "Query app entitlements by appType.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:ENTITLEMENT&#34;, action=2&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: app entitlement pagination&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1entitlements~1byAppType/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:ENTITLEMENT []"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1items~1byCriteria/get/description",
    "value": "This API is used to query items by criteria within a store.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:ITEM&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: the list of items&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1items~1byCriteria/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:ITEM [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1payment~1accounts/get/description",
    "value": "Get payment accounts.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;NAMESPACE:{namespace}:USER:{userId}:PAYMENT:ACCOUNT&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: Payment account list&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1payment~1accounts/get/security/1",
    "value": {
      "HasPermission": [
        "NAMESPACE:{namespace}:USER:{userId}:PAYMENT:ACCOUNT [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1entitlements~1bySku/get/description",
    "value": "Get user entitlement by sku.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;NAMESPACE:{namespace}:USER:{userId}:ENTITLEMENT&#34;, action=2 (READ)&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1entitlements~1bySku/get/security/1",
    "value": {
      "HasPermission": [
        "NAMESPACE:{namespace}:USER:{userId}:ENTITLEMENT [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1subscriptions~1{subscriptionId}~1notifications/post/description",
    "value": "&lt;b&gt;[SERVICE COMMUNICATION ONLY]&lt;/b&gt; This API is used as a web hook for payment notification from justice payment service.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:SUBSCRIPTION&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: Process result&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1subscriptions~1{subscriptionId}~1notifications/post/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:SUBSCRIPTION [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1payment~1orders~1{paymentOrderNo}~1simulate-notification/put/description",
    "value": "&lt;b&gt;[TEST FACILITY ONLY] Forbidden in live environment. &lt;/b&gt; Simulate payment notification on sandbox payment order, usually for test usage to simulate real currency payment notification.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:PAYMENT&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: notification process result&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1payment~1orders~1{paymentOrderNo}~1simulate-notification/put/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:PAYMENT [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1iap~1stadia~1sync/put/description",
    "value": "Sync stadia entitlements.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;NAMESPACE:{namespace}:USER:{userId}:IAP&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: &lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1iap~1stadia~1sync/put/security/1",
    "value": {
      "HasPermission": [
        "NAMESPACE:{namespace}:USER:{userId}:IAP [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1fulfillment~1code/post/description",
    "value": "Redeem campaign code.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;NAMESPACE:{namespace}:USER:{userId}:FULFILLMENT&#34;, action=1 (CREATED)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: fulfillment result&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1fulfillment~1code/post/security/1",
    "value": {
      "HasPermission": [
        "NAMESPACE:{namespace}:USER:{userId}:FULFILLMENT []"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1orders/post/description",
    "value": "Create an order. The result contains the checkout link and payment token. User with permission SANDBOX will create sandbox order that not real paid for xsolla/alipay and not validate price for wxpay.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;NAMESPACE:{namespace}:USER:{userId}:ORDER&#34;, action=1 (CREATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Optional permission(user with this permission will create sandbox order)&lt;/i&gt;: resource=&#34;SANDBOX&#34;, action=1 (CREATE)&lt;/li&gt;&lt;li&gt;It will be forbidden while the user is banned: ORDER_INITIATE or ORDER_AND_PAYMENT&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: created order&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1orders/post/security/1",
    "value": {
      "HasPermission": [
        "NAMESPACE:{namespace}:USER:{userId}:ORDER [CREATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1orders/get/description",
    "value": "Query user orders.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;NAMESPACE:{namespace}:USER:{userId}:ORDER&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: get order&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1orders/get/security/1",
    "value": {
      "HasPermission": [
        "NAMESPACE:{namespace}:USER:{userId}:ORDER [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1items~1{itemId}~1features~1{feature}/put/description",
    "value": "Add a feature to an item.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:ITEM&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: updated item&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1items~1{itemId}~1features~1{feature}/put/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:ITEM [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1items~1{itemId}~1features~1{feature}/delete/description",
    "value": "Remove a feature from an item.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:ITEM&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: updated item&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1items~1{itemId}~1features~1{feature}/delete/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:ITEM [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1stores~1{storeId}/get/description",
    "value": "This API is used to get a store.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:STORE&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: store data&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1stores~1{storeId}/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:STORE [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1stores~1{storeId}/put/description",
    "value": "This API is used to Update a store basic info.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:STORE&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: updated store data&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1stores~1{storeId}/put/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:STORE [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1stores~1{storeId}/delete/description",
    "value": "This API is used to delete a store. Only non published store can be deleted.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:STORE&#34;, action=8 (DELETE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: store&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1stores~1{storeId}/delete/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:STORE [DELETE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1iap~1config~1google/get/description",
    "value": "Get google iap config.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:IAP:CONFIG&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: google iap config&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1iap~1config~1google/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:IAP:CONFIG [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1iap~1config~1google/put/description",
    "value": "Update google iap config. Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:IAP:CONFIG&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: updated google iap config&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1iap~1config~1google/put/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:IAP:CONFIG [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1iap~1config~1google/delete/description",
    "value": "Delete google iap config.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:IAP:CONFIG&#34;, action=8 (DELETE)&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1iap~1config~1google/delete/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:IAP:CONFIG [DELETE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1codes~1campaigns~1{campaignId}~1enable~1bulk/put/description",
    "value": "Bulk enable campaign codes.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:CAMPAIGN&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: the number of code actually enabled&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1codes~1campaigns~1{campaignId}~1enable~1bulk/put/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:CAMPAIGN [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1public~1namespaces~1{namespace}~1rewards~1byCriteria/get/description",
    "value": "This API is used to query rewards by criteria.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;NAMESPACE:{namespace}:REWARD&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: the list of rewards&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1public~1namespaces~1{namespace}~1rewards~1byCriteria/get/security/1",
    "value": {
      "HasPermission": [
        "NAMESPACE:{namespace}:REWARD [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1subscriptions~1{subscriptionId}~1cancel/put/description",
    "value": "Cancel a subscription, only ACTIVE subscription can be cancelled. &lt;b&gt;Ensure successfully cancel, recommend at least 1 day before current period ends, otherwise it may be charging or charged.&lt;/b&gt;&lt;br&gt;Set immediate true, the subscription will be terminated immediately, otherwise till the end of current billing cycle.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;NAMESPACE:{namespace}:USER:{userId}:SUBSCRIPTION&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: cancelled subscription&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1subscriptions~1{subscriptionId}~1cancel/put/security/1",
    "value": {
      "HasPermission": [
        "NAMESPACE:{namespace}:USER:{userId}:SUBSCRIPTION [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1entitlements~1ownership~1any/get/description",
    "value": "Exists any user active entitlement of specified itemIds, skus and appIds&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:ENTITLEMENT&#34;, action=2 (READ)&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1entitlements~1ownership~1any/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:ENTITLEMENT [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1orders~1{orderNo}/get/description",
    "value": "Get user order.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;NAMESPACE:{namespace}:USER:{userId}:ORDER&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: get order&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1orders~1{orderNo}/get/security/1",
    "value": {
      "HasPermission": [
        "NAMESPACE:{namespace}:USER:{userId}:ORDER [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1orders~1{orderNo}~1history/get/description",
    "value": "Get user order history.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:ORDER&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: get order history&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1orders~1{orderNo}~1history/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:ORDER [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1iap~1config~1stadia/get/description",
    "value": "Get stadia iap config.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:IAP:CONFIG&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: stadia iap config&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1iap~1config~1stadia/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:IAP:CONFIG [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1iap~1config~1stadia/delete/description",
    "value": "Delete stadia iap config.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:IAP:CONFIG&#34;, action=8 (DELETE)&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1iap~1config~1stadia/delete/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:IAP:CONFIG [DELETE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1public~1namespaces~1{namespace}~1categories~1{categoryPath}~1children/get/description",
    "value": "This API is used to get child categories by category path.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Optional permission&lt;/i&gt;: resource=&#34;PREVIEW&#34;, action=1(CREATE) (user with this permission can view draft store category)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Optional permission&lt;/i&gt;: resource=&#34;SANDBOX&#34;, action=1(CREATE) (user with this permission can view draft store category)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: list of child categories data&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1items~1search/get/description",
    "value": "This API is used to search items by keyword in title, description and long description within a store.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:ITEM&#34;, action=2 (READ)&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: the list of items&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1items~1search/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:ITEM [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1fulfillment~1scripts~1tests~1eval/post/description",
    "value": "&lt;b&gt;[TEST FACILITY ONLY]&lt;/b&gt;Test eval fulfillment script.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:FULFILLMENT&#34;, action=2 (READ)&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1fulfillment~1scripts~1tests~1eval/post/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:FULFILLMENT [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1entitlements~1ownership~1byAppId/get/description",
    "value": "Get user app entitlement ownership by appId.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;NAMESPACE:{namespace}:USER:{userId}:ENTITLEMENT&#34;, action=2 (READ)&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1entitlements~1ownership~1byAppId/get/security/1",
    "value": {
      "HasPermission": [
        "NAMESPACE:{namespace}:USER:{userId}:ENTITLEMENT [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1payment~1orders~1byExtTxId/get/description",
    "value": "List external order No by external transaction id.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:PAYMENT&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: payment orders&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1payment~1orders~1byExtTxId/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:PAYMENT [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1entitlements~1{entitlementId}/get/description",
    "value": "Get user entitlement.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:ENTITLEMENT&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: entitlement&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1entitlements~1{entitlementId}/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:ENTITLEMENT [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1entitlements~1{entitlementId}/put/description",
    "value": "Update user entitlement. If update CONSUMABLE entitlement useCount to 0, the status will be CONSUMED.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:ENTITLEMENT&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: updated entitlement&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1entitlements~1{entitlementId}/put/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:ENTITLEMENT [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1payment~1config~1merchant~1adyenconfig~1test/post/description",
    "value": "Test adyen configuration. &lt;h4&gt;Check List:&lt;/h4&gt; &lt;ul&gt;&lt;li&gt;apiKey&lt;/li&gt;&lt;li&gt;merchantAccount&lt;/li&gt;&lt;/ul&gt;&lt;h4&gt;Non-check list:&lt;/h4&gt;&lt;ul&gt;&lt;li&gt;notificationHmacKey&lt;/li&gt;&lt;li&gt;notificationUsername&lt;/li&gt;&lt;li&gt;notificationPassword&lt;/li&gt;&lt;li&gt;liveEndpointUrlPrefix&lt;/li&gt;&lt;li&gt;allowedPaymentMethods&lt;/li&gt;&lt;li&gt;blockedPaymentMethods&lt;/li&gt;&lt;li&gt;settings&lt;/li&gt;&lt;/ul&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:PAYMENT:CONFIG&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: test adyen config&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1payment~1config~1merchant~1adyenconfig~1test/post/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:PAYMENT:CONFIG [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1subscriptions/get/description",
    "value": "Query user subscriptions.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:SUBSCRIPTION&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: paginated subscription&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1subscriptions/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:SUBSCRIPTION [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1subscriptions~1platformSubscribe/post/description",
    "value": "Free subscribe by platform, can used by other justice service to redeem/reward the subscription.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:SUBSCRIPTION&#34;, action=1 (CREATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: result subscription&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1subscriptions~1platformSubscribe/post/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:SUBSCRIPTION [CREATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1entitlements~1ownership~1byAppId/get/description",
    "value": "Get user app entitlement ownership by appId.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:ENTITLEMENT&#34;, action=2 (READ)&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1entitlements~1ownership~1byAppId/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:ENTITLEMENT [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1orders/get/description",
    "value": "Query user orders.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:ORDER&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: get order&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1orders/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:ORDER [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1payment~1config~1tax/get/description",
    "value": "Get payment global tax config.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:PAYMENT:CONFIG&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: payment provider list&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1payment~1config~1tax/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:PAYMENT:CONFIG [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1payment~1config~1tax/put/description",
    "value": "Update payment tax config.&lt;br&gt;&lt;pre&gt;&lt;p&gt;&lt;strong&gt;Request Body Parameters:&lt;/strong&gt;&lt;/p&gt;&lt;pre&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;Parameter&lt;/td&gt;&lt;td&gt;Type&lt;/td&gt;&lt;td&gt;Required&lt;/td&gt;&lt;td&gt;Description&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;taxJarEnabled&lt;/td&gt;&lt;td&gt;Boolean&lt;/td&gt;&lt;td&gt;false&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;taxJarApiToken&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;&lt;td&gt;false&lt;/td&gt;&lt;td&gt;required, when taxJarEnabled is true and there is no existing token&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;sandboxTaxJarApiToken&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;&lt;td&gt;false&lt;/td&gt;&lt;td&gt;optional&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;taxJarProductCodesMapping&lt;/td&gt;&lt;td&gt;Map&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;td&gt;key is item type(APP|COINS|INGAMEITEM|BUNDLE|CODE|SUBSCRIPTION) and value is product tax code: https://developers.taxjar.com/api/reference/?ruby#get-list-tax-categories&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/pre&gt;&lt;/ol&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:PAYMENT:CONFIG&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: payment global tax config&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1payment~1config~1tax/put/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:PAYMENT:CONFIG [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1public~1namespaces~1{namespace}~1payment~1returnurl/get/description",
    "value": "Normalize payment return url for payment provider&lt;br&gt;Payment response: &lt;table&gt;&lt;tr&gt;&lt;td&gt;Field&lt;/td&gt;&lt;td&gt;Type&lt;/td&gt;&lt;td&gt;Required&lt;/td&gt;&lt;td&gt;Description&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;orderNo&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;order no&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;paymentStatus&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;ul&gt;&lt;li&gt;DONE: The payment was successfully completed.&lt;/li&gt;&lt;li&gt;CANCELLED: The payment was cancelled by the shopper before completion, or the shopper returned to the merchant&#39;s site before completing the transaction.&lt;/li&gt;&lt;li&gt;PENDING: Inform the shopper that you&#39;ve received their order, and are waiting for the payment to be completed.\n\nWhen the shopper has completed the payment you will receive a successful AUTHORISATION.&lt;/li&gt;&lt;li&gt;RECEIVED: Inform the shopper that you&#39;ve received their order, and are waiting for the payment to clear.&lt;/li&gt;&lt;li&gt;UNKNOWN: An error occurred during the payment processing.&lt;/li&gt;&lt;li&gt;FAILED: Shopper paid failed because of various reasons.&lt;/li&gt;&lt;/ul&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;reason&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;td&gt;payment status reason&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;xsolla&lt;/i&gt;: parameters &#39;user_id&#39;, &#39;foreinginvoice&#39;, &#39;invoice_id&#39; and &#39;status&#39; will be automatically added to the link&lt;/li&gt;&lt;li&gt;&lt;i&gt;adyen&lt;/i&gt;: https://docs.adyen.com/developers/checkout/web-sdk&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "remove",
    "path": "/paths/~1public~1namespaces~1{namespace}~1payment~1returnurl/get/responses/default"
  },
  {
    "op": "add",
    "path": "/paths/~1public~1namespaces~1{namespace}~1payment~1returnurl/get/responses/307",
    "value": {
      "description": "successful operation",
      "headers": {
        "Location": {
          "description": "The Location header",
          "type": "string"
        }
      }
    }
  },
  {
    "op": "add",
    "path": "/paths/~1public~1namespaces~1{namespace}~1payment~1returnurl/get/responses/204",
    "value": {
      "description": "no content"
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1rewards~1export/get/description",
    "value": "Export reward configurations for a given namespace into file. At current, only JSON file is supported.&lt;p&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;*Required permission*: resource=&#34;ADMIN:NAMESPACE:{namespace}:REWARD&#34;, action=2 (READ)&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1rewards~1export/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:REWARD [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1orders~1{orderNo}~1grant/get/description",
    "value": "Get user order grant that fulfilled by this order.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:ORDER&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: get order grant&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1orders~1{orderNo}~1grant/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:ORDER [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1items~1{itemId}~1acquire/put/description",
    "value": "&lt;b&gt;[SERVICE COMMUNICATION ONLY]&lt;/b&gt; This api is used for acquiring a published item while the item is maxCount limited, it will decrease the sale available count.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:ITEM&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: acquire result&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1items~1{itemId}~1acquire/put/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:ITEM [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1payment~1config~1merchant~1matched/get/description",
    "value": "Debug matched payment merchant config.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:PAYMENT:CONFIG&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: payment merchant config info&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1payment~1config~1merchant~1matched/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:PAYMENT:CONFIG [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1redemption/post/description",
    "value": "&lt;b&gt;[SERVICE COMMUNICATION ONLY]&lt;/b&gt; Redeem code. If the campaign which the code belongs to is INACTIVE, the code couldn&#39;t be redeemed even if its status is ACTIVE.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:REDEMPTION&#34;, action=1 (CREATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: Redeem result&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1redemption/post/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:REDEMPTION [CREATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1orders~1stats/get/description",
    "value": "Get Order Statistics.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:ORDER&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: order statistics&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1orders~1stats/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:ORDER [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1entitlements~1byAppType/get/description",
    "value": "Query app entitlements by appType.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;NAMESPACE:{namespace}:USER:{userId}:ENTITLEMENT&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: app entitlement pagination&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1entitlements~1byAppType/get/security/1",
    "value": {
      "HasPermission": [
        "NAMESPACE:{namespace}:USER:{userId}:ENTITLEMENT [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1fulfillment~1scripts~1{id}/post/description",
    "value": "Create fulfillment script.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:FULFILLMENT&#34;, action=1 (CREATE)&lt;/li&gt;&lt;/ul&gt;Fulfillment scripts are used for adding custom fulfillment logic based on &lt;b&gt;ITEM_TYPE&lt;/b&gt;: [MEDIA,INGAMEITEM] for now, and the custom scripts only cover grantDays.&lt;br&gt;Example for grantDays: &lt;br&gt;&lt;code&gt;order &amp;&amp; ((order.currency &amp;&amp; order.currency.currencyCode) == &#39;LP&#39; || order.isFree) ? 30 : -1&lt;/code&gt;&lt;br&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1fulfillment~1scripts~1{id}/post/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:FULFILLMENT [CREATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1fulfillment~1scripts~1{id}/delete/description",
    "value": "Delete fulfillment script.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:FULFILLMENT&#34;, action=8 (DELETE)&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1fulfillment~1scripts~1{id}/delete/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:FULFILLMENT [DELETE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1fulfillment~1scripts~1{id}/get/description",
    "value": "Get fulfillment script by id.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:FULFILLMENT&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: get fulfillment script&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1fulfillment~1scripts~1{id}/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:FULFILLMENT [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1fulfillment~1scripts~1{id}/patch/description",
    "value": "Update fulfillment script.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:FULFILLMENT&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1fulfillment~1scripts~1{id}/patch/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:FULFILLMENT [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1orders~1{orderNo}~1fulfill/put/description",
    "value": "Fulfill an order if the order is charged but fulfill failed.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:ORDER&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: fulfilled order&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1orders~1{orderNo}~1fulfill/put/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:ORDER [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1wallets~1{currencyCode}~1transactions/get/description",
    "value": "List wallet transactions by currency code ordered by create time desc.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;NAMESPACE:{namespace}:USER:{userId}:WALLET&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: wallet transaction info&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1wallets~1{currencyCode}~1transactions/get/security/1",
    "value": {
      "HasPermission": [
        "NAMESPACE:{namespace}:USER:{userId}:WALLET [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1subscriptions~1{subscriptionId}/get/description",
    "value": "Get user subscription.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;NAMESPACE:{namespace}:USER:{userId}:SUBSCRIPTION&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: subscription&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1subscriptions~1{subscriptionId}/get/security/1",
    "value": {
      "HasPermission": [
        "NAMESPACE:{namespace}:USER:{userId}:SUBSCRIPTION [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1subscriptions~1{subscriptionId}~1billingAccount/put/description",
    "value": "Request to change a subscription billing account, this will guide user to payment station. The actual change will happen at the 0 payment notification successfully handled.&lt;br&gt;Only ACTIVE USER subscription with real currency billing account can be changed.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;NAMESPACE:{namespace}:USER:{userId}:SUBSCRIPTION&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: updated subscription&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1subscriptions~1{subscriptionId}~1billingAccount/put/security/1",
    "value": {
      "HasPermission": [
        "NAMESPACE:{namespace}:USER:{userId}:SUBSCRIPTION [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1subscriptions~1{subscriptionId}~1history/get/description",
    "value": "Get user subscription billing histories.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;NAMESPACE:{namespace}:USER:{userId}:SUBSCRIPTION&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: paginated subscription history&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1subscriptions~1{subscriptionId}~1history/get/security/1",
    "value": {
      "HasPermission": [
        "NAMESPACE:{namespace}:USER:{userId}:SUBSCRIPTION [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1public~1namespaces~1{namespace}~1rewards~1byCode/get/description",
    "value": "This API is used to get reward by reward code.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;NAMESPACE:{namespace}:REWARD&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: reward instance&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1public~1namespaces~1{namespace}~1rewards~1byCode/get/security/1",
    "value": {
      "HasPermission": [
        "NAMESPACE:{namespace}:REWARD [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1anonymization~1integrations/delete/description",
    "value": "Anonymize integrations. At current it will only anonymize iap histories.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:ANONYMIZATION&#34;, action=8 (DELETE)&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1anonymization~1integrations/delete/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:ANONYMIZATION [DELETE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1fulfillment/post/description",
    "value": "Fulfill item.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:FULFILLMENT&#34;, action=1 (CREATED)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: fulfillment result&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1fulfillment/post/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:FULFILLMENT []"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1me~1entitlements~1ownership~1any/get/description",
    "value": "Exists any my active entitlement of specified itemIds, skus and appIds&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;NAMESPACE:{namespace}:ENTITLEMENT&#34;, action=2 (READ)&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1me~1entitlements~1ownership~1any/get/security/1",
    "value": {
      "HasPermission": [
        "NAMESPACE:{namespace}:ENTITLEMENT [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1keygroups/post/description",
    "value": "Create key group.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:KEYGROUP&#34;, action=1 (CREATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: created key group&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1keygroups/post/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:KEYGROUP [CREATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1keygroups/get/description",
    "value": "Query key groups, if name is presented, it&#39;s fuzzy match.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:KEYGROUP&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: slice of key group&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1keygroups/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:KEYGROUP [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1entitlements~1byItemId/get/description",
    "value": "Get user entitlement by itemId.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:ENTITLEMENT&#34;, action=2 (READ)&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1entitlements~1byItemId/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:ENTITLEMENT [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1public~1namespaces~1{namespace}~1categories~1download/get/description",
    "value": "This API is used to download store&#39;s structured categories.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Optional permission&lt;/i&gt;: resource=&#34;PREVIEW&#34;, action=1(CREATE) (user with this permission can view draft store content)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Optional permission&lt;/i&gt;: resource=&#34;SANDBOX&#34;, action=1(CREATE) (user with this permission can view draft store content)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: structured categories&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1orders/get/description",
    "value": "Sync orders. If response contains nextEvaluatedKey, please use it as query param in the next call to fetch the next batch, a batch has 1000 elements or less.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:ORDER&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: sync orders&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1orders/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:ORDER [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1entitlements~1{entitlementId}~1disable/put/description",
    "value": "Disable user entitlement if entitlement, only active entitlement can be disable, disabled entitlement can&#39;t consume.&lt;br&gt;&lt;b&gt;Like revoke, it will lose the entitlement ownership, except disabled entitlement can enable.&lt;/b&gt;&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:ENTITLEMENT&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: disable entitlement&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1entitlements~1{entitlementId}~1disable/put/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:ENTITLEMENT [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1entitlements~1ownership~1byItemId/get/description",
    "value": "Get user entitlement ownership by itemId.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;NAMESPACE:{namespace}:USER:{userId}:ENTITLEMENT&#34;, action=2 (READ)&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1entitlements~1ownership~1byItemId/get/security/1",
    "value": {
      "HasPermission": [
        "NAMESPACE:{namespace}:USER:{userId}:ENTITLEMENT [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1iap~1config~1stadia~1cert/put/description",
    "value": "Upload stadia json config file.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:IAP:CONFIG&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: updated stadia iap config&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1iap~1config~1stadia~1cert/put/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:IAP:CONFIG [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1payment~1config~1merchant~1paypalconfig~1test/post/description",
    "value": "Test PayPal configuration. &lt;h4&gt;Check List:&lt;/h4&gt; &lt;ul&gt;&lt;li&gt;clientID&lt;/li&gt;&lt;li&gt;clientSecret&lt;/li&gt;&lt;/ul&gt;&lt;h4&gt;Non-check list:&lt;/h4&gt;&lt;ul&gt;&lt;li&gt;webHookId&lt;/li&gt;&lt;/ul&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:PAYMENT:CONFIG&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: test result&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1payment~1config~1merchant~1paypalconfig~1test/post/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:PAYMENT:CONFIG [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1anonymization~1entitlements/delete/description",
    "value": "Anonymize entitlement. At current it will only anonymize entitlement, entitlement history.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:ANONYMIZATION&#34;, action=8 (DELETE)&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1anonymization~1entitlements/delete/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:ANONYMIZATION [DELETE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1public~1namespaces~1{namespace}~1payment~1customization/get/description",
    "value": "Get payment provider customization, at current only Adyen provide customization.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: customization&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "replace",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1entitlements~1ownership~1bySku/get/description",
    "value": "Get user entitlement ownership by sku.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;NAMESPACE:{namespace}:USER:{userId}:ENTITLEMENT&#34;, action=2 (READ)&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1entitlements~1ownership~1bySku/get/security/1",
    "value": {
      "HasPermission": [
        "NAMESPACE:{namespace}:USER:{userId}:ENTITLEMENT [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1orders~1{orderNo}~1cancel/put/description",
    "value": "Cancel user order.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;NAMESPACE:{namespace}:USER:{userId}:ORDER&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: cancelled order&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1orders~1{orderNo}~1cancel/put/security/1",
    "value": {
      "HasPermission": [
        "NAMESPACE:{namespace}:USER:{userId}:ORDER [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1orders~1{orderNo}~1refund/put/description",
    "value": "Refund order by orderNo.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:ORDER&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1orders~1{orderNo}~1refund/put/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:ORDER [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1anonymization~1payment/delete/description",
    "value": "Anonymize payment. At current it will only anonymize payment order, payment order history.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:ANONYMIZATION&#34;, action=8 (DELETE)&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1anonymization~1payment/delete/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:ANONYMIZATION [DELETE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1codes~1{code}~1enable/put/description",
    "value": "Enable code.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:CAMPAIGN&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: enabled code&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1codes~1{code}~1enable/put/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:CAMPAIGN [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1payment~1config~1merchant~1{id}/get/description",
    "value": "Get payment merchant config by id.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:PAYMENT:CONFIG&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: payment merchant config info&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1payment~1config~1merchant~1{id}/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:PAYMENT:CONFIG [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1payment~1config~1merchant~1{id}~1checkoutconfig/put/description",
    "value": "Update checkout.com config.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:PAYMENT:CONFIG&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: updated payment merchant config&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1payment~1config~1merchant~1{id}~1checkoutconfig/put/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:PAYMENT:CONFIG [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1subscriptions~1{subscriptionId}~1cancel/put/description",
    "value": "Cancel a subscription, only ACTIVE subscription can be cancelled. &lt;b&gt;Ensure successfully cancel, recommend at least 1 day before current period ends, otherwise it may be charging or charged.&lt;/b&gt;&lt;br&gt;Set immediate true, the subscription will be terminated immediately, otherwise till the end of current billing cycle.&lt;br&gt;Set force true, will ignore the error if subscription is during recurring charging.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:SUBSCRIPTION&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: cancelled subscription&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1subscriptions~1{subscriptionId}~1cancel/put/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:SUBSCRIPTION [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1items~1byFeatures~1basic/get/description",
    "value": "&lt;b&gt;[SERVICE COMMUNICATION ONLY]&lt;/b&gt; This API is used to list basic items by features.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:ITEM&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: the list of basic items&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1items~1byFeatures~1basic/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:ITEM [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1categories/post/description",
    "value": "This API is used to create category.&lt;p&gt;A category is a path separated by &#34;/&#34;. A category also has localized display names. Example:&lt;p&gt;&lt;pre&gt;&lt;code&gt;{\r\n\t&#34;categoryPath&#34;: &#34;/games&#34;,\r\n\t&#34;localizationDisplayNames&#34;: \\{&#34;en&#34; : &#34;Games&#34;}\r\n}&lt;/code&gt;&lt;/pre&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:CATEGORY&#34;, action=1 (CREATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: created category data&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1categories/post/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:CATEGORY [CREATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1categories/get/description",
    "value": "This API is used to get root categories.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:CATEGORY&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: root category data&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1categories/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:CATEGORY [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1anonymization~1campaign/delete/description",
    "value": "Anonymize campaign. At current it will only anonymize redeem history.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:ANONYMIZATION&#34;, action=8 (DELETE)&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1anonymization~1campaign/delete/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:ANONYMIZATION [DELETE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1public~1namespaces~1{namespace}~1categories/get/description",
    "value": "This API is used to get root categories.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Optional permission&lt;/i&gt;: resource=&#34;PREVIEW&#34;, action=1(CREATE) (user with this permission can view draft store category)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Optional permission&lt;/i&gt;: resource=&#34;SANDBOX&#34;, action=1(CREATE) (user with this permission can view draft store category)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: root category data&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1tickets~1{boothName}~1increment/put/description",
    "value": "&lt;b&gt;[SERVICE COMMUNICATION ONLY]&lt;/b&gt; increase ticket(code/key) sale.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:TICKET&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: Ticket sale increment result&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1tickets~1{boothName}~1increment/put/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:TICKET [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1stores~1published/get/description",
    "value": "This API is used to get a published store basic info, exclude category and item information.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:STORE&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: store data&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1stores~1published/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:STORE [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1stores~1published/delete/description",
    "value": "This API is used to delete published store including category and items before release to public.&lt;p&gt;&lt;b&gt;Warning: Please do not use this API once published to public user.&lt;/b&gt;&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:STORE&#34;, action=8 (DELETE)&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1stores~1published/delete/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:STORE [DELETE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1entitlements/post/description",
    "value": "Grant user entitlement.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:ENTITLEMENT&#34;, action=1 (CREATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: granted entitlement&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1entitlements/post/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:ENTITLEMENT [CREATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1entitlements/get/description",
    "value": "Query entitlements for a specific user.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:ENTITLEMENT&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: entitlement list&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1entitlements/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:ENTITLEMENT [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1items~1uncategorized/get/description",
    "value": "This API is used to query uncategorized items within a store.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:ITEM&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: the list of uncategorized items&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1items~1uncategorized/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:ITEM [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1wallets~1{currencyCode}~1check/get/description",
    "value": "&lt;b&gt;[SERVICE COMMUNICATION ONLY]&lt;/b&gt; Check wallet whether it&#39;s inactive.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:WALLET&#34;, action=2 (READ)&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1wallets~1{currencyCode}~1check/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:WALLET [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1currencies~1{currencyCode}~1config/get/description",
    "value": "&lt;b&gt;[SERVICE COMMUNICATION ONLY]&lt;/b&gt; Get currency config by code.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:CURRENCY&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: simplified Currency&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1currencies~1{currencyCode}~1config/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:CURRENCY [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1entitlements~1byAppId/get/description",
    "value": "Get user app entitlement by appId.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:ENTITLEMENT&#34;, action=2 (READ)&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1entitlements~1byAppId/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:ENTITLEMENT [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1codes~1campaigns~1{campaignId}~1history/get/description",
    "value": "Query redeem history.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:CAMPAIGN&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: slice of redeem history&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1codes~1campaigns~1{campaignId}~1history/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:CAMPAIGN [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1public~1namespaces~1{namespace}~1payment~1methods/get/description",
    "value": "Get payment methods.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: Payment method list&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1iap/get/description",
    "value": "Query IAP orders.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:IAP&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: paginated iap orders&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1iap/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:IAP [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1public~1namespaces~1{namespace}~1payment~1orders~1{paymentOrderNo}~1status/get/description",
    "value": "Check payment order paid status.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: Payment order paid result&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1codes~1campaigns~1{campaignId}/post/description",
    "value": "This API is used to create campaign codes, it will increase the batch No. based on last creation.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:CAMPAIGN&#34;, action=1 (CREATE)&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: number of codes created&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1codes~1campaigns~1{campaignId}/post/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:CAMPAIGN [CREATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1codes~1campaigns~1{campaignId}/get/description",
    "value": "Query campaign codes.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:CAMPAIGN&#34;, action=2 (READ) (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: list of codes&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1codes~1campaigns~1{campaignId}/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:CAMPAIGN [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1iap~1apple~1receipt/put/description",
    "value": "Verify apple iap receipt and fulfill item.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;NAMESPACE:{namespace}:USER:{userId}:IAP&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: &lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1iap~1apple~1receipt/put/security/1",
    "value": {
      "HasPermission": [
        "NAMESPACE:{namespace}:USER:{userId}:IAP [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1iap~1config~1xbl/get/description",
    "value": "Get xbox iap config.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:IAP:CONFIG&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: xbox iap config&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1iap~1config~1xbl/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:IAP:CONFIG [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1iap~1config~1xbl/put/description",
    "value": "Update xbl iap config. Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:IAP:CONFIG&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: updated xbl iap config&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1iap~1config~1xbl/put/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:IAP:CONFIG [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1iap~1config~1xbl/delete/description",
    "value": "Delete xbl iap config.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:IAP:CONFIG&#34;, action=8 (DELETE)&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1iap~1config~1xbl/delete/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:IAP:CONFIG [DELETE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1iap~1config~1xbl~1cert/put/description",
    "value": "Upload xbl business partner cert file.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:IAP:CONFIG&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: updated xbl iap config&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1iap~1config~1xbl~1cert/put/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:IAP:CONFIG [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1orders~1{orderNo}/get/description",
    "value": "Get order by orderNo.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:ORDER&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: order instance&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1orders~1{orderNo}/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:ORDER [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1entitlements~1ownership~1anyOf/get/description",
    "value": "Exists any user active entitlement of specified items.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:ENTITLEMENT&#34;, action=2 (READ)&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1entitlements~1ownership~1anyOf/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:ENTITLEMENT [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1anonymization~1fulfillment/delete/description",
    "value": "Anonymize fulfillment. At current it will only anonymize fulfillment history.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:ANONYMIZATION&#34;, action=8 (DELETE)&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1anonymization~1fulfillment/delete/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:ANONYMIZATION [DELETE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1anonymization~1subscriptions/delete/description",
    "value": "Anonymize subscription. At current it will anonymize subscription, billing history and subscription activity.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:ANONYMIZATION&#34;, action=8 (DELETE)&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1anonymization~1subscriptions/delete/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:ANONYMIZATION [DELETE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1payment~1orders~1{paymentOrderNo}~1refund/put/description",
    "value": "&lt;b&gt;[SERVICE COMMUNICATION ONLY]&lt;/b&gt; This API is used to refund order by paymentOrderNo from justice service.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:PAYMENT&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1payment~1orders~1{paymentOrderNo}~1refund/put/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:PAYMENT [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1public~1namespaces~1{namespace}~1items~1byCriteria/get/description",
    "value": "This API is used to query items by criteria within a store. If item not exist in specific region, default region item will return.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Optional permission&lt;/i&gt;: resource=&#34;PREVIEW&#34;, action=1(CREATE) (user with this permission can view draft store item)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Optional permission&lt;/i&gt;: resource=&#34;SANDBOX&#34;, action=1(CREATE) (user with this permission can view draft store item)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: the list of items&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "replace",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1me~1entitlements~1ownership~1byItemId/get/description",
    "value": "Get my entitlement ownership by itemId.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;NAMESPACE:{namespace}:ENTITLEMENT&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Path&#39;s namespace&lt;/i&gt; : &lt;ul&gt;&lt;li&gt;can be filled with &lt;b&gt;publisher namespace&lt;/b&gt; in order to get &lt;b&gt;publisher namespace entitlement ownership by sku&lt;/b&gt;&lt;/li&gt;&lt;li&gt;can be filled with &lt;b&gt;game namespace&lt;/b&gt; in order to get &lt;b&gt;game namespace entitlement ownership by sku&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1me~1entitlements~1ownership~1byItemId/get/security/1",
    "value": {
      "HasPermission": [
        "NAMESPACE:{namespace}:ENTITLEMENT [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1rewards~1import/post/description",
    "value": "Import reward configurations for a given namespace from file. At current, only JSON file is supported.&lt;p&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;*Required permission*: resource=&#34;ADMIN:NAMESPACE:{namespace}:REWARD&#34;, action=1 (CREATE)&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1rewards~1import/post/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:REWARD [CREATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1codes~1{code}/get/description",
    "value": "Get campaign code, it will check code whether available to redeem if redeemable true.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:CAMPAIGN&#34;, action=2 (READ) (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: code info&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1codes~1{code}/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:CAMPAIGN [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1orders~1{orderNo}~1receipt.pdf/get/description",
    "value": "Download user order receipt by orderNo.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:ORDER&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: order receipt pdf&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1orders~1{orderNo}~1receipt.pdf/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:ORDER [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1payment~1config~1merchant~1{id}~1paypalconfig/put/description",
    "value": "Update PayPal config.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:PAYMENT:CONFIG&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: updated payment merchant config&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1payment~1config~1merchant~1{id}~1paypalconfig/put/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:PAYMENT:CONFIG [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1items~1locale~1byIds/get/description",
    "value": "This API is used to bulk get locale items. If item not exist in specific region, default region item will return.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:ITEM&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: the list of items info&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1items~1locale~1byIds/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:ITEM [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1orders~1countOfItem/get/description",
    "value": "This API is used to get the count of purchased item which is the order target.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:ORDER&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: Item purchased count&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1orders~1countOfItem/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:ORDER [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1codes~1{code}~1disable/put/description",
    "value": "Disable code.&lt;p&gt;Disable an active code, the code can&#39;t be disabled if it has already been redeemed.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:CAMPAIGN&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: disabled code&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1codes~1{code}~1disable/put/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:CAMPAIGN [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1public~1namespaces~1{namespace}~1items~1bySku/get/description",
    "value": "This API is used to get the item by sku.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Optional permission&lt;/i&gt;: resource=&#34;PREVIEW&#34;, action=1(CREATE) (user with this permission can view draft store item)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Optional permission&lt;/i&gt;: resource=&#34;SANDBOX&#34;, action=1(CREATE) (user with this permission can view draft store item)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: the item with sku&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "replace",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1entitlements~1{entitlementId}~1decrement/put/description",
    "value": "Consume user entitlement. If the entitlement useCount is 0, the status will be CONSUMED.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;NAMESPACE:{namespace}:USER:{userId}:ENTITLEMENT&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: consumed entitlement&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1entitlements~1{entitlementId}~1decrement/put/security/1",
    "value": {
      "HasPermission": [
        "NAMESPACE:{namespace}:USER:{userId}:ENTITLEMENT [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1public~1namespaces~1{namespace}~1items~1byAppId/get/description",
    "value": "This API is used to get item by appId.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Optional permission&lt;/i&gt;: resource=&#34;PREVIEW&#34;, action=1(CREATE) (user with this permission can view draft store item)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Optional permission&lt;/i&gt;: resource=&#34;SANDBOX&#34;, action=1(CREATE) (user with this permission can view draft store item)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: the item with that appId&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1payment~1orders~1{paymentOrderNo}~1status/get/description",
    "value": "Get payment order charge status.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:PAYMENT&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: payment order charge status&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1payment~1orders~1{paymentOrderNo}~1status/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:PAYMENT [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1categories~1{categoryPath}/get/description",
    "value": "This API is used to get category by category path.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:CATEGORY&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: category data&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1categories~1{categoryPath}/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:CATEGORY [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1categories~1{categoryPath}/put/description",
    "value": "This API is used to update category. &lt;p&gt; The category update data is a category object, example as:&lt;pre&gt;&lt;code&gt;{\r\n\t&#34;storeId&#34;: &#34;store-id&#34;,\r\n\t&#34;localizationDisplayNames&#34;: {&#34;en&#34; : &#34;Games&#34;}\r\n}&lt;/code&gt;&lt;/pre&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:CATEGORY&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: the updated category data&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1categories~1{categoryPath}/put/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:CATEGORY [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1categories~1{categoryPath}/delete/description",
    "value": "This API is used to delete category by category path. &lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:CATEGORY&#34;, action=8 (DELETE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: the deleted category data&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1categories~1{categoryPath}/delete/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:CATEGORY [DELETE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1me~1entitlements~1ownership~1byAppId/get/description",
    "value": "Get my app entitlement ownership by appId.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;NAMESPACE:{namespace}:ENTITLEMENT&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Path&#39;s namespace&lt;/i&gt; : &lt;ul&gt;&lt;li&gt;can be filled with &lt;b&gt;publisher namespace&lt;/b&gt; in order to get &lt;b&gt;publisher namespace app entitlement ownership&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1me~1entitlements~1ownership~1byAppId/get/security/1",
    "value": {
      "HasPermission": [
        "NAMESPACE:{namespace}:ENTITLEMENT [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1items~1{itemId}~1disable/put/description",
    "value": "Disable an item.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:ITEM&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: updated item&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1items~1{itemId}~1disable/put/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:ITEM [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1fulfillment~1history/get/description",
    "value": "Query fulfillment histories in a namespace.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:FULFILLMENT&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: query fulfillment history&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1fulfillment~1history/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:FULFILLMENT [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1entitlements~1{entitlementId}~1enable/put/description",
    "value": "Enable user entitlement.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:ENTITLEMENT&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: enable entitlement&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1entitlements~1{entitlementId}~1enable/put/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:ENTITLEMENT [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1currencies/post/description",
    "value": "Create a currency.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:CURRENCY&#34;, action=1 (CREATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: created currency&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1currencies/post/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:CURRENCY [CREATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1currencies/get/description",
    "value": "List currencies of a namespace.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:CURRENCY&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: Currency List&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1currencies/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:CURRENCY [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1entitlements~1ownership~1byItemId/get/description",
    "value": "Get user entitlement ownership by itemId.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:ENTITLEMENT&#34;, action=2 (READ)&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1entitlements~1ownership~1byItemId/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:ENTITLEMENT [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1orders~1{orderNo}/get/description",
    "value": "Get an order.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:ORDER&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: get order&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1orders~1{orderNo}/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:ORDER [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1orders~1{orderNo}/put/description",
    "value": "Update order status.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:ORDER&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: updated order&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1orders~1{orderNo}/put/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:ORDER [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1subscriptions~1{subscriptionId}~1history/get/description",
    "value": "Get user subscription billing histories.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:SUBSCRIPTION&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: paginated subscription billing history&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1subscriptions~1{subscriptionId}~1history/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:SUBSCRIPTION [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1wallets~1{walletId}~1disable/put/description",
    "value": "disable a user wallet.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:WALLET&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1wallets~1{walletId}~1disable/put/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:WALLET [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1wallets~1{walletId}~1enable/put/description",
    "value": "enable a user wallet.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:WALLET&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1wallets~1{walletId}~1enable/put/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:WALLET [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1fulfillment~1code/post/description",
    "value": "Redeem campaign code.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:FULFILLMENT&#34;, action=1 (CREATED)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: fulfillment result&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1fulfillment~1code/post/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:FULFILLMENT []"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1payment~1config~1merchant~1alipayconfig~1test/post/description",
    "value": "Test AliPay configuration.Reference: &lt;a href=&#34;https://docs.open.alipay.com/270/alipay.trade.page.pay&#34;&gt;Alipay Document&lt;/a&gt;.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:PAYMENT:CONFIG&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: test result&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1payment~1config~1merchant~1alipayconfig~1test/post/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:PAYMENT:CONFIG [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1payment~1config~1merchant~1{id}~1wxpayconfig/put/description",
    "value": "Update wxpay configuration.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:PAYMENT:CONFIG&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: updated payment merchant config&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1payment~1config~1merchant~1{id}~1wxpayconfig/put/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:PAYMENT:CONFIG [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1payment~1config~1merchant~1{id}~1xsollaconfig~1test/get/description",
    "value": "Test xsolla configuration in payment merchant config. Reference: &lt;a href=&#34;https://developers.xsolla.com/?#simple-checkout&#34;&gt;Xsolla Document&lt;/a&gt;.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:PAYMENT:CONFIG&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: test xsolla config&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1payment~1config~1merchant~1{id}~1xsollaconfig~1test/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:PAYMENT:CONFIG [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1items~1itemId~1bySku/get/description",
    "value": "&lt;b&gt;[SERVICE COMMUNICATION ONLY]&lt;/b&gt; This API is used to get the itemId by sku.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:ITEM&#34;, action=2 (READ)&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: the itemId with sku&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1items~1itemId~1bySku/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:ITEM [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1payment~1config~1merchant~1{id}~1stripeconfig/put/description",
    "value": "Update stripe config.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:PAYMENT:CONFIG&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: updated payment merchant config&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1payment~1config~1merchant~1{id}~1stripeconfig/put/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:PAYMENT:CONFIG [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1entitlements~1{entitlementId}/get/description",
    "value": "Get entitlement.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:ENTITLEMENT&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: entitlement&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1entitlements~1{entitlementId}/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:ENTITLEMENT [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1rewards~1byCriteria/get/description",
    "value": "This API is used to query rewards by criteria.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:REWARD&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: the list of rewards&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1rewards~1byCriteria/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:REWARD [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1payment~1config~1merchant~1{id}~1checkoutconfig~1test/get/description",
    "value": "Test checkout.com configuration in payment merchant config. Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:PAYMENT:CONFIG&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: test result&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1payment~1config~1merchant~1{id}~1checkoutconfig~1test/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:PAYMENT:CONFIG [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1tickets~1{boothName}/post/description",
    "value": "&lt;b&gt;[SERVICE COMMUNICATION ONLY]&lt;/b&gt; Acquire ticket(code/key) based on booth name.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:TICKET&#34;, action=1 (CREATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: acquire result&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1tickets~1{boothName}/post/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:TICKET [CREATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1orders~1{orderNo}~1history/get/description",
    "value": "Get user order histories.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;NAMESPACE:{namespace}:USER:{userId}:ORDER&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: get order history&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1orders~1{orderNo}~1history/get/security/1",
    "value": {
      "HasPermission": [
        "NAMESPACE:{namespace}:USER:{userId}:ORDER [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1public~1namespaces~1{namespace}~1items~1{itemId}~1dynamic/get/description",
    "value": "Get item dynamic data for a published item.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: item dynamic data&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1items~1{itemId}~1locale/get/description",
    "value": "This API is used to get an item in specific locale. If item not exist in specific region, default region item will return.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:ITEM&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: item data&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1items~1{itemId}~1locale/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:ITEM [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1payment~1config~1merchant~1{id}~1adyenconfig/put/description",
    "value": "Update adyen config.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:PAYMENT:CONFIG&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: updated payment merchant config&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1payment~1config~1merchant~1{id}~1adyenconfig/put/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:PAYMENT:CONFIG [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1wallets~1{walletId}/get/description",
    "value": "get a wallet by wallet id.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:WALLET&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: wallet info&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1wallets~1{walletId}/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:WALLET [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1public~1namespaces~1{namespace}~1payment~1link/post/description",
    "value": "Get payment url.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: Get payment link&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "replace",
    "path": "/paths/~1public~1namespaces~1{namespace}~1payment~1publicconfig/get/description",
    "value": "Get payment provider public config, at current only Strip provide public config.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: Public config&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "replace",
    "path": "/paths/~1public~1namespaces~1{namespace}~1payment~1orders~1{paymentOrderNo}~1pay/post/description",
    "value": "Do payment(For now, this only support checkout.com).&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: Payment process result&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "replace",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1entitlements~1{entitlementId}/get/description",
    "value": "Get user entitlement.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;NAMESPACE:{namespace}:USER:{userId}:ENTITLEMENT&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: entitlement&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1entitlements~1{entitlementId}/get/security/1",
    "value": {
      "HasPermission": [
        "NAMESPACE:{namespace}:USER:{userId}:ENTITLEMENT [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1payment~1accounts~1{type}~1{id}/delete/description",
    "value": "Delete payment account.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;NAMESPACE:{namespace}:USER:{userId}:PAYMENT:ACCOUNT&#34;, action=8 (DELETE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;:&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1payment~1accounts~1{type}~1{id}/delete/security/1",
    "value": {
      "HasPermission": [
        "NAMESPACE:{namespace}:USER:{userId}:PAYMENT:ACCOUNT [DELETE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1orders~1{orderNo}~1notifications/post/description",
    "value": "&lt;b&gt;[SERVICE COMMUNICATION ONLY]&lt;/b&gt; This API is used as a web hook for payment notification from justice payment service.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:ORDER&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: Process result&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1orders~1{orderNo}~1notifications/post/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:ORDER [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1iap~1mock~1receipt/put/description",
    "value": "&lt;b&gt;[TEST FACILITY ONLY] Forbidden in live environment. &lt;/b&gt; Mock fulfill iap item without validate receipt.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:IAP&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: &lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1iap~1mock~1receipt/put/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:IAP [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1payment~1notifications/get/description",
    "value": "Query payment notifications.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:PAYMENT:NOTIFICATION&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: Payment notifications&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1payment~1notifications/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:PAYMENT:NOTIFICATION [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1me~1entitlements~1ownership~1bySku/get/description",
    "value": "Get my entitlement ownership by sku.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;NAMESPACE:{namespace}:ENTITLEMENT&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Path&#39;s namespace&lt;/i&gt; : &lt;ul&gt;&lt;li&gt;can be filled with &lt;b&gt;publisher namespace&lt;/b&gt; in order to get &lt;b&gt;publisher namespace entitlement ownership by sku&lt;/b&gt;&lt;/li&gt;&lt;li&gt;can be filled with &lt;b&gt;game namespace&lt;/b&gt; in order to get &lt;b&gt;game namespace entitlement ownership by sku&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1me~1entitlements~1ownership~1bySku/get/security/1",
    "value": {
      "HasPermission": [
        "NAMESPACE:{namespace}:ENTITLEMENT [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1payment~1config~1provider/post/description",
    "value": "Create payment provider config.&lt;br&gt;&lt;pre&gt;&lt;p&gt;&lt;strong&gt;Request Body Parameters:&lt;/strong&gt;&lt;/p&gt;&lt;pre&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;Parameter&lt;/td&gt;&lt;td&gt;Type&lt;/td&gt;&lt;td&gt;Required&lt;/td&gt;&lt;td&gt;Description&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;namespace&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;namespace, * indicates all namespace&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;region&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;region, * indicates all regions&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;aggregate&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;td&gt;aggregate payment provider, such as XSOLLA, ADYEN, STRIPE&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;specials&lt;/td&gt;&lt;td&gt;List&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;td&gt;special payment provider, such as ALIPAY, WXPAY&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/pre&gt;payment provider applied has priority: &lt;ol&gt;&lt;li&gt;namespace and region match&lt;/li&gt;&lt;li&gt;namespace matches and region is *&lt;/li&gt;&lt;li&gt;region matches and namespace is *&lt;/li&gt;&lt;li&gt;namespace and region are *&lt;/li&gt;&lt;/ol&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:PAYMENT:CONFIG&#34;, action=1 (CREATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: payment provider config&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1payment~1config~1provider/post/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:PAYMENT:CONFIG [CREATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1payment~1config~1provider/get/description",
    "value": "Query payment provider config.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:PAYMENT:CONFIG&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: payment provider config list&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1payment~1config~1provider/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:PAYMENT:CONFIG [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1wallets/get/description",
    "value": "Query wallets.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:WALLET&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: paginated wallets info&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1wallets/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:WALLET [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1orders/get/description",
    "value": "Query orders.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:ORDER&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: query orders&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1orders/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:ORDER [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1iap~1steam~1sync/put/description",
    "value": "Sync steam inventory&#39;s items.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;NAMESPACE:{namespace}:USER:{userId}:IAP&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: &lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1iap~1steam~1sync/put/security/1",
    "value": {
      "HasPermission": [
        "NAMESPACE:{namespace}:USER:{userId}:IAP [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1items~1{itemId}~1dynamic/get/description",
    "value": "Get item dynamic data for published item.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:ITEM&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: item dynamic data&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1items~1{itemId}~1dynamic/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:ITEM [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1public~1namespaces~1{namespace}~1items~1{itemId}~1locale/get/description",
    "value": "This API is used to get an item in locale. If item not exist in specific region, default region item will return.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Optional permission&lt;/i&gt;: resource=&#34;PREVIEW&#34;, action=1(CREATE) (user with this permission can view draft store item)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Optional permission&lt;/i&gt;: resource=&#34;SANDBOX&#34;, action=1(CREATE) (user with this permission can view draft store item)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: item data&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1currencies~1{currencyCode}~1summary/get/description",
    "value": "Get currency summary by code.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:CURRENCY&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: simplified Currency&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1currencies~1{currencyCode}~1summary/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:CURRENCY [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1subscriptions~1{subscriptionId}/get/description",
    "value": "Get user subscription.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:SUBSCRIPTION&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: subscription&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1subscriptions~1{subscriptionId}/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:SUBSCRIPTION [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1subscriptions~1{subscriptionId}/delete/description",
    "value": "&lt;b&gt;[TEST FACILITY ONLY] Forbidden in live environment. &lt;/b&gt; Delete user subscription.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:SUBSCRIPTION&#34;, action=8 (DELETE)&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1subscriptions~1{subscriptionId}/delete/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:SUBSCRIPTION [DELETE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1entitlements~1ownership~1bySku/get/description",
    "value": "Get user entitlement ownership by sku.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:ENTITLEMENT&#34;, action=2 (READ)&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1entitlements~1ownership~1bySku/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:ENTITLEMENT [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1rewards/post/description",
    "value": "This API is used to create a reward.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:REWARD&#34;, action=1 (CREATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: created reward data&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1rewards/post/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:REWARD [CREATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1entitlements~1{entitlementId}~1history/get/description",
    "value": "Get user entitlement histories.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:ENTITLEMENT&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: list of entitlement history&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1entitlements~1{entitlementId}~1history/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:ENTITLEMENT [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1payment~1config~1merchant~1{id}~1xsollauiconfig/put/description",
    "value": "Update xsolla UI configuration.Reference: &lt;a href=&#34;https://developers.xsolla.com/api.html#ui-integrations&#34;&gt;Xsolla Document&lt;/a&gt;.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:PAYMENT:CONFIG&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: updated payment merchant config&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1payment~1config~1merchant~1{id}~1xsollauiconfig/put/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:PAYMENT:CONFIG [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1public~1namespaces~1{namespace}~1categories~1{categoryPath}~1descendants/get/description",
    "value": "This API is used to get descendant categories by category path.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Optional permission&lt;/i&gt;: resource=&#34;PREVIEW&#34;, action=1(CREATE) (user with this permission can view draft store category)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Optional permission&lt;/i&gt;: resource=&#34;SANDBOX&#34;, action=1(CREATE) (user with this permission can view draft store category)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: list of descendant categories data&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "replace",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1entitlements/get/description",
    "value": "Query user entitlements for a specific user.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;NAMESPACE:{namespace}:USER:{userId}:ENTITLEMENT&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: entitlement list&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1entitlements/get/security/1",
    "value": {
      "HasPermission": [
        "NAMESPACE:{namespace}:USER:{userId}:ENTITLEMENT [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1public~1namespaces~1{namespace}~1items~1locale~1byIds/get/description",
    "value": "This API is used to bulk get locale items. If item not exist in specific region, default region item will return.&lt;p&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Optional permission&lt;/i&gt;: resource=&#34;PREVIEW&#34;, action=1(CREATE) (user with this permission can view draft store items)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Optional permission&lt;/i&gt;: resource=&#34;SANDBOX&#34;, action=1(CREATE) (user with this permission can view draft store items)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: the list of items info&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1entitlements~1revoke~1byIds/put/description",
    "value": "Revoke user&#39;s entitlements by ids.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:ENTITLEMENT&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: revoke entitlements count&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1entitlements~1revoke~1byIds/put/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:ENTITLEMENT [UPDATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1payment~1config~1provider~1special/get/description",
    "value": "Get special payment providers, such as ALIPAY, WXPAY.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:PAYMENT:CONFIG&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: payment provider list&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1payment~1config~1provider~1special/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:PAYMENT:CONFIG [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1payment~1orders/post/description",
    "value": "&lt;p&gt;This API is used to create payment order from non justice service. e.g. from dedicated server, the result contains the payment station url.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Path Parameter:&lt;/strong&gt;&lt;/p&gt;&lt;pre&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;Parameter&lt;/td&gt;&lt;td&gt;Type&lt;/td&gt;&lt;td&gt;Required&lt;/td&gt;&lt;td&gt;Description&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;namespace&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;Namespace that payment order resides in, should be publisher namespace if it&#39;s a Steam like platform that share &lt;br&gt;payment config cross namespaces, otherwise it&#39;s the game namespace&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;&lt;strong&gt;Request Body Parameters:&lt;/strong&gt;&lt;/p&gt;&lt;pre&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;Parameter&lt;/td&gt;&lt;td&gt;Type&lt;/td&gt;&lt;td&gt;Required&lt;/td&gt;&lt;td&gt;Description&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;extOrderNo&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;External order number, it should be unique in invoker order system&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;sku&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;td&gt;Item identity&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;targetNamespace&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;The game namespace&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;targetUserId&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;User id for the order owner in game namespace&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;extUserId&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;td&gt;External user id, can be user character id &lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;price&lt;/td&gt;&lt;td&gt;int&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;price which should be greater than 0&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;title&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;Item title&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;description&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;Item description&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;currencyCode&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;td&gt;Currency code, default is USD&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;currencyNamespace&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;td&gt;Currency namespace, default is publisher namespace&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;region&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;td&gt;Country of the user, will get from user info if not present&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;language&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;td&gt;Language of the user&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;sandbox&lt;/td&gt;&lt;td&gt;Boolean&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;td&gt;set to true will create sandbox order that not real paid for xsolla/alipay and will not validate &lt;br&gt;price for wxpay.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;returnUrl&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;td&gt;customized return url for redirect once payment finished, leave unset to use configuration in &lt;br&gt;namespace&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;notifyUrl&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;td&gt;customized notify url for payment web hook, leave unset to use configuration in namespace&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;customParameters&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;td&gt;Custom parameters&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Request Body Example:&lt;/strong&gt;&lt;/p&gt;&lt;pre&gt;&lt;code style=&#39;overflow: auto&#39;&gt;{\r\n           &#34;extOrderNo&#34;: &#34;123456789&#34;,\n           &#34;sku&#34;: &#34;sku&#34;,\n           &#34;targetNamespace&#34;: &#34;game1&#34;,\n           &#34;targetUserId&#34;: &#34;94451623768940d58416ca33ca767ec3&#34;,\n           &#34;extUserId&#34;: &#34;678&#34;,\n           &#34;title&#34;: &#34;Frostmourne&#34;,\n           &#34;description\\&#34;: &#34;Here was power. Here was despair&#34;,\n           &#34;price&#34;: 100,\n           &#34;region&#34;: &#34;CN&#34;, \n           &#34;language&#34;: &#34;zh-CN&#34;, \n           &#34;currencyCode&#34;: &#34;USD&#34;,\n           &#34;currencyNamespace&#34;: &#34;accelbyte&#34;\r\n}&lt;/pre&gt;&lt;/code&gt;&lt;h4&gt;Payment Notification:&lt;/h4&gt;&lt;p&gt;After user complete the payment, it will send notification to configured web hook, http status code should return 200 or 204 once you resolve notification successfully, otherwise payment system will retry notification in interval&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Payment notification parameter:&lt;/strong&gt;&lt;/p&gt;&lt;pre&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;Parameter&lt;/td&gt;&lt;td&gt;Type&lt;/td&gt;&lt;td&gt;Required&lt;/td&gt;&lt;td&gt;Description&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;payload&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;Payment notification payload in json string &lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;sign&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;sha1 hex signature for payload and private key&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Payment notification parameter Example:&lt;/strong&gt;&lt;/p&gt;&lt;pre&gt;&lt;code style=&#39;overflow: auto&#39;&gt;{\r\n       &#34;payload&#34;: &#34;{\n           \\&#34;type\\&#34;: \\&#34;payment\\&#34;,\n           \\&#34;nonceStr\\&#34;: \\&#34;34c1dcf3eb58455eb161465bbfc0b590\\&#34;,\n           \\&#34;paymentOrderNo\\&#34;: \\&#34;18081239088\\&#34;,\n           \\&#34;namespace\\&#34;: \\&#34;accelbyte\\&#34;,\n           \\&#34;targetNamespace\\&#34;: \\&#34;game1\\&#34;,\n           \\&#34;targetUserId\\&#34;: \\&#34;94451623768940d58416ca33ca767ec3\\&#34;,\n           \\&#34;extOrderNo\\&#34;: \\&#34;123456789\\&#34;,\n           \\&#34;sku\\&#34;: \\&#34;sku\\&#34;,\n           \\&#34;extUserId\\&#34;: \\&#34;678\\&#34;,\n           \\&#34;price\\&#34;: 100,\n           \\&#34;paymentProvider\\&#34;: \\&#34;XSOLLA\\&#34;,\n           \\&#34;vat\\&#34;: 0,\n           \\&#34;salesTax\\&#34;: 0,\n           \\&#34;paymentProviderFee\\&#34;: 0,\n           \\&#34;paymentMethodFee\\&#34;: 0,\n           \\&#34;currency\\&#34;: {\n                   \\&#34;currencyCode\\&#34;: \\&#34;USD\\&#34;,\n                   \\&#34;currencySymbol\\&#34;: \\&#34;$\\&#34;,\n                   \\&#34;currencyType\\&#34;: \\&#34;REAL\\&#34;,\n                   \\&#34;namespace\\&#34;: \\&#34;accelbyte\\&#34;,\n                   \\&#34;decimals\\&#34;: 2\n               },\n           \\&#34;status\\&#34;: \\&#34;CHARGED\\&#34;,\n           \\&#34;createdTime\\&#34;: \\&#34;2018-07-28T00:39:16.274Z\\&#34;,\n           \\&#34;chargedTime\\&#34;: \\&#34;2018-07-28T00:39:16.274Z\\&#34;\n       }&#34;,\r\n       &#34;sign&#34;:&#34;e31fb92516cc9faaf50ad70343e1293acec6f3d5&#34;\r\n}&lt;/pre&gt;&lt;/code&gt;&lt;p&gt;&lt;strong&gt;Payment notification payload parameter list:&lt;/strong&gt;&lt;/p&gt;&lt;pre&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;Parameter&lt;/td&gt;&lt;td&gt;Type&lt;/td&gt;&lt;td&gt;Required&lt;/td&gt;&lt;td&gt;Description&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;type&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;Notification type: &#39;payment&#39;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;paymentOrderNo&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;Payment system generated order number&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;extOrderNo&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;td&gt;External order number that passed by invoker&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;namespace&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;Namespace that related payment order resides in&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;targetNamespace&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;The game namespace&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;targetUserId&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;The user id in game namespace&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;sku&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;td&gt;Item identify, it will return if pass it when create payment&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;extUserId&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;td&gt;External user id, can be character id, it will return if pass it when create payment&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;price&lt;/td&gt;&lt;td&gt;int&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;Price of item&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;paymentProvider&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;Payment provider, allowed values: xsolla/alipay/wxpay/wallet&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;vat&lt;/td&gt;&lt;td&gt;int&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;Payment order VAT&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;salesTax&lt;/td&gt;&lt;td&gt;int&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;Payment order sales tax&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;paymentProviderFee&lt;/td&gt;&lt;td&gt;int&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;Payment provider fee&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;paymentMethodFee&lt;/td&gt;&lt;td&gt;int&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;Payment method fee&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;currency&lt;/td&gt;&lt;td&gt;Map&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;Payment order currency info&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;status&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;Payment order status&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;statusReason&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;td&gt;Payment order status reason&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;createdTime&lt;/td&gt;&lt;td&gt;Datetime&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;td&gt;The time of the order created&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;chargedTime&lt;/td&gt;&lt;td&gt;Datetime&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;td&gt;The time of the order charged&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;customParameters&lt;/td&gt;&lt;td&gt;Map&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;td&gt;custom parameters, will return if pass it when create payment&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;nonceStr&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;Random string, max length is 32, can be timestamp or uuid&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Currency info parameter list:&lt;/strong&gt;&lt;/p&gt;&lt;pre&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;Parameter&lt;/td&gt;&lt;td&gt;Type&lt;/td&gt;&lt;td&gt;Required&lt;/td&gt;&lt;td&gt;Description&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;currencyCode&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;Currency Code&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;currencySymbol&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;Currency Symbol&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;currencyType&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;Currency type(REAL/VIRTUAL)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;namespace&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;Currency namespace&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;decimals&lt;/td&gt;&lt;td&gt;int&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;Currency decimals&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/pre&gt;&lt;h4&gt;Encryption Rule:&lt;/h4&gt;&lt;p&gt;Concat payload json string and private key and then do sha1Hex.&lt;/p&gt;&lt;h4&gt;Other detail info:&lt;/h4&gt; &lt;ul&gt;&lt;li&gt;&lt;i&gt;Token type&lt;/i&gt;: client token&lt;/li&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:PAYMENT&#34;, action=1 (CREATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Optional permission(user with this permission will create sandbox order)&lt;/i&gt;: resource=&#34;SANDBOX&#34;, action=1 (CREATE)&lt;/li&gt;&lt;li&gt;It will be forbidden while the target user is banned: PAYMENT_INITIATE or ORDER_AND_PAYMENT&lt;/li&gt;&lt;li&gt;&lt;b&gt;cross namespace allowed&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: created payment order info&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1payment~1orders/post/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:PAYMENT [CREATE]"
      ],
      "authorization": []
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1payment~1orders/get/description",
    "value": "Query payment orders.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:PAYMENT&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: query payment orders&lt;/li&gt;&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1payment~1orders/get/security/1",
    "value": {
      "HasPermission": [
        "ADMIN:NAMESPACE:{namespace}:PAYMENT [READ]"
      ],
      "authorization": []
    }
  },
  {
    "op": "add",
    "path": "/securityDefinitions/HasPermission",
    "value": {
      "authorizationUrl": "https://dummy.oauth.net/auth",
      "flow": "accessCode",
      "scopes": {
        "ADMIN:FULFILLMENT [CREATE]": "ADMIN:FULFILLMENT [CREATE]",
        "ADMIN:FULFILLMENT [DELETE]": "ADMIN:FULFILLMENT [DELETE]",
        "ADMIN:FULFILLMENT [READ]": "ADMIN:FULFILLMENT [READ]",
        "ADMIN:FULFILLMENT [UPDATE]": "ADMIN:FULFILLMENT [UPDATE]",
        "ADMIN:NAMESPACE:{namespace}:CAMPAIGN [CREATE]": "ADMIN:NAMESPACE:{namespace}:CAMPAIGN [CREATE]",
        "ADMIN:NAMESPACE:{namespace}:CAMPAIGN [READ]": "ADMIN:NAMESPACE:{namespace}:CAMPAIGN [READ]",
        "ADMIN:NAMESPACE:{namespace}:CAMPAIGN [UPDATE]": "ADMIN:NAMESPACE:{namespace}:CAMPAIGN [UPDATE]",
        "ADMIN:NAMESPACE:{namespace}:CATEGORY [CREATE]": "ADMIN:NAMESPACE:{namespace}:CATEGORY [CREATE]",
        "ADMIN:NAMESPACE:{namespace}:CATEGORY [DELETE]": "ADMIN:NAMESPACE:{namespace}:CATEGORY [DELETE]",
        "ADMIN:NAMESPACE:{namespace}:CATEGORY [READ]": "ADMIN:NAMESPACE:{namespace}:CATEGORY [READ]",
        "ADMIN:NAMESPACE:{namespace}:CATEGORY [UPDATE]": "ADMIN:NAMESPACE:{namespace}:CATEGORY [UPDATE]",
        "ADMIN:NAMESPACE:{namespace}:CURRENCY [CREATE]": "ADMIN:NAMESPACE:{namespace}:CURRENCY [CREATE]",
        "ADMIN:NAMESPACE:{namespace}:CURRENCY [DELETE]": "ADMIN:NAMESPACE:{namespace}:CURRENCY [DELETE]",
        "ADMIN:NAMESPACE:{namespace}:CURRENCY [READ]": "ADMIN:NAMESPACE:{namespace}:CURRENCY [READ]",
        "ADMIN:NAMESPACE:{namespace}:CURRENCY [UPDATE]": "ADMIN:NAMESPACE:{namespace}:CURRENCY [UPDATE]",
        "ADMIN:NAMESPACE:{namespace}:ENTITLEMENT [READ]": "ADMIN:NAMESPACE:{namespace}:ENTITLEMENT [READ]",
        "ADMIN:NAMESPACE:{namespace}:FULFILLMENT [READ]": "ADMIN:NAMESPACE:{namespace}:FULFILLMENT [READ]",
        "ADMIN:NAMESPACE:{namespace}:IAP:CONFIG [DELETE]": "ADMIN:NAMESPACE:{namespace}:IAP:CONFIG [DELETE]",
        "ADMIN:NAMESPACE:{namespace}:IAP:CONFIG [READ]": "ADMIN:NAMESPACE:{namespace}:IAP:CONFIG [READ]",
        "ADMIN:NAMESPACE:{namespace}:IAP:CONFIG [UPDATE]": "ADMIN:NAMESPACE:{namespace}:IAP:CONFIG [UPDATE]",
        "ADMIN:NAMESPACE:{namespace}:ITEM [CREATE]": "ADMIN:NAMESPACE:{namespace}:ITEM [CREATE]",
        "ADMIN:NAMESPACE:{namespace}:ITEM [DELETE]": "ADMIN:NAMESPACE:{namespace}:ITEM [DELETE]",
        "ADMIN:NAMESPACE:{namespace}:ITEM [READ]": "ADMIN:NAMESPACE:{namespace}:ITEM [READ]",
        "ADMIN:NAMESPACE:{namespace}:ITEM [UPDATE]": "ADMIN:NAMESPACE:{namespace}:ITEM [UPDATE]",
        "ADMIN:NAMESPACE:{namespace}:KEYGROUP [CREATE]": "ADMIN:NAMESPACE:{namespace}:KEYGROUP [CREATE]",
        "ADMIN:NAMESPACE:{namespace}:KEYGROUP [READ]": "ADMIN:NAMESPACE:{namespace}:KEYGROUP [READ]",
        "ADMIN:NAMESPACE:{namespace}:KEYGROUP [UPDATE]": "ADMIN:NAMESPACE:{namespace}:KEYGROUP [UPDATE]",
        "ADMIN:NAMESPACE:{namespace}:ORDER [READ]": "ADMIN:NAMESPACE:{namespace}:ORDER [READ]",
        "ADMIN:NAMESPACE:{namespace}:ORDER [UPDATE]": "ADMIN:NAMESPACE:{namespace}:ORDER [UPDATE]",
        "ADMIN:NAMESPACE:{namespace}:PAYMENT [CREATE]": "ADMIN:NAMESPACE:{namespace}:PAYMENT [CREATE]",
        "ADMIN:NAMESPACE:{namespace}:PAYMENT [READ]": "ADMIN:NAMESPACE:{namespace}:PAYMENT [READ]",
        "ADMIN:NAMESPACE:{namespace}:PAYMENT [UPDATE]": "ADMIN:NAMESPACE:{namespace}:PAYMENT [UPDATE]",
        "ADMIN:NAMESPACE:{namespace}:PAYMENT:CONFIG [READ]": "ADMIN:NAMESPACE:{namespace}:PAYMENT:CONFIG [READ]",
        "ADMIN:NAMESPACE:{namespace}:PAYMENT:CONFIG [UPDATE]": "ADMIN:NAMESPACE:{namespace}:PAYMENT:CONFIG [UPDATE]",
        "ADMIN:NAMESPACE:{namespace}:PAYMENT:NOTIFICATION [READ]": "ADMIN:NAMESPACE:{namespace}:PAYMENT:NOTIFICATION [READ]",
        "ADMIN:NAMESPACE:{namespace}:REWARD [CREATE]": "ADMIN:NAMESPACE:{namespace}:REWARD [CREATE]",
        "ADMIN:NAMESPACE:{namespace}:REWARD [DELETE]": "ADMIN:NAMESPACE:{namespace}:REWARD [DELETE]",
        "ADMIN:NAMESPACE:{namespace}:REWARD [READ]": "ADMIN:NAMESPACE:{namespace}:REWARD [READ]",
        "ADMIN:NAMESPACE:{namespace}:REWARD [UPDATE]": "ADMIN:NAMESPACE:{namespace}:REWARD [UPDATE]",
        "ADMIN:NAMESPACE:{namespace}:STORE [CREATE]": "ADMIN:NAMESPACE:{namespace}:STORE [CREATE]",
        "ADMIN:NAMESPACE:{namespace}:STORE [DELETE]": "ADMIN:NAMESPACE:{namespace}:STORE [DELETE]",
        "ADMIN:NAMESPACE:{namespace}:STORE [READ]": "ADMIN:NAMESPACE:{namespace}:STORE [READ]",
        "ADMIN:NAMESPACE:{namespace}:STORE [UPDATE]": "ADMIN:NAMESPACE:{namespace}:STORE [UPDATE]",
        "ADMIN:NAMESPACE:{namespace}:SUBSCRIPTION [READ]": "ADMIN:NAMESPACE:{namespace}:SUBSCRIPTION [READ]",
        "ADMIN:NAMESPACE:{namespace}:SUBSCRIPTION [UPDATE]": "ADMIN:NAMESPACE:{namespace}:SUBSCRIPTION [UPDATE]",
        "ADMIN:NAMESPACE:{namespace}:TICKET [READ]": "ADMIN:NAMESPACE:{namespace}:TICKET [READ]",
        "ADMIN:NAMESPACE:{namespace}:TICKET [UPDATE]": "ADMIN:NAMESPACE:{namespace}:TICKET [UPDATE]",
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:ANONYMIZATION [DELETE]": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:ANONYMIZATION [DELETE]",
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:ENTITLEMENT [CREATE]": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:ENTITLEMENT [CREATE]",
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:ENTITLEMENT [READ]": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:ENTITLEMENT [READ]",
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:ENTITLEMENT [UPDATE]": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:ENTITLEMENT [UPDATE]",
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:ENTITLEMENT []": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:ENTITLEMENT []",
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:FULFILLMENT []": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:FULFILLMENT []",
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:IAP [READ]": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:IAP [READ]",
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:IAP [UPDATE]": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:IAP [UPDATE]",
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:ORDER [READ]": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:ORDER [READ]",
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:ORDER [UPDATE]": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:ORDER [UPDATE]",
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:PAYMENT [CREATE]": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:PAYMENT [CREATE]",
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:PAYMENT [UPDATE]": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:PAYMENT [UPDATE]",
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:REDEMPTION [CREATE]": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:REDEMPTION [CREATE]",
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:SUBSCRIPTION [CREATE]": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:SUBSCRIPTION [CREATE]",
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:SUBSCRIPTION [DELETE]": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:SUBSCRIPTION [DELETE]",
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:SUBSCRIPTION [READ]": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:SUBSCRIPTION [READ]",
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:SUBSCRIPTION [UPDATE]": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:SUBSCRIPTION [UPDATE]",
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:TICKET [CREATE]": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:TICKET [CREATE]",
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:WALLET [READ]": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:WALLET [READ]",
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:WALLET [UPDATE]": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:WALLET [UPDATE]",
        "ADMIN:NAMESPACE:{namespace}:WALLET [READ]": "ADMIN:NAMESPACE:{namespace}:WALLET [READ]",
        "ADMIN:ORDER [READ]": "ADMIN:ORDER [READ]",
        "ADMIN:PAYMENT [READ]": "ADMIN:PAYMENT [READ]",
        "ADMIN:PAYMENT:CONFIG [CREATE]": "ADMIN:PAYMENT:CONFIG [CREATE]",
        "ADMIN:PAYMENT:CONFIG [DELETE]": "ADMIN:PAYMENT:CONFIG [DELETE]",
        "ADMIN:PAYMENT:CONFIG [READ]": "ADMIN:PAYMENT:CONFIG [READ]",
        "ADMIN:PAYMENT:CONFIG [UPDATE]": "ADMIN:PAYMENT:CONFIG [UPDATE]",
        "NAMESPACE:{namespace}:ENTITLEMENT [READ]": "NAMESPACE:{namespace}:ENTITLEMENT [READ]",
        "NAMESPACE:{namespace}:REWARD [READ]": "NAMESPACE:{namespace}:REWARD [READ]",
        "NAMESPACE:{namespace}:USER:{userId}:ENTITLEMENT [READ]": "NAMESPACE:{namespace}:USER:{userId}:ENTITLEMENT [READ]",
        "NAMESPACE:{namespace}:USER:{userId}:ENTITLEMENT [UPDATE]": "NAMESPACE:{namespace}:USER:{userId}:ENTITLEMENT [UPDATE]",
        "NAMESPACE:{namespace}:USER:{userId}:FULFILLMENT []": "NAMESPACE:{namespace}:USER:{userId}:FULFILLMENT []",
        "NAMESPACE:{namespace}:USER:{userId}:IAP [UPDATE]": "NAMESPACE:{namespace}:USER:{userId}:IAP [UPDATE]",
        "NAMESPACE:{namespace}:USER:{userId}:ORDER [CREATE]": "NAMESPACE:{namespace}:USER:{userId}:ORDER [CREATE]",
        "NAMESPACE:{namespace}:USER:{userId}:ORDER [READ]": "NAMESPACE:{namespace}:USER:{userId}:ORDER [READ]",
        "NAMESPACE:{namespace}:USER:{userId}:ORDER [UPDATE]": "NAMESPACE:{namespace}:USER:{userId}:ORDER [UPDATE]",
        "NAMESPACE:{namespace}:USER:{userId}:PAYMENT:ACCOUNT [DELETE]": "NAMESPACE:{namespace}:USER:{userId}:PAYMENT:ACCOUNT [DELETE]",
        "NAMESPACE:{namespace}:USER:{userId}:PAYMENT:ACCOUNT [READ]": "NAMESPACE:{namespace}:USER:{userId}:PAYMENT:ACCOUNT [READ]",
        "NAMESPACE:{namespace}:USER:{userId}:SUBSCRIPTION [CREATE]": "NAMESPACE:{namespace}:USER:{userId}:SUBSCRIPTION [CREATE]",
        "NAMESPACE:{namespace}:USER:{userId}:SUBSCRIPTION [READ]": "NAMESPACE:{namespace}:USER:{userId}:SUBSCRIPTION [READ]",
        "NAMESPACE:{namespace}:USER:{userId}:SUBSCRIPTION [UPDATE]": "NAMESPACE:{namespace}:USER:{userId}:SUBSCRIPTION [UPDATE]",
        "NAMESPACE:{namespace}:USER:{userId}:WALLET [READ]": "NAMESPACE:{namespace}:USER:{userId}:WALLET [READ]",
        "NAMESPACE:{namespace}:WALLET [READ]": "NAMESPACE:{namespace}:WALLET [READ]"
      },
      "tokenUrl": "https://dumy.oauth.net/token",
      "type": "oauth2"
    }
  },
  {
    "op": "add",
    "path": "/securityDefinitions/HasScope",
    "value": {
      "authorizationUrl": "https://dummy.oauth.net/auth",
      "flow": "accessCode",
      "scopes": {},
      "tokenUrl": "https://dumy.oauth.net/token",
      "type": "oauth2"
    }
  }
]

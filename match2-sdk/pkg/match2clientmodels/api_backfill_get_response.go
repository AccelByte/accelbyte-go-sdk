// Code generated by go-swagger; DO NOT EDIT.

package match2clientmodels

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// APIBackfillGetResponse api backfill get response
//
// swagger:model api.BackfillGetResponse
type APIBackfillGetResponse struct {

	// created at
	// Format: date-time
	CreatedAt *strfmt.DateTime `json:"createdAt,omitempty"`

	// match pool
	MatchPool string `json:"matchPool,omitempty"`

	// match session ID
	MatchSessionID string `json:"matchSessionID,omitempty"`

	// partial match
	PartialMatch *APIMatch `json:"partialMatch,omitempty"`

	// ticket ID
	TicketID string `json:"ticketID,omitempty"`
}

// Validate validates this api backfill get response
func (m *APIBackfillGetResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCreatedAt(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePartialMatch(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *APIBackfillGetResponse) validateCreatedAt(formats strfmt.Registry) error {

	if swag.IsZero(m.CreatedAt) { // not required
		return nil
	}

	if err := validate.FormatOf("createdAt", "body", "date-time", m.CreatedAt.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *APIBackfillGetResponse) validatePartialMatch(formats strfmt.Registry) error {

	if swag.IsZero(m.PartialMatch) { // not required
		return nil
	}

	if m.PartialMatch != nil {
		if err := m.PartialMatch.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("partialMatch")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *APIBackfillGetResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *APIBackfillGetResponse) UnmarshalBinary(b []byte) error {
	var res APIBackfillGetResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

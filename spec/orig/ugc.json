{
  "swagger": "2.0",
  "info": {
    "description": "Justice UGC Service",
    "title": "justice-ugc-service",
    "contact": {
      "name": "Engineering Team at AccelByte",
      "url": "https://accelbyte.io",
      "email": "engineering@accelbyte.io"
    },
    "version": "1.10.1"
  },
  "paths": {
    "/ugc/v1/admin/namespaces/{namespace}/channels": {
      "get": {
        "description": "Required permission <b>ADMIN:NAMESPACE:{namespace}:USER:{userId}:CHANNEL [READ]</b>",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "[Admin] Channel"
        ],
        "summary": "Get Channels",
        "operationId": "SingleAdminGetChannel",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "default": 1000,
            "description": "number of content per page",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "default": 0,
            "description": "the offset number to retrieve",
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.PaginatedGetChannelResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      },
      "post": {
        "description": "Required permission <b>ADMIN:NAMESPACE:{namespace}:USER:{userId}:CHANNEL [CREATE]</b>",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "[Admin] Channel"
        ],
        "summary": "Create Channel",
        "operationId": "AdminCreateChannel",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.ChannelRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/models.ChannelResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    },
    "/ugc/v1/admin/namespaces/{namespace}/channels/{channelId}": {
      "put": {
        "description": "Required permission <b>ADMIN:NAMESPACE:{namespace}:USER:{userId}:CHANNEL [UPDATE]</b>",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "[Admin] Channel"
        ],
        "summary": "Update Channel",
        "operationId": "SingleAdminUpdateChannel",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "channelID",
            "name": "channelId",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.ChannelRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.ChannelResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      },
      "delete": {
        "description": "Required permission <b>ADMIN:NAMESPACE:{namespace}:USER:{userId}:CHANNEL [DELETE]</b>",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "[Admin] Channel"
        ],
        "summary": "Delete Channel",
        "operationId": "SingleAdminDeleteChannel",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "channelID",
            "name": "channelId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    },
    "/ugc/v1/admin/namespaces/{namespace}/channels/{channelId}/contents": {
      "post": {
        "description": "Required permission <b>ADMIN:NAMESPACE:{namespace}:USER:{userId}:CONTENT [CREATE]</b>.\\n \n\t\t\t\tAll request body are required except preview and tags.\n\t\t\t\t",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "[Admin] Content"
        ],
        "summary": "Upload content to a channel",
        "operationId": "AdminUploadContentDirect",
        "deprecated": true,
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "channel ID",
            "name": "channelId",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.CreateContentRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/models.CreateContentResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    },
    "/ugc/v1/admin/namespaces/{namespace}/channels/{channelId}/contents/s3": {
      "post": {
        "description": "Required permission <b>ADMIN:NAMESPACE:{namespace}:USER:{userId}:CONTENT [CREATE]</b>.\\n \n\t\t\t\tAll request body are required except preview, tags, and contentType.\n\t\t\t\tcontentType values is used to enforce the Content-Type header needed by the client when uploading the content using the S3 presigned URL.\n\t\t\t\tIf not specified, it will use fileExtension value.\n\t\t\t\t\t\t",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "[Admin] Content"
        ],
        "summary": "Upload content to S3 bucket",
        "operationId": "AdminUploadContentS3",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "channel ID",
            "name": "channelId",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.CreateContentRequestS3"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/models.CreateContentResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    },
    "/ugc/v1/admin/namespaces/{namespace}/channels/{channelId}/contents/s3/{contentId}": {
      "put": {
        "description": "Required permission <b>ADMIN:NAMESPACE:{namespace}:USER:{userId}:CONTENT [UPDATE]</b>.\\n \n\t\t\t\t\tAll request body are required except payload, preview, tags, and contentType.\n\t\t\t\t\tcontentType values is used to enforce the Content-Type header needed by the client to upload the content using the S3 presigned URL.\n\t\t\t\t\tIf not specified, it will use fileExtension value.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "[Admin] Content"
        ],
        "summary": "Update content to S3 bucket",
        "operationId": "SingleAdminUpdateContentS3",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "channel ID",
            "name": "channelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "content ID",
            "name": "contentId",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.CreateContentRequestS3"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.CreateContentResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    },
    "/ugc/v1/admin/namespaces/{namespace}/channels/{channelId}/contents/search": {
      "get": {
        "description": "Required permission <b>ADMIN:NAMESPACE:{namespace}:USER:*:CONTENT [CREATE]</b>",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "[Admin] Content"
        ],
        "summary": "Search contents specific to a channel",
        "operationId": "AdminSearchChannelSpecificContent",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "sorting criteria: name,download,like,date. default=date",
            "name": "sortby",
            "in": "query"
          },
          {
            "type": "string",
            "description": "sorting order: asc, desc. default=desc",
            "name": "orderby",
            "in": "query"
          },
          {
            "type": "string",
            "description": "channel ID",
            "name": "channelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "content name",
            "name": "name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "creator name",
            "name": "creator",
            "in": "query"
          },
          {
            "type": "string",
            "description": "content type",
            "name": "type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "content subtype",
            "name": "subtype",
            "in": "query"
          },
          {
            "type": "string",
            "description": "content tag",
            "name": "tags",
            "in": "query"
          },
          {
            "type": "string",
            "description": "filter only official contents (boolean)",
            "name": "isofficial",
            "in": "query"
          },
          {
            "type": "string",
            "default": 1000,
            "description": "number of content per page",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "default": 0,
            "description": "the offset number to retrieve",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "string",
            "description": "user ID",
            "name": "userId",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.PaginatedContentDownloadResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    },
    "/ugc/v1/admin/namespaces/{namespace}/channels/{channelId}/contents/{contentId}": {
      "put": {
        "description": "Required permission <b>ADMIN:NAMESPACE:{namespace}:USER:{userId}:CONTENT [UPDATE]</b>.\\n \n\t\t\t\t\tAll request body are required except preview and tags.\n\t\t\t\t\t",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "[Admin] Content"
        ],
        "summary": "Update content to a channel",
        "operationId": "SingleAdminUpdateContentDirect",
        "deprecated": true,
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "channel ID",
            "name": "channelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "content ID",
            "name": "contentId",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.CreateContentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.CreateContentResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      },
      "delete": {
        "description": "Required permission <b>ADMIN:NAMESPACE:{namespace}:USER:{userId}:CONTENT [DELETE]</b>.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "[Admin] Content"
        ],
        "summary": "Delete content",
        "operationId": "SingleAdminDeleteContent",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "channel ID",
            "name": "channelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "content ID",
            "name": "contentId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    },
    "/ugc/v1/admin/namespaces/{namespace}/contents": {
      "get": {
        "description": "Required permission <b>ADMIN:NAMESPACE:{namespace}:USER:{userId}:CONTENT [READ]</b>.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "[Admin] Content"
        ],
        "summary": "Get user's generated contents",
        "operationId": "SingleAdminGetContent",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "default": 1000,
            "description": "number of content per page",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "default": 0,
            "description": "the offset number to retrieve",
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.PaginatedContentDownloadResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    },
    "/ugc/v1/admin/namespaces/{namespace}/contents/search": {
      "get": {
        "description": "Required permission <b>ADMIN:NAMESPACE:{namespace}:USER:*:CONTENT [CREATE]</b>",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "[Admin] Content"
        ],
        "summary": "Search contents",
        "operationId": "AdminSearchContent",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "sorting criteria: name,download,like,date. default=date",
            "name": "sortby",
            "in": "query"
          },
          {
            "type": "string",
            "description": "sorting order: asc, desc. default=desc",
            "name": "orderby",
            "in": "query"
          },
          {
            "type": "string",
            "description": "content name",
            "name": "name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "creator name",
            "name": "creator",
            "in": "query"
          },
          {
            "type": "string",
            "description": "content type",
            "name": "type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "content subtype",
            "name": "subtype",
            "in": "query"
          },
          {
            "type": "string",
            "description": "content tag",
            "name": "tags",
            "in": "query"
          },
          {
            "type": "string",
            "description": "filter only official contents  (boolean)",
            "name": "isofficial",
            "in": "query"
          },
          {
            "type": "string",
            "default": 1000,
            "description": "number of content per page",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "default": 0,
            "description": "the offset number to retrieve",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "string",
            "description": "user ID",
            "name": "userId",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.PaginatedContentDownloadResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    },
    "/ugc/v1/admin/namespaces/{namespace}/contents/{contentId}": {
      "get": {
        "description": "Required permission <b>ADMIN:NAMESPACE:{namespace}:USER:*:CONTENT [READ]</b>.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "[Admin] Content"
        ],
        "summary": "Get user specific content",
        "operationId": "AdminGetSpecificContent",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "content ID",
            "name": "contentId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.ContentDownloadResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    },
    "/ugc/v1/admin/namespaces/{namespace}/contents/{contentId}/preview": {
      "get": {
        "description": "Required permission <b>ADMIN:NAMESPACE:{namespace}:USER:*:CONTENT [READ]</b>",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "[Admin] Content"
        ],
        "summary": "Get content preview",
        "operationId": "AdminDownloadContentPreview",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "content ID",
            "name": "contentId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.GetContentPreviewResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    },
    "/ugc/v1/admin/namespaces/{namespace}/contents/{contentId}/screenshots": {
      "put": {
        "description": "Required permission <b>ADMIN:NAMESPACE:{namespace}:USER:{userId}:CONTENT [UPDATE]</b>.\\n \n\t\t\t\t\tMaximum description length: 1024.\n\t\t\t\t\t",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "[Admin] Content"
        ],
        "summary": "Update screenshot of content",
        "operationId": "AdminUpdateScreenshots",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "content ID",
            "name": "contentId",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.UpdateScreenshotRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.UpdateScreenshotResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      },
      "post": {
        "description": "Required permission <b>ADMIN:NAMESPACE:{namespace}:USER:{userId}:CONTENT [CREATE]</b>.\\n \n\t\t\t\tAll request body are required except for contentType field. \n\t\t\t\tcontentType values is used to enforce the Content-Type header needed by the client to upload the content using the presigned URL.\n\t\t\t\tIf not specified, it will use fileExtension value.\n\t\t\t\tSupported file extensions: pjp, jpg, jpeg, jfif, bmp, png. \\n\n\t\t\t\tMaximum description length: 1024.\n\t\t\t\t",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "[Admin] Content"
        ],
        "summary": "Upload screenshots for content",
        "operationId": "AdminUploadContentScreenshot",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "content ID",
            "name": "contentId",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.CreateScreenshotRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/models.CreateScreenshotResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    },
    "/ugc/v1/admin/namespaces/{namespace}/contents/{contentId}/screenshots/{screenshotId}": {
      "delete": {
        "description": "Required permission <b>ADMIN:NAMESPACE:{namespace}:USER:{userId}:CONTENT [DELETE]</b>.\n\t\t\t\t",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "[Admin] Content"
        ],
        "summary": "Delete screenshots content",
        "operationId": "AdminDeleteContentScreenshot",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "content ID",
            "name": "contentId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "screenshot ID",
            "name": "screenshotId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    },
    "/ugc/v1/admin/namespaces/{namespace}/groups": {
      "get": {
        "description": "Required permission <b>ADMIN:NAMESPACE:{namespace}:USER:{userId}:CONTENTGROUP [READ]</b>.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "[Admin] Group"
        ],
        "summary": "Get all user groups",
        "operationId": "SingleAdminGetAllGroups",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "default": 1000,
            "description": "number of content per page",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "default": 0,
            "description": "the offset number to retrieve",
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.PaginatedGroupResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      },
      "post": {
        "description": "Required permission ADMIN:NAMESPACE:{namespace}:USER:{userId}:CONTENTGROUP [CREATE]",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "[Admin] Group"
        ],
        "summary": "Create groups",
        "operationId": "AdminCreateGroup",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.CreateGroupRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/models.CreateGroupResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    },
    "/ugc/v1/admin/namespaces/{namespace}/groups/{groupId}": {
      "get": {
        "description": "Required permission <b>ADMIN:NAMESPACE:{namespace}:USER:{userId}:CONTENTGROUP [READ]</b>.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "[Admin] Group"
        ],
        "summary": "Get specific user group",
        "operationId": "SingleAdminGetGroup",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "group ID",
            "name": "groupId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.CreateGroupResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      },
      "put": {
        "description": "Required permission ADMIN:NAMESPACE:{namespace}:USER:{userId}:CONTENTGROUP [UPDATE]\n\t\t\t\t\treplace group name and contents with new ones.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "[Admin] Group"
        ],
        "summary": "Update group",
        "operationId": "SingleAdminUpdateGroup",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "group ID",
            "name": "groupId",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.CreateGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.CreateGroupResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      },
      "delete": {
        "description": "Required permission ADMIN:NAMESPACE:{namespace}:USER:{userId}:CONTENTGROUP [DELETE]",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "[Admin] Group"
        ],
        "summary": "Delete group",
        "operationId": "SingleAdminDeleteGroup",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "group ID",
            "name": "groupId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    },
    "/ugc/v1/admin/namespaces/{namespace}/groups/{groupId}/contents": {
      "get": {
        "description": "Required permission <b>ADMIN:NAMESPACE:{namespace}:USER:{userId}:CONTENT [READ]</b>.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "[Admin] Group"
        ],
        "summary": "Get contents belong to a group",
        "operationId": "SingleAdminGetGroupContents",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "group ID",
            "name": "groupId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "default": 1000,
            "description": "number of content per page",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "default": 0,
            "description": "the offset number to retrieve",
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.PaginatedContentDownloadResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    },
    "/ugc/v1/admin/namespaces/{namespace}/tags": {
      "get": {
        "description": "Required permission ADMIN:NAMESPACE:{namespace}:UGCCONFIG [READ]",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "[Admin] Tag"
        ],
        "summary": "Get tags",
        "operationId": "AdminGetTag",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "default": 1000,
            "description": "number of content per page",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "default": 0,
            "description": "the offset number to retrieve",
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.PaginatedGetTagResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      },
      "post": {
        "description": "Required permission ADMIN:NAMESPACE:{namespace}:UGCCONFIG [CREATE]\n\t\t\t\tcreates a new tag",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "[Admin] Tag"
        ],
        "summary": "Create tags",
        "operationId": "AdminCreateTag",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.CreateTagRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/models.CreateTagResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    },
    "/ugc/v1/admin/namespaces/{namespace}/tags/{tagId}": {
      "put": {
        "description": "Required permission ADMIN:NAMESPACE:{namespace}:UGCCONFIG [UPDATE]\n\t\t\t\tupdates a tag",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "[Admin] Tag"
        ],
        "summary": "Update tag",
        "operationId": "AdminUpdateTag",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "tag ID",
            "name": "tagId",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.CreateTagRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.CreateTagResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      },
      "delete": {
        "description": "Required permission ADMIN:NAMESPACE:{namespace}:UGCCONFIG [DELETE]",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "[Admin] Tag"
        ],
        "summary": "Delete tags",
        "operationId": "AdminDeleteTag",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "tag ID",
            "name": "tagId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    },
    "/ugc/v1/admin/namespaces/{namespace}/types": {
      "get": {
        "description": "Required permission ADMIN:NAMESPACE:{namespace}:UGCCONFIG [READ]",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "[Admin] Type"
        ],
        "summary": "Get types",
        "operationId": "AdminGetType",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "default": 1000,
            "description": "number of content per page",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "default": 0,
            "description": "the offset number to retrieve",
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.PaginatedGetTypeResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      },
      "post": {
        "description": "Required permission ADMIN:NAMESPACE:{namespace}:UGCCONFIG [CREATE]\n\t\t\tcreates a new type and subtype",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "[Admin] Type"
        ],
        "summary": "Create types",
        "operationId": "AdminCreateType",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.CreateTypeRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/models.CreateTypeResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    },
    "/ugc/v1/admin/namespaces/{namespace}/types/{typeId}": {
      "put": {
        "description": "Required permission ADMIN:NAMESPACE:{namespace}:UGCCONFIG [UPDATE]\n\t\t\tupdates a type and subtype",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "[Admin] Type"
        ],
        "summary": "Update types",
        "operationId": "AdminUpdateType",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "type ID",
            "name": "typeId",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.CreateTypeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.CreateTypeResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      },
      "delete": {
        "description": "Required permission ADMIN:NAMESPACE:{namespace}:UGCCONFIG [DELETE]",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "[Admin] Type"
        ],
        "summary": "Delete types",
        "operationId": "AdminDeleteType",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "type ID",
            "name": "typeId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    },
    "/ugc/v1/admin/namespaces/{namespace}/users/{userId}/channels": {
      "get": {
        "description": "Required permission <b>ADMIN:NAMESPACE:{namespace}:USER:{userId}:CHANNEL [READ]</b>",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "[Admin] Channel"
        ],
        "summary": "Get Channels",
        "operationId": "AdminGetChannel",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "user ID",
            "name": "userId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "default": 1000,
            "description": "number of content per page",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "default": 0,
            "description": "the offset number to retrieve",
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.PaginatedGetChannelResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      },
      "delete": {
        "description": "Required permission <b>ADMIN:NAMESPACE:{namespace}:USER:{userId}:CHANNEL [DELETE]</b>",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Anonymization"
        ],
        "summary": "Delete all user channel",
        "operationId": "AdminDeleteAllUserChannels",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "userID",
            "name": "userId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    },
    "/ugc/v1/admin/namespaces/{namespace}/users/{userId}/channels/{channelId}": {
      "put": {
        "description": "Required permission <b>ADMIN:NAMESPACE:{namespace}:USER:{userId}:CHANNEL [UPDATE]</b>",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "[Admin] Channel"
        ],
        "summary": "Update Channel",
        "operationId": "AdminUpdateChannel",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "user ID",
            "name": "userId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "channelID",
            "name": "channelId",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.ChannelRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.ChannelResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      },
      "delete": {
        "description": "Required permission <b>ADMIN:NAMESPACE:{namespace}:USER:{userId}:CHANNEL [DELETE]</b>",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "[Admin] Channel"
        ],
        "summary": "Delete Channel",
        "operationId": "AdminDeleteChannel",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "user ID",
            "name": "userId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "channelID",
            "name": "channelId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    },
    "/ugc/v1/admin/namespaces/{namespace}/users/{userId}/channels/{channelId}/contents/s3/{contentId}": {
      "put": {
        "description": "Required permission <b>ADMIN:NAMESPACE:{namespace}:USER:{userId}:CONTENT [UPDATE]</b>.\\n \n\t\t\t\tAll request body are required except payload, preview, tags, and contentType.\n\t\t\t\tcontentType values is used to enforce the Content-Type header needed by the client to upload the content using the S3 presigned URL.\n\t\t\t\tIf not specified, it will use fileExtension value.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "[Admin] Content"
        ],
        "summary": "Update content to S3 bucket",
        "operationId": "AdminUpdateContentS3",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "user ID",
            "name": "userId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "channel ID",
            "name": "channelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "content ID",
            "name": "contentId",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.CreateContentRequestS3"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.CreateContentResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    },
    "/ugc/v1/admin/namespaces/{namespace}/users/{userId}/channels/{channelId}/contents/{contentId}": {
      "put": {
        "description": "Required permission <b>ADMIN:NAMESPACE:{namespace}:USER:{userId}:CONTENT [UPDATE]</b>.\\n \n\t\t\t\t\tAll request body are required except preview and tags.\n\t\t\t\t\t",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "[Admin] Content"
        ],
        "summary": "Update content to a channel",
        "operationId": "AdminUpdateContentDirect",
        "deprecated": true,
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "user ID",
            "name": "userId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "channel ID",
            "name": "channelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "content ID",
            "name": "contentId",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.CreateContentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.CreateContentResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      },
      "delete": {
        "description": "Required permission <b>ADMIN:NAMESPACE:{namespace}:USER:{userId}:CONTENT [DELETE]</b>.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "[Admin] Content"
        ],
        "summary": "Delete content",
        "operationId": "AdminDeleteContent",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "user ID",
            "name": "userId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "channel ID",
            "name": "channelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "content ID",
            "name": "contentId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    },
    "/ugc/v1/admin/namespaces/{namespace}/users/{userId}/contents": {
      "get": {
        "description": "Required permission <b>ADMIN:NAMESPACE:{namespace}:USER:{userId}:CONTENT [READ]</b>.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "[Admin] Content"
        ],
        "summary": "Get user's generated contents",
        "operationId": "AdminGetContent",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "user ID",
            "name": "userId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "default": 1000,
            "description": "number of content per page",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "default": 0,
            "description": "the offset number to retrieve",
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.PaginatedContentDownloadResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      },
      "delete": {
        "description": "Required permission <b>ADMIN:NAMESPACE:{namespace}:USER:{userId}:CONTENT [DELETE]</b>.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Anonymization"
        ],
        "summary": "Delete all user content",
        "operationId": "AdminDeleteAllUserContents",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "user ID",
            "name": "userId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    },
    "/ugc/v1/admin/namespaces/{namespace}/users/{userId}/contents/{contentId}/hide": {
      "put": {
        "description": "Required permission <b>ADMIN:NAMESPACE:{namespace}:USER:{userId}:CONTENT [UPDATE]</b>.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "[Admin] Content"
        ],
        "summary": "Hide/Unhide user's generated contents",
        "operationId": "AdminHideUserContent",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "user ID",
            "name": "userId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "content ID",
            "name": "contentId",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.HideContentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.CreateContentResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    },
    "/ugc/v1/admin/namespaces/{namespace}/users/{userId}/groups": {
      "get": {
        "description": "Required permission <b>ADMIN:NAMESPACE:{namespace}:USER:{userId}:CONTENTGROUP [READ]</b>.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "[Admin] Group"
        ],
        "summary": "Get all user groups",
        "operationId": "AdminGetAllGroups",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "user ID",
            "name": "userId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "default": 1000,
            "description": "number of content per page",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "default": 0,
            "description": "the offset number to retrieve",
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.PaginatedGroupResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      },
      "delete": {
        "description": "Required permission ADMIN:NAMESPACE:{namespace}:USER:{userId}:CONTENTGROUP [DELETE]",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Anonymization"
        ],
        "summary": "Delete all user group",
        "operationId": "AdminDeleteAllUserGroup",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "user ID",
            "name": "userId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    },
    "/ugc/v1/admin/namespaces/{namespace}/users/{userId}/groups/{groupId}": {
      "get": {
        "description": "Required permission <b>ADMIN:NAMESPACE:{namespace}:USER:{userId}:CONTENTGROUP [READ]</b>.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "[Admin] Group"
        ],
        "summary": "Get specific user group",
        "operationId": "AdminGetGroup",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "user ID",
            "name": "userId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "group ID",
            "name": "groupId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.CreateGroupResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      },
      "put": {
        "description": "Required permission ADMIN:NAMESPACE:{namespace}:USER:{userId}:CONTENTGROUP [UPDATE]\n\t\t\t\t\treplace group name and contents with new ones.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "[Admin] Group"
        ],
        "summary": "Update group",
        "operationId": "AdminUpdateGroup",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "user ID",
            "name": "userId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "group ID",
            "name": "groupId",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.CreateGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.CreateGroupResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      },
      "delete": {
        "description": "Required permission ADMIN:NAMESPACE:{namespace}:USER:{userId}:CONTENTGROUP [DELETE]",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "[Admin] Group"
        ],
        "summary": "Delete group",
        "operationId": "AdminDeleteGroup",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "user ID",
            "name": "userId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "group ID",
            "name": "groupId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    },
    "/ugc/v1/admin/namespaces/{namespace}/users/{userId}/groups/{groupId}/contents": {
      "get": {
        "description": "Required permission <b>ADMIN:NAMESPACE:{namespace}:USER:{userId}:CONTENT [READ]</b>.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "[Admin] Group"
        ],
        "summary": "Get contents belong to a group",
        "operationId": "AdminGetGroupContents",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "user ID",
            "name": "userId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "group ID",
            "name": "groupId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "default": 1000,
            "description": "number of content per page",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "default": 0,
            "description": "the offset number to retrieve",
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.PaginatedContentDownloadResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    },
    "/ugc/v1/admin/namespaces/{namespace}/users/{userId}/states": {
      "delete": {
        "description": "Required permission ADMIN:NAMESPACE:{namespace}:USER:{userId} [DELETE]",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Anonymization"
        ],
        "summary": "Remove all user related state: likes, downloads, followers, following",
        "operationId": "AdminDeleteAllUserStates",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "user ID",
            "name": "userId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    },
    "/ugc/v1/public/namespaces/{namespace}/channels/{channelId}/contents": {
      "get": {
        "description": "Requires valid user token",
        "consumes": [
          "application/json",
          "application/octet-stream"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "[Public] Content"
        ],
        "summary": "Search contents specific to a channel",
        "operationId": "SearchChannelSpecificContent",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "sorting criteria: name,download,like,date. default=date",
            "name": "sortby",
            "in": "query"
          },
          {
            "type": "string",
            "description": "sorting order: asc, desc. default=desc",
            "name": "orderby",
            "in": "query"
          },
          {
            "type": "string",
            "description": "channel ID",
            "name": "channelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "content name",
            "name": "name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "creator name",
            "name": "creator",
            "in": "query"
          },
          {
            "type": "string",
            "description": "content type",
            "name": "type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "content subtype",
            "name": "subtype",
            "in": "query"
          },
          {
            "type": "string",
            "description": "content tag",
            "name": "tags",
            "in": "query"
          },
          {
            "type": "string",
            "description": "filter only official contents (boolean)",
            "name": "isofficial",
            "in": "query"
          },
          {
            "type": "string",
            "default": 1000,
            "description": "number of content per page",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "default": 0,
            "description": "the offset number to retrieve",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "string",
            "description": "user ID",
            "name": "userId",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.PaginatedContentDownloadResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    },
    "/ugc/v1/public/namespaces/{namespace}/contents": {
      "get": {
        "description": "Requires valid user token",
        "consumes": [
          "application/json",
          "application/octet-stream"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "[Public] Content"
        ],
        "summary": "Search contents",
        "operationId": "PublicSearchContent",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "sorting criteria: name,download,like,date. default=date",
            "name": "sortby",
            "in": "query"
          },
          {
            "type": "string",
            "description": "sorting order: asc, desc. default=desc",
            "name": "orderby",
            "in": "query"
          },
          {
            "type": "string",
            "description": "content name",
            "name": "name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "creator name",
            "name": "creator",
            "in": "query"
          },
          {
            "type": "string",
            "description": "content type",
            "name": "type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "content subtype",
            "name": "subtype",
            "in": "query"
          },
          {
            "type": "string",
            "description": "content tag",
            "name": "tags",
            "in": "query"
          },
          {
            "type": "string",
            "description": "filter only official contents (boolean)",
            "name": "isofficial",
            "in": "query"
          },
          {
            "type": "string",
            "default": 1000,
            "description": "number of content per page",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "default": 0,
            "description": "the offset number to retrieve",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "string",
            "description": "user ID",
            "name": "userId",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.PaginatedContentDownloadResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    },
    "/ugc/v1/public/namespaces/{namespace}/contents/followed": {
      "get": {
        "description": "Requires valid user token",
        "consumes": [
          "application/json",
          "application/octet-stream"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "[Public] Follow"
        ],
        "summary": "Get contents from followed creators",
        "operationId": "GetFollowedContent",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "default": 1000,
            "description": "number of content per page",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "default": 0,
            "description": "the offset number to retrieve",
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.PaginatedContentDownloadResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    },
    "/ugc/v1/public/namespaces/{namespace}/contents/liked": {
      "get": {
        "description": "Requires valid user token",
        "consumes": [
          "application/json",
          "application/octet-stream"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "[Public] Like"
        ],
        "summary": "Get liked contents",
        "operationId": "GetLikedContent",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "default": 1000,
            "description": "number of content per page",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "default": 0,
            "description": "the offset number to retrieve",
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.PaginatedContentDownloadResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    },
    "/ugc/v1/public/namespaces/{namespace}/contents/sharecodes/{shareCode}": {
      "get": {
        "description": "Requires valid user token",
        "consumes": [
          "application/json",
          "application/octet-stream"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "[Public] Content"
        ],
        "summary": "Get content by sharecode",
        "operationId": "DownloadContentByShareCode",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "content sharecode",
            "name": "shareCode",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.ContentDownloadResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    },
    "/ugc/v1/public/namespaces/{namespace}/contents/{contentId}": {
      "get": {
        "description": "Requires valid user token",
        "consumes": [
          "application/json",
          "application/octet-stream"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "[Public] Content"
        ],
        "summary": "Get user specific content",
        "operationId": "PublicDownloadContentByContentID",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "content ID",
            "name": "contentId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.ContentDownloadResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    },
    "/ugc/v1/public/namespaces/{namespace}/contents/{contentId}/downloadcount": {
      "post": {
        "description": "Requires valid user token",
        "consumes": [
          "application/json",
          "application/octet-stream"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "[Public] Download Count"
        ],
        "summary": "Add unique download count to a content",
        "operationId": "AddDownloadCount",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "content ID",
            "name": "contentId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.AddDownloadCountResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    },
    "/ugc/v1/public/namespaces/{namespace}/contents/{contentId}/like": {
      "put": {
        "description": "Requires valid user token",
        "consumes": [
          "application/json",
          "application/octet-stream"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "[Public] Like"
        ],
        "summary": "Update like/unlike status to a content",
        "operationId": "UpdateContentLikeStatus",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "content ID",
            "name": "contentId",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.ContentLikeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.ContentLikeResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    },
    "/ugc/v1/public/namespaces/{namespace}/contents/{contentId}/preview": {
      "get": {
        "description": "Requires valid user token",
        "consumes": [
          "application/json",
          "application/octet-stream"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "[Public] Content"
        ],
        "summary": "Get content preview",
        "operationId": "PublicDownloadContentPreview",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "content ID",
            "name": "contentId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.GetContentPreviewResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    },
    "/ugc/v1/public/namespaces/{namespace}/tags": {
      "get": {
        "description": "Requires valid user token",
        "consumes": [
          "application/json",
          "application/octet-stream"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "[Public] Tag"
        ],
        "summary": "Get tags",
        "operationId": "GetTag",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "default": 1000,
            "description": "number of content per page",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "default": 0,
            "description": "the offset number to retrieve",
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.PaginatedGetTagResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    },
    "/ugc/v1/public/namespaces/{namespace}/types": {
      "get": {
        "description": "Requires valid user token",
        "consumes": [
          "application/json",
          "application/octet-stream"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "[Public] Type"
        ],
        "summary": "Get types",
        "operationId": "GetType",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "default": 1000,
            "description": "number of content per page",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "default": 0,
            "description": "the offset number to retrieve",
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.PaginatedGetTypeResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    },
    "/ugc/v1/public/namespaces/{namespace}/users/followed": {
      "get": {
        "description": "Requires valid user token",
        "consumes": [
          "application/json",
          "application/octet-stream"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "[Public] Follow"
        ],
        "summary": "Get followed creators",
        "operationId": "GetFollowedUsers",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "default": 1000,
            "description": "number of content per page",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "default": 0,
            "description": "the offset number to retrieve",
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.PaginatedCreatorOverviewResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    },
    "/ugc/v1/public/namespaces/{namespace}/users/{userId}/channels": {
      "get": {
        "description": "Required permission <b>NAMESPACE:{namespace}:USER:{userId}:CHANNEL [READ]</b>",
        "consumes": [
          "application/json",
          "application/octet-stream"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "[Public] Channel"
        ],
        "summary": "Get Channels",
        "operationId": "GetChannels",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "userID",
            "name": "userId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "default": 1000,
            "description": "number of content per page",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "default": 0,
            "description": "the offset number to retrieve",
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.PaginatedGetChannelResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      },
      "post": {
        "description": "Required permission <b>NAMESPACE:{namespace}:USER:{userId}:CHANNEL [CREATE]</b>",
        "consumes": [
          "application/json",
          "application/octet-stream"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "[Public] Channel"
        ],
        "summary": "Create Channel",
        "operationId": "CreateChannel",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "userID",
            "name": "userId",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.ChannelRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/models.ChannelResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      },
      "delete": {
        "description": "Required permission <b>NAMESPACE:{namespace}:USER:{userId}:CHANNEL [DELETE]</b>",
        "consumes": [
          "application/json",
          "application/octet-stream"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Anonymization"
        ],
        "summary": "Delete all user channel",
        "operationId": "DeleteAllUserChannel",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "userID",
            "name": "userId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    },
    "/ugc/v1/public/namespaces/{namespace}/users/{userId}/channels/{channelId}": {
      "put": {
        "description": "Required permission <b>NAMESPACE:{namespace}:USER:{userId}:CHANNEL [UPDATE]</b>",
        "consumes": [
          "application/json",
          "application/octet-stream"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "[Public] Channel"
        ],
        "summary": "Update Channel",
        "operationId": "UpdateChannel",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "userID",
            "name": "userId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "channelID",
            "name": "channelId",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.ChannelRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.ChannelResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      },
      "delete": {
        "description": "Required permission <b>NAMESPACE:{namespace}:USER:{userId}:CHANNEL [DELETE]</b>",
        "consumes": [
          "application/json",
          "application/octet-stream"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "[Public] Channel"
        ],
        "summary": "Delete Channel",
        "operationId": "DeleteChannel",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "userID",
            "name": "userId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "channelID",
            "name": "channelId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    },
    "/ugc/v1/public/namespaces/{namespace}/users/{userId}/channels/{channelId}/contents": {
      "post": {
        "description": "Required permission <b>NAMESPACE:{namespace}:USER:{userId}:CONTENT [CREATE]</b>.\\n \n\t\t\tAll request body are required except preview and tags.\n\t\t\t",
        "consumes": [
          "application/json",
          "application/octet-stream"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "[Public] Content"
        ],
        "summary": "Upload content to a channel",
        "operationId": "CreateContentDirect",
        "deprecated": true,
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "user ID",
            "name": "userId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "channel ID",
            "name": "channelId",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.CreateContentRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/models.CreateContentResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    },
    "/ugc/v1/public/namespaces/{namespace}/users/{userId}/channels/{channelId}/contents/s3": {
      "post": {
        "description": "Required permission <b>NAMESPACE:{namespace}:USER:{userId}:CONTENT [CREATE]</b>.\\n \n\t\t\t\tAll request body are required except payload, preview, tags, and contentType.\n\t\t\t\tcontentType values is used to enforce the Content-Type header needed by the client to upload the content using the S3 presigned URL.\n\t\t\t\tIf not specified, it will use fileExtension value.",
        "consumes": [
          "application/json",
          "application/octet-stream"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "[Public] Content"
        ],
        "summary": "Upload content to S3 bucket",
        "operationId": "CreateContentS3",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "user ID",
            "name": "userId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "channel ID",
            "name": "channelId",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.CreateContentRequestS3"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/models.CreateContentResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    },
    "/ugc/v1/public/namespaces/{namespace}/users/{userId}/channels/{channelId}/contents/s3/{contentId}": {
      "put": {
        "description": "Required permission <b>NAMESPACE:{namespace}:USER:{userId}:CONTENT [UPDATE]</b>.\\n \n\t\t\t\tAll request body are required except payload, preview, tags, and contentType.\n\t\t\t\tcontentType values is used to enforce the Content-Type header needed by the client to upload the content using the S3 presigned URL.\n\t\t\t\tIf not specified, it will use fileExtension value.",
        "consumes": [
          "application/json",
          "application/octet-stream"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "[Public] Content"
        ],
        "summary": "Update content to S3 bucket",
        "operationId": "UpdateContentS3",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "user ID",
            "name": "userId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "channel ID",
            "name": "channelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "content ID",
            "name": "contentId",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.CreateContentRequestS3"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.CreateContentResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    },
    "/ugc/v1/public/namespaces/{namespace}/users/{userId}/channels/{channelId}/contents/{contentId}": {
      "put": {
        "description": "Required permission <b>NAMESPACE:{namespace}:USER:{userId}:CONTENT [UPDATE]</b>.\\n \n\t\t\t\tAll request body are required except preview and tags.\n\t\t\t\t",
        "consumes": [
          "application/json",
          "application/octet-stream"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "[Public] Content"
        ],
        "summary": "Update content to a channel",
        "operationId": "UpdateContentDirect",
        "deprecated": true,
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "user ID",
            "name": "userId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "channel ID",
            "name": "channelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "content ID",
            "name": "contentId",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.CreateContentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.CreateContentResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      },
      "delete": {
        "description": "Required permission <b>NAMESPACE:{namespace}:USER:{userId}:CONTENT [DELETE]</b>.",
        "consumes": [
          "application/json",
          "application/octet-stream"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "[Public] Content"
        ],
        "summary": "Delete content",
        "operationId": "DeleteContent",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "user ID",
            "name": "userId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "channel ID",
            "name": "channelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "content ID",
            "name": "contentId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    },
    "/ugc/v1/public/namespaces/{namespace}/users/{userId}/contents": {
      "get": {
        "description": "Required permission <b>NAMESPACE:{namespace}:USER:{userId}:CONTENT [READ]</b>.",
        "consumes": [
          "application/json",
          "application/octet-stream"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "[Public] Content"
        ],
        "summary": "Get user's generated contents",
        "operationId": "PublicGetUserContent",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "user ID",
            "name": "userId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "default": 1000,
            "description": "number of content per page",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "default": 0,
            "description": "the offset number to retrieve",
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.PaginatedContentDownloadResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      },
      "delete": {
        "description": "Required permission <b>NAMESPACE:{namespace}:USER:{userId}:CONTENT [DELETE]</b>.",
        "consumes": [
          "application/json",
          "application/octet-stream"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Anonymization"
        ],
        "summary": "Delete all user content",
        "operationId": "DeleteAllUserContents",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "user ID",
            "name": "userId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    },
    "/ugc/v1/public/namespaces/{namespace}/users/{userId}/contents/{contentId}/screenshots": {
      "put": {
        "description": "Required permission <b>NAMESPACE:{namespace}:USER:{userId}:CONTENT [UPDATE]</b>.\\n \n\t\t\t\t\tMaximum description length: 1024.\n\t\t\t\t\t",
        "consumes": [
          "application/json",
          "application/octet-stream"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "[Public] Content"
        ],
        "summary": "Update screenshot of content",
        "operationId": "UpdateScreenshots",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "content ID",
            "name": "contentId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "user ID",
            "name": "userId",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.UpdateScreenshotRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.UpdateScreenshotResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      },
      "post": {
        "description": "Required permission <b>NAMESPACE:{namespace}:USER:{userId}:CONTENT [CREATE]</b>.\\n \n\t\t\t\tAll request body are required except for contentType field. \n\t\t\t\tcontentType values is used to enforce the Content-Type header needed by the client to upload the content using the presigned URL.\n\t\t\t\tIf not specified, it will use fileExtension value.\n\t\t\t\tSupported file extensions: pjp, jpg, jpeg, jfif, bmp, png. \\n\n\t\t\t\tMaximum description length: 1024.\n\t\t\t\t",
        "consumes": [
          "application/json",
          "application/octet-stream"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "[Public] Content"
        ],
        "summary": "Upload screenshots for content",
        "operationId": "UploadContentScreenshot",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "content ID",
            "name": "contentId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "user ID",
            "name": "userId",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.CreateScreenshotRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/models.CreateScreenshotResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    },
    "/ugc/v1/public/namespaces/{namespace}/users/{userId}/contents/{contentId}/screenshots/{screenshotId}": {
      "delete": {
        "description": "Required permission <b>NAMESPACE:{namespace}:USER:{userId}:CONTENT [DELETE]</b>.\n\t\t\t\t",
        "consumes": [
          "application/json",
          "application/octet-stream"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "[Public] Content"
        ],
        "summary": "Delete screenshots content",
        "operationId": "DeleteContentScreenshot",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "content ID",
            "name": "contentId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "screenshot ID",
            "name": "screenshotId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "user ID",
            "name": "userId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    },
    "/ugc/v1/public/namespaces/{namespace}/users/{userId}/follow": {
      "put": {
        "description": "Requires valid user token",
        "consumes": [
          "application/json",
          "application/octet-stream"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "[Public] Follow"
        ],
        "summary": "Update follow/unfollow status to a user",
        "operationId": "UpdateUserFollowStatus",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "user ID to be followed",
            "name": "userId",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.UserFollowRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.UserFollowResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    },
    "/ugc/v1/public/namespaces/{namespace}/users/{userId}/groups": {
      "get": {
        "description": "Required permission <b>NAMESPACE:{namespace}:USER:{userId}:CONTENTGROUP [READ]</b>.",
        "consumes": [
          "application/json",
          "application/octet-stream"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "[Public] Group"
        ],
        "summary": "Get all user groups",
        "operationId": "GetGroups",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "default": 1000,
            "description": "number of content per page",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "default": 0,
            "description": "the offset number to retrieve",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "string",
            "description": "user ID",
            "name": "userId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.PaginatedGroupResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      },
      "post": {
        "description": "Required permission NAMESPACE:{namespace}:USER:{userId}:CONTENTGROUP [CREATE]",
        "consumes": [
          "application/json",
          "application/octet-stream"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "[Public] Group"
        ],
        "summary": "Create groups",
        "operationId": "CreateGroup",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "user ID",
            "name": "userId",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.CreateGroupRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/models.CreateGroupResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      },
      "delete": {
        "description": "Required permission NAMESPACE:{namespace}:USER:{userId}:CONTENTGROUP [DELETE]",
        "consumes": [
          "application/json",
          "application/octet-stream"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Anonymization"
        ],
        "summary": "Delete all user group",
        "operationId": "DeleteAllUserGroup",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "user ID",
            "name": "userId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    },
    "/ugc/v1/public/namespaces/{namespace}/users/{userId}/groups/{groupId}": {
      "get": {
        "description": "Required permission <b>NAMESPACE:{namespace}:USER:{userId}:CONTENTGROUP [READ]</b>.",
        "consumes": [
          "application/json",
          "application/octet-stream"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "[Public] Group"
        ],
        "summary": "Get user's groups",
        "operationId": "GetGroup",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "user ID",
            "name": "userId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "group ID",
            "name": "groupId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.CreateGroupResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      },
      "put": {
        "description": "Required permission NAMESPACE:{namespace}:USER:{userId}:CONTENTGROUP [UPDATE]\n\t\t\t\treplace group name and contents with new ones",
        "consumes": [
          "application/json",
          "application/octet-stream"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "[Public] Group"
        ],
        "summary": "Update group",
        "operationId": "UpdateGroup",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "user ID",
            "name": "userId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "group ID",
            "name": "groupId",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.CreateGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.CreateGroupResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      },
      "delete": {
        "description": "Required permission NAMESPACE:{namespace}:USER:{userId}:CONTENTGROUP [DELETE]",
        "consumes": [
          "application/json",
          "application/octet-stream"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "[Public] Group"
        ],
        "summary": "Delete group",
        "operationId": "DeleteGroup",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "user ID",
            "name": "userId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "group ID",
            "name": "groupId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    },
    "/ugc/v1/public/namespaces/{namespace}/users/{userId}/groups/{groupId}/contents": {
      "get": {
        "description": "Required permission <b>NAMESPACE:{namespace}:USER:{userId}:CONTENT [READ]</b>.",
        "consumes": [
          "application/json",
          "application/octet-stream"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "[Public] Group"
        ],
        "summary": "Get contents belong to a group",
        "operationId": "GetGroupContent",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "user ID",
            "name": "userId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "group ID",
            "name": "groupId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "default": 1000,
            "description": "number of content per page",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "default": 0,
            "description": "the offset number to retrieve",
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.PaginatedContentDownloadResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    },
    "/ugc/v1/public/namespaces/{namespace}/users/{userId}/states": {
      "delete": {
        "description": "Required permission NAMESPACE:{namespace}:USER:{userId}\" [DELETE]",
        "consumes": [
          "application/json",
          "application/octet-stream"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Anonymization"
        ],
        "summary": "Remove all user related state: likes, downloads, followers, following",
        "operationId": "DeleteAllUserStates",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "user ID",
            "name": "userId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "models.AddDownloadCountResponse": {
      "required": [
        "contentId"
      ],
      "properties": {
        "contentId": {
          "type": "string"
        }
      }
    },
    "models.ChannelRequest": {
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "models.ChannelResponse": {
      "required": [
        "id",
        "name",
        "namespace",
        "userId"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        }
      }
    },
    "models.ContentDownloadResponse": {
      "required": [
        "channelId",
        "createdTime",
        "creatorFollowState",
        "creatorName",
        "downloadCount",
        "fileExtension",
        "id",
        "isHidden",
        "isOfficial",
        "likeCount",
        "name",
        "namespace",
        "shareCode",
        "subType",
        "tags",
        "type",
        "userId"
      ],
      "properties": {
        "channelId": {
          "type": "string"
        },
        "createdTime": {
          "type": "string"
        },
        "creatorFollowState": {
          "$ref": "#/definitions/models.CreatorFollowState"
        },
        "creatorName": {
          "type": "string"
        },
        "downloadCount": {
          "type": "integer",
          "format": "int32"
        },
        "fileExtension": {
          "type": "string"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "string"
        },
        "isHidden": {
          "type": "boolean"
        },
        "isOfficial": {
          "type": "boolean"
        },
        "likeCount": {
          "type": "integer",
          "format": "int32"
        },
        "likeState": {
          "$ref": "#/definitions/models.LikeState"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "payload": {
          "type": "string"
        },
        "payloadURL": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/models.PayloadURL"
          }
        },
        "screenshots": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/models.ScreenshotResponse"
          }
        },
        "shareCode": {
          "type": "string"
        },
        "subType": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "type": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        }
      }
    },
    "models.ContentLikeRequest": {
      "required": [
        "likeStatus"
      ],
      "properties": {
        "likeStatus": {
          "type": "boolean"
        }
      }
    },
    "models.ContentLikeResponse": {
      "required": [
        "contentId",
        "likeStatus"
      ],
      "properties": {
        "contentId": {
          "type": "string"
        },
        "likeStatus": {
          "type": "boolean"
        }
      }
    },
    "models.CreateContentRequest": {
      "required": [
        "name",
        "payload",
        "preview",
        "subType",
        "tags",
        "type"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "payload": {
          "type": "string"
        },
        "preview": {
          "type": "string"
        },
        "subType": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "type": {
          "type": "string"
        }
      }
    },
    "models.CreateContentRequestS3": {
      "required": [
        "contentType",
        "fileExtension",
        "name",
        "preview",
        "subType",
        "tags",
        "type"
      ],
      "properties": {
        "contentType": {
          "type": "string"
        },
        "fileExtension": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "preview": {
          "type": "string"
        },
        "subType": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "type": {
          "type": "string"
        }
      }
    },
    "models.CreateContentResponse": {
      "required": [
        "channelId",
        "createdTime",
        "creatorName",
        "fileExtension",
        "id",
        "isHidden",
        "isOfficial",
        "name",
        "namespace",
        "preview",
        "shareCode",
        "subType",
        "tags",
        "type",
        "userId"
      ],
      "properties": {
        "channelId": {
          "type": "string"
        },
        "contentType": {
          "type": "string"
        },
        "createdTime": {
          "type": "string"
        },
        "creatorName": {
          "type": "string"
        },
        "fileExtension": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "isHidden": {
          "type": "boolean"
        },
        "isOfficial": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "payloadURL": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/models.PayloadURL"
          }
        },
        "preview": {
          "type": "string"
        },
        "shareCode": {
          "type": "string"
        },
        "subType": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "type": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        }
      }
    },
    "models.CreateGroupRequest": {
      "required": [
        "contents",
        "name"
      ],
      "properties": {
        "contents": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        }
      }
    },
    "models.CreateGroupResponse": {
      "required": [
        "contents",
        "createdAt",
        "id",
        "name",
        "namespace",
        "userId"
      ],
      "properties": {
        "contents": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "createdAt": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        }
      }
    },
    "models.CreateScreenshotRequest": {
      "required": [
        "screenshots"
      ],
      "properties": {
        "screenshots": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/models.createScreenshotRequest"
          }
        }
      }
    },
    "models.CreateScreenshotResponse": {
      "required": [
        "screenshots"
      ],
      "properties": {
        "screenshots": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/models.ScreenshotResponse"
          }
        }
      }
    },
    "models.CreateTagRequest": {
      "required": [
        "tag"
      ],
      "properties": {
        "tag": {
          "type": "string"
        }
      }
    },
    "models.CreateTagResponse": {
      "required": [
        "id",
        "namespace",
        "tag"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "tag": {
          "type": "string"
        }
      }
    },
    "models.CreateTypeRequest": {
      "required": [
        "subtype",
        "type"
      ],
      "properties": {
        "subtype": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "type": {
          "type": "string"
        }
      }
    },
    "models.CreateTypeResponse": {
      "required": [
        "id",
        "namespace",
        "subtype",
        "type"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "subtype": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "type": {
          "type": "string"
        }
      }
    },
    "models.CreatorFollowState": {
      "required": [
        "state",
        "userId"
      ],
      "properties": {
        "state": {
          "type": "boolean"
        },
        "userId": {
          "type": "string"
        }
      }
    },
    "models.CreatorOverviewResponse": {
      "required": [
        "followCount",
        "id",
        "namespace"
      ],
      "properties": {
        "followCount": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        }
      }
    },
    "models.GetContentPreviewResponse": {
      "required": [
        "preview"
      ],
      "properties": {
        "preview": {
          "type": "string"
        }
      }
    },
    "models.HideContentRequest": {
      "required": [
        "isHidden"
      ],
      "properties": {
        "isHidden": {
          "type": "boolean"
        }
      }
    },
    "models.LikeState": {
      "required": [
        "state",
        "userId"
      ],
      "properties": {
        "state": {
          "type": "boolean"
        },
        "userId": {
          "type": "string"
        }
      }
    },
    "models.PaginatedContentDownloadResponse": {
      "required": [
        "data",
        "paging"
      ],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/models.ContentDownloadResponse"
          }
        },
        "paging": {
          "$ref": "#/definitions/models.PagingCursor"
        }
      }
    },
    "models.PaginatedCreatorOverviewResponse": {
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/models.CreatorOverviewResponse"
          }
        }
      }
    },
    "models.PaginatedGetChannelResponse": {
      "required": [
        "data",
        "paging"
      ],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/models.ChannelResponse"
          }
        },
        "paging": {
          "$ref": "#/definitions/models.PagingCursor"
        }
      }
    },
    "models.PaginatedGetTagResponse": {
      "required": [
        "data",
        "paging"
      ],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/models.CreateTagResponse"
          }
        },
        "paging": {
          "$ref": "#/definitions/models.PagingCursor"
        }
      }
    },
    "models.PaginatedGetTypeResponse": {
      "required": [
        "data",
        "paging"
      ],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/models.CreateTypeResponse"
          }
        },
        "paging": {
          "$ref": "#/definitions/models.PagingCursor"
        }
      }
    },
    "models.PaginatedGroupResponse": {
      "required": [
        "data",
        "paging"
      ],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/models.CreateGroupResponse"
          }
        },
        "paging": {
          "$ref": "#/definitions/models.PagingCursor"
        }
      }
    },
    "models.PagingCursor": {
      "required": [
        "first",
        "last",
        "next",
        "previous"
      ],
      "properties": {
        "first": {
          "type": "string"
        },
        "last": {
          "type": "string"
        },
        "next": {
          "type": "string"
        },
        "previous": {
          "type": "string"
        }
      }
    },
    "models.PayloadURL": {
      "required": [
        "source",
        "url"
      ],
      "properties": {
        "source": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "models.ScreenshotResponse": {
      "required": [
        "description",
        "fileExtension",
        "screenshotId",
        "source",
        "url"
      ],
      "properties": {
        "contentType": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "fileExtension": {
          "type": "string"
        },
        "screenshotId": {
          "type": "string"
        },
        "source": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "models.UpdateScreenshotRequest": {
      "required": [
        "screenshots"
      ],
      "properties": {
        "screenshots": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/models.updateScreenshot"
          }
        }
      }
    },
    "models.UpdateScreenshotResponse": {
      "required": [
        "screenshots"
      ],
      "properties": {
        "screenshots": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/models.updateScreenshot"
          }
        }
      }
    },
    "models.UserFollowRequest": {
      "required": [
        "followStatus"
      ],
      "properties": {
        "followStatus": {
          "type": "boolean"
        }
      }
    },
    "models.UserFollowResponse": {
      "required": [
        "followStatus",
        "userId"
      ],
      "properties": {
        "followStatus": {
          "type": "boolean"
        },
        "userId": {
          "type": "string"
        }
      }
    },
    "models.contentRequest": {
      "required": [
        "name",
        "preview",
        "subType",
        "tags",
        "type"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "preview": {
          "type": "string"
        },
        "subType": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "type": {
          "type": "string"
        }
      }
    },
    "models.createScreenshotRequest": {
      "required": [
        "contentType",
        "description",
        "fileExtension"
      ],
      "properties": {
        "contentType": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "fileExtension": {
          "type": "string",
          "enum": [
            "pjp",
            "jpg",
            "jpeg",
            "jfif",
            "bmp",
            "png"
          ]
        }
      }
    },
    "models.updateScreenshot": {
      "required": [
        "description",
        "screenshotId"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "screenshotId": {
          "type": "string"
        }
      }
    },
    "response.Error": {
      "required": [
        "errorCode",
        "errorMessage"
      ],
      "properties": {
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "errorMessage": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "authorization": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "authorization": []
    }
  ]
}
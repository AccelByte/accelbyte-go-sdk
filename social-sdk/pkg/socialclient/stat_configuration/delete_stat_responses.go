// Code generated by go-swagger; DO NOT EDIT.

package stat_configuration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"io/ioutil"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/AccelByte/accelbyte-go-sdk/social-sdk/pkg/socialclientmodels"
)

// DeleteStatReader is a Reader for the DeleteStat structure.
type DeleteStatReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteStatReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteStatNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewDeleteStatNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		data, err := ioutil.ReadAll(response.Body())
		if err != nil {
			return nil, err
		}

		return nil, fmt.Errorf("Requested DELETE /v1/admin/namespaces/{namespace}/stats/{statCode} returns an error %d: %s", response.Code(), string(data))
	}
}

// NewDeleteStatNoContent creates a DeleteStatNoContent with default headers values
func NewDeleteStatNoContent() *DeleteStatNoContent {
	return &DeleteStatNoContent{}
}

/*DeleteStatNoContent handles this case with default header values.

  Successful delete of stat
*/
type DeleteStatNoContent struct {
}

func (o *DeleteStatNoContent) Error() string {
	return fmt.Sprintf("[DELETE /v1/admin/namespaces/{namespace}/stats/{statCode}][%d] deleteStatNoContent ", 204)
}

func (o *DeleteStatNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteStatNotFound creates a DeleteStatNotFound with default headers values
func NewDeleteStatNotFound() *DeleteStatNotFound {
	return &DeleteStatNotFound{}
}

/*DeleteStatNotFound handles this case with default header values.

  <table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12241</td><td>Stat [{statCode}] cannot be found in namespace [{namespace}]</td></tr></table>
*/
type DeleteStatNotFound struct {
	Payload *socialclientmodels.ErrorEntity
}

func (o *DeleteStatNotFound) Error() string {
	return fmt.Sprintf("[DELETE /v1/admin/namespaces/{namespace}/stats/{statCode}][%d] deleteStatNotFound  %+v", 404, o.Payload)
}

func (o *DeleteStatNotFound) GetPayload() *socialclientmodels.ErrorEntity {
	return o.Payload
}

func (o *DeleteStatNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(socialclientmodels.ErrorEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

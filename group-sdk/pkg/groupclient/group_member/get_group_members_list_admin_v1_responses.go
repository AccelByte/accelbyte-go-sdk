// Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// Code generated by go-swagger; DO NOT EDIT.

package group_member

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"io/ioutil"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/AccelByte/accelbyte-go-sdk/group-sdk/pkg/groupclientmodels"
)

// GetGroupMembersListAdminV1Reader is a Reader for the GetGroupMembersListAdminV1 structure.
type GetGroupMembersListAdminV1Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetGroupMembersListAdminV1Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetGroupMembersListAdminV1OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetGroupMembersListAdminV1BadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetGroupMembersListAdminV1Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGetGroupMembersListAdminV1Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetGroupMembersListAdminV1NotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewGetGroupMembersListAdminV1InternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		data, err := ioutil.ReadAll(response.Body())
		if err != nil {
			return nil, err
		}

		return nil, fmt.Errorf("Requested GET /group/v1/admin/namespaces/{namespace}/groups/{groupId}/members returns an error %d: %s", response.Code(), string(data))
	}
}

// NewGetGroupMembersListAdminV1OK creates a GetGroupMembersListAdminV1OK with default headers values
func NewGetGroupMembersListAdminV1OK() *GetGroupMembersListAdminV1OK {
	return &GetGroupMembersListAdminV1OK{}
}

/*GetGroupMembersListAdminV1OK handles this case with default header values.

  OK
*/
type GetGroupMembersListAdminV1OK struct {
	Payload *groupclientmodels.ModelsGetGroupMemberListResponseV1
}

func (o *GetGroupMembersListAdminV1OK) Error() string {
	return fmt.Sprintf("[GET /group/v1/admin/namespaces/{namespace}/groups/{groupId}/members][%d] getGroupMembersListAdminV1OK  %+v", 200, o.Payload)
}

func (o *GetGroupMembersListAdminV1OK) GetPayload() *groupclientmodels.ModelsGetGroupMemberListResponseV1 {
	return o.Payload
}

func (o *GetGroupMembersListAdminV1OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(groupclientmodels.ModelsGetGroupMemberListResponseV1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGroupMembersListAdminV1BadRequest creates a GetGroupMembersListAdminV1BadRequest with default headers values
func NewGetGroupMembersListAdminV1BadRequest() *GetGroupMembersListAdminV1BadRequest {
	return &GetGroupMembersListAdminV1BadRequest{}
}

/*GetGroupMembersListAdminV1BadRequest handles this case with default header values.

  <table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>
*/
type GetGroupMembersListAdminV1BadRequest struct {
	Payload *groupclientmodels.ResponseErrorResponse
}

func (o *GetGroupMembersListAdminV1BadRequest) Error() string {
	return fmt.Sprintf("[GET /group/v1/admin/namespaces/{namespace}/groups/{groupId}/members][%d] getGroupMembersListAdminV1BadRequest  %+v", 400, o.Payload)
}

func (o *GetGroupMembersListAdminV1BadRequest) GetPayload() *groupclientmodels.ResponseErrorResponse {
	return o.Payload
}

func (o *GetGroupMembersListAdminV1BadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(groupclientmodels.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGroupMembersListAdminV1Unauthorized creates a GetGroupMembersListAdminV1Unauthorized with default headers values
func NewGetGroupMembersListAdminV1Unauthorized() *GetGroupMembersListAdminV1Unauthorized {
	return &GetGroupMembersListAdminV1Unauthorized{}
}

/*GetGroupMembersListAdminV1Unauthorized handles this case with default header values.

  <table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>20001</td><td>unauthorized access</td></tr></table>
*/
type GetGroupMembersListAdminV1Unauthorized struct {
	Payload *groupclientmodels.ResponseErrorResponse
}

func (o *GetGroupMembersListAdminV1Unauthorized) Error() string {
	return fmt.Sprintf("[GET /group/v1/admin/namespaces/{namespace}/groups/{groupId}/members][%d] getGroupMembersListAdminV1Unauthorized  %+v", 401, o.Payload)
}

func (o *GetGroupMembersListAdminV1Unauthorized) GetPayload() *groupclientmodels.ResponseErrorResponse {
	return o.Payload
}

func (o *GetGroupMembersListAdminV1Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(groupclientmodels.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGroupMembersListAdminV1Forbidden creates a GetGroupMembersListAdminV1Forbidden with default headers values
func NewGetGroupMembersListAdminV1Forbidden() *GetGroupMembersListAdminV1Forbidden {
	return &GetGroupMembersListAdminV1Forbidden{}
}

/*GetGroupMembersListAdminV1Forbidden handles this case with default header values.

  <table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>20022</td><td>token is not user token</td></tr></table>
*/
type GetGroupMembersListAdminV1Forbidden struct {
	Payload *groupclientmodels.ResponseErrorResponse
}

func (o *GetGroupMembersListAdminV1Forbidden) Error() string {
	return fmt.Sprintf("[GET /group/v1/admin/namespaces/{namespace}/groups/{groupId}/members][%d] getGroupMembersListAdminV1Forbidden  %+v", 403, o.Payload)
}

func (o *GetGroupMembersListAdminV1Forbidden) GetPayload() *groupclientmodels.ResponseErrorResponse {
	return o.Payload
}

func (o *GetGroupMembersListAdminV1Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(groupclientmodels.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGroupMembersListAdminV1NotFound creates a GetGroupMembersListAdminV1NotFound with default headers values
func NewGetGroupMembersListAdminV1NotFound() *GetGroupMembersListAdminV1NotFound {
	return &GetGroupMembersListAdminV1NotFound{}
}

/*GetGroupMembersListAdminV1NotFound handles this case with default header values.

  <table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>73433</td><td>member group not found</td></tr></table>
*/
type GetGroupMembersListAdminV1NotFound struct {
	Payload *groupclientmodels.ResponseErrorResponse
}

func (o *GetGroupMembersListAdminV1NotFound) Error() string {
	return fmt.Sprintf("[GET /group/v1/admin/namespaces/{namespace}/groups/{groupId}/members][%d] getGroupMembersListAdminV1NotFound  %+v", 404, o.Payload)
}

func (o *GetGroupMembersListAdminV1NotFound) GetPayload() *groupclientmodels.ResponseErrorResponse {
	return o.Payload
}

func (o *GetGroupMembersListAdminV1NotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(groupclientmodels.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGroupMembersListAdminV1InternalServerError creates a GetGroupMembersListAdminV1InternalServerError with default headers values
func NewGetGroupMembersListAdminV1InternalServerError() *GetGroupMembersListAdminV1InternalServerError {
	return &GetGroupMembersListAdminV1InternalServerError{}
}

/*GetGroupMembersListAdminV1InternalServerError handles this case with default header values.

  Internal Server Error
*/
type GetGroupMembersListAdminV1InternalServerError struct {
	Payload *groupclientmodels.ResponseErrorResponse
}

func (o *GetGroupMembersListAdminV1InternalServerError) Error() string {
	return fmt.Sprintf("[GET /group/v1/admin/namespaces/{namespace}/groups/{groupId}/members][%d] getGroupMembersListAdminV1InternalServerError  %+v", 500, o.Payload)
}

func (o *GetGroupMembersListAdminV1InternalServerError) GetPayload() *groupclientmodels.ResponseErrorResponse {
	return o.Payload
}

func (o *GetGroupMembersListAdminV1InternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(groupclientmodels.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

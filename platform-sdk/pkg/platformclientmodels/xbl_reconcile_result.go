// Code generated by go-swagger; DO NOT EDIT.

package platformclientmodels

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// XblReconcileResult xbl reconcile result
//
// swagger:model XblReconcileResult
type XblReconcileResult struct {

	// iap order status
	// Enum: [VERIFIED FULFILLED FAILED]
	IapOrderStatus string `json:"iapOrderStatus,omitempty"`

	// item Id
	ItemID string `json:"itemId,omitempty"`

	// sku
	Sku string `json:"sku,omitempty"`

	// transaction Id
	TransactionID string `json:"transactionId,omitempty"`

	// xbox product Id
	XboxProductID string `json:"xboxProductId,omitempty"`
}

// Validate validates this xbl reconcile result
func (m *XblReconcileResult) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateIapOrderStatus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var xblReconcileResultTypeIapOrderStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["VERIFIED","FULFILLED","FAILED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		xblReconcileResultTypeIapOrderStatusPropEnum = append(xblReconcileResultTypeIapOrderStatusPropEnum, v)
	}
}

const (

	// XblReconcileResultIapOrderStatusVERIFIED captures enum value "VERIFIED"
	XblReconcileResultIapOrderStatusVERIFIED string = "VERIFIED"

	// XblReconcileResultIapOrderStatusFULFILLED captures enum value "FULFILLED"
	XblReconcileResultIapOrderStatusFULFILLED string = "FULFILLED"

	// XblReconcileResultIapOrderStatusFAILED captures enum value "FAILED"
	XblReconcileResultIapOrderStatusFAILED string = "FAILED"
)

// prop value enum
func (m *XblReconcileResult) validateIapOrderStatusEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, xblReconcileResultTypeIapOrderStatusPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *XblReconcileResult) validateIapOrderStatus(formats strfmt.Registry) error {

	if swag.IsZero(m.IapOrderStatus) { // not required
		return nil
	}

	// value enum
	if err := m.validateIapOrderStatusEnum("iapOrderStatus", "body", m.IapOrderStatus); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *XblReconcileResult) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *XblReconcileResult) UnmarshalBinary(b []byte) error {
	var res XblReconcileResult
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

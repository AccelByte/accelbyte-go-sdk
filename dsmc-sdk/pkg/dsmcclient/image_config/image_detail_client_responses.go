// Code generated by go-swagger; DO NOT EDIT.

package image_config

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"io/ioutil"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/AccelByte/accelbyte-go-sdk/dsmc-sdk/pkg/dsmcclientmodels"
)

// ImageDetailClientReader is a Reader for the ImageDetailClient structure.
type ImageDetailClientReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ImageDetailClientReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewImageDetailClientOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewImageDetailClientUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewImageDetailClientNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewImageDetailClientInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		data, err := ioutil.ReadAll(response.Body())
		if err != nil {
			return nil, err
		}

		return nil, fmt.Errorf("Requested GET /dsmcontroller/namespaces/{namespace}/images/versions/{version} returns an error %d: %s", response.Code(), string(data))
	}
}

// NewImageDetailClientOK creates a ImageDetailClientOK with default headers values
func NewImageDetailClientOK() *ImageDetailClientOK {
	return &ImageDetailClientOK{}
}

/*ImageDetailClientOK handles this case with default header values.

  ok
*/
type ImageDetailClientOK struct {
	Payload *dsmcclientmodels.ModelsGetImageDetailResponse
}

func (o *ImageDetailClientOK) Error() string {
	return fmt.Sprintf("[GET /dsmcontroller/namespaces/{namespace}/images/versions/{version}][%d] imageDetailClientOK  %+v", 200, o.Payload)
}

func (o *ImageDetailClientOK) GetPayload() *dsmcclientmodels.ModelsGetImageDetailResponse {
	return o.Payload
}

func (o *ImageDetailClientOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(dsmcclientmodels.ModelsGetImageDetailResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImageDetailClientUnauthorized creates a ImageDetailClientUnauthorized with default headers values
func NewImageDetailClientUnauthorized() *ImageDetailClientUnauthorized {
	return &ImageDetailClientUnauthorized{}
}

/*ImageDetailClientUnauthorized handles this case with default header values.

  Unauthorized
*/
type ImageDetailClientUnauthorized struct {
	Payload *dsmcclientmodels.ResponseError
}

func (o *ImageDetailClientUnauthorized) Error() string {
	return fmt.Sprintf("[GET /dsmcontroller/namespaces/{namespace}/images/versions/{version}][%d] imageDetailClientUnauthorized  %+v", 401, o.Payload)
}

func (o *ImageDetailClientUnauthorized) GetPayload() *dsmcclientmodels.ResponseError {
	return o.Payload
}

func (o *ImageDetailClientUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(dsmcclientmodels.ResponseError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImageDetailClientNotFound creates a ImageDetailClientNotFound with default headers values
func NewImageDetailClientNotFound() *ImageDetailClientNotFound {
	return &ImageDetailClientNotFound{}
}

/*ImageDetailClientNotFound handles this case with default header values.

  image version not found
*/
type ImageDetailClientNotFound struct {
	Payload *dsmcclientmodels.ResponseError
}

func (o *ImageDetailClientNotFound) Error() string {
	return fmt.Sprintf("[GET /dsmcontroller/namespaces/{namespace}/images/versions/{version}][%d] imageDetailClientNotFound  %+v", 404, o.Payload)
}

func (o *ImageDetailClientNotFound) GetPayload() *dsmcclientmodels.ResponseError {
	return o.Payload
}

func (o *ImageDetailClientNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(dsmcclientmodels.ResponseError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImageDetailClientInternalServerError creates a ImageDetailClientInternalServerError with default headers values
func NewImageDetailClientInternalServerError() *ImageDetailClientInternalServerError {
	return &ImageDetailClientInternalServerError{}
}

/*ImageDetailClientInternalServerError handles this case with default header values.

  Internal Server Error
*/
type ImageDetailClientInternalServerError struct {
	Payload *dsmcclientmodels.ResponseError
}

func (o *ImageDetailClientInternalServerError) Error() string {
	return fmt.Sprintf("[GET /dsmcontroller/namespaces/{namespace}/images/versions/{version}][%d] imageDetailClientInternalServerError  %+v", 500, o.Payload)
}

func (o *ImageDetailClientInternalServerError) GetPayload() *dsmcclientmodels.ResponseError {
	return o.Payload
}

func (o *ImageDetailClientInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(dsmcclientmodels.ResponseError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// Code generated by go-swagger; DO NOT EDIT.

package anonymization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"io/ioutil"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/AccelByte/accelbyte-go-sdk/ugc-sdk/pkg/ugcclientmodels"
)

// DeleteAllUserChannelReader is a Reader for the DeleteAllUserChannel structure.
type DeleteAllUserChannelReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteAllUserChannelReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteAllUserChannelOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteAllUserChannelUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewDeleteAllUserChannelNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewDeleteAllUserChannelInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		data, err := ioutil.ReadAll(response.Body())
		if err != nil {
			return nil, err
		}

		return nil, fmt.Errorf("Requested DELETE /ugc/v1/public/namespaces/{namespace}/users/{userId}/channels returns an error %d: %s", response.Code(), string(data))
	}
}

// NewDeleteAllUserChannelOK creates a DeleteAllUserChannelOK with default headers values
func NewDeleteAllUserChannelOK() *DeleteAllUserChannelOK {
	return &DeleteAllUserChannelOK{}
}

/*DeleteAllUserChannelOK handles this case with default header values.

  OK
*/
type DeleteAllUserChannelOK struct {
}

func (o *DeleteAllUserChannelOK) Error() string {
	return fmt.Sprintf("[DELETE /ugc/v1/public/namespaces/{namespace}/users/{userId}/channels][%d] deleteAllUserChannelOK ", 200)
}

func (o *DeleteAllUserChannelOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteAllUserChannelUnauthorized creates a DeleteAllUserChannelUnauthorized with default headers values
func NewDeleteAllUserChannelUnauthorized() *DeleteAllUserChannelUnauthorized {
	return &DeleteAllUserChannelUnauthorized{}
}

/*DeleteAllUserChannelUnauthorized handles this case with default header values.

  Unauthorized
*/
type DeleteAllUserChannelUnauthorized struct {
	Payload *ugcclientmodels.ResponseError
}

func (o *DeleteAllUserChannelUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /ugc/v1/public/namespaces/{namespace}/users/{userId}/channels][%d] deleteAllUserChannelUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteAllUserChannelUnauthorized) GetPayload() *ugcclientmodels.ResponseError {
	return o.Payload
}

func (o *DeleteAllUserChannelUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ugcclientmodels.ResponseError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAllUserChannelNotFound creates a DeleteAllUserChannelNotFound with default headers values
func NewDeleteAllUserChannelNotFound() *DeleteAllUserChannelNotFound {
	return &DeleteAllUserChannelNotFound{}
}

/*DeleteAllUserChannelNotFound handles this case with default header values.

  Not Found
*/
type DeleteAllUserChannelNotFound struct {
	Payload *ugcclientmodels.ResponseError
}

func (o *DeleteAllUserChannelNotFound) Error() string {
	return fmt.Sprintf("[DELETE /ugc/v1/public/namespaces/{namespace}/users/{userId}/channels][%d] deleteAllUserChannelNotFound  %+v", 404, o.Payload)
}

func (o *DeleteAllUserChannelNotFound) GetPayload() *ugcclientmodels.ResponseError {
	return o.Payload
}

func (o *DeleteAllUserChannelNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ugcclientmodels.ResponseError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAllUserChannelInternalServerError creates a DeleteAllUserChannelInternalServerError with default headers values
func NewDeleteAllUserChannelInternalServerError() *DeleteAllUserChannelInternalServerError {
	return &DeleteAllUserChannelInternalServerError{}
}

/*DeleteAllUserChannelInternalServerError handles this case with default header values.

  Internal Server Error
*/
type DeleteAllUserChannelInternalServerError struct {
	Payload *ugcclientmodels.ResponseError
}

func (o *DeleteAllUserChannelInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /ugc/v1/public/namespaces/{namespace}/users/{userId}/channels][%d] deleteAllUserChannelInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteAllUserChannelInternalServerError) GetPayload() *ugcclientmodels.ResponseError {
	return o.Payload
}

func (o *DeleteAllUserChannelInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ugcclientmodels.ResponseError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

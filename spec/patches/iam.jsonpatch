[
  {
    "op": "add",
    "path": "/schemes",
    "value": [
      "https"
    ]
  },
  {
    "op": "add",
    "path": "/host",
    "value": "demo.accelbyte.io"
  },
  {
    "op": "remove",
    "path": "/definitions/account.createTestUserResponseV4"
  },
  {
    "op": "remove",
    "path": "/paths/~1iam~1oauth~1platforms~1{platformId}~1token"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1listByLoginIds/get/security",
    "value": [
      {
        "HasPermission": [
          "NAMESPACE:{namespace}:USER [READ]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1listByLoginIds/get/description",
    "value": "Required permission &#39;NAMESPACE:{namespace}:USER [READ]&#39;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1users~1platforms~1justice/get/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:USER [READ]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1users~1platforms~1justice/get/description",
    "value": "This endpoint requires ADMIN:NAMESPACE:{namespace}:USER [READ] permission.\n\nReturns list of users ID and namespace with their Justice platform account, under a namespace. If user\ndoesn&#39;t have Justice platform account, the linkedPlatforms will be empty array.&#39;\n"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1clients~1{clientId}/delete/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:CLIENT:{clientId} [DELETE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1clients~1{clientId}/delete/description",
    "value": "Required permission &#39;ADMIN:NAMESPACE:{namespace}:CLIENT:{clientId} [DELETE]&#39;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1bantypes/get/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:BAN [READ]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1bantypes/get/description",
    "value": "Required permission &#39;ADMIN:BAN [READ]&#39; &lt;br&gt;Ban type is the code\n\t\t\tavailable for ban assignment. It is applicable globally for any namespace.  &lt;br&gt;action code : 10201"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1agerestrictions~1countries~1{countryCode}/patch/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:AGERESTRICTION [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1agerestrictions~1countries~1{countryCode}/patch/description",
    "value": "Required permission &#39;ADMIN:NAMESPACE:{namespace}:AGERESTRICTION [UPDATE]&#39;&lt;br&gt;action code: 10123"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1public~1namespaces~1{namespace}~1users~1invite~1{invitationId}/post/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1public~1namespaces~1{namespace}~1users~1invite~1{invitationId}/get/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1oauth~1platforms~1{platformId}~1token/post/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1oauth~1platforms~1{platformId}~1token/post/description",
    "value": "&lt;p&gt;Platform token grant specifically used for performing token grant using platform, e.g. Steam, Justice, etc. The endpoint automatically create an account if the account associated with the platform is not exists yet.\n\t\t\tThis endpoint requires all requests to have Authorization header set with Basic access authentication\n\t\t\tconstructed from client id and client secret. For publisher-game namespace schema : Specify only either platform_token or device_id. Device token grant\n\t\t\tshould be requested along with device_id parameter against game namespace. Another 3rd party platform token grant should be requested\n\t\t\talong with platform_token parameter against publisher namespace.&lt;/p&gt;\n\t\t\t&lt;h2&gt;Supported platforms:&lt;/h2&gt;\n\t\t\t&lt;ul&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;steam&lt;/strong&gt;: The platform_token\u2019s value is the authentication code returned by Steam.&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;steamopenid&lt;/strong&gt;: Steam&#39;s user authentication method using OpenID 2.0. The platform_token&#39;s value is URL generated by Steam on web authentication&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;facebook&lt;/strong&gt;: The platform_token\u2019s value is the authorization code returned by Facebook OAuth&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;google&lt;/strong&gt;: The platform_token\u2019s value is the authorization code returned by Google OAuth&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;oculus&lt;/strong&gt;: The platform_token\u2019s value is a string composed of Oculus&#39;s user ID and the nonce separated by a colon (:).&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;twitch&lt;/strong&gt;: The platform_token\u2019s value is the authorization code returned by Twitch OAuth.&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;discord&lt;/strong&gt;: The platform_token\u2019s value is the authorization code returned by Discord OAuth&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;android&lt;/strong&gt;: The device_id is the Android\u2019s device ID&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;ios&lt;/strong&gt;: The device_id is the iOS\u2019s device ID.&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;apple&lt;/strong&gt;: The platform_token\u2019s value is the authorization code returned by Apple OAuth.(We will use this code to generate APP token)&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;device&lt;/strong&gt;: Every device that does\u2019nt run Android and iOS is categorized as a device. The device_id is the device\u2019s ID.&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;justice&lt;/strong&gt;: The platform_token\u2019s value is the designated user\u2019s access token.&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;epicgames&lt;/strong&gt;: The platform_token\u2019s value is an access-token obtained from Epicgames EOS Account Service.&lt;/li&gt;\n                &lt;li&gt;&lt;strong&gt;stadia&lt;/strong&gt;: The platform_token&#39;s value is a JWT Token, which can be obtained after calling the Stadia SDK&#39;s function.&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;ps4&lt;/strong&gt;: The platform_token\u2019s value is the authorization code returned by Sony OAuth.&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;ps5&lt;/strong&gt;: The platform_token\u2019s value is the authorization code returned by Sony OAuth.&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;nintendo&lt;/strong&gt;: The platform_token\u2019s value is the authorization code(id_token) returned by Nintendo OAuth.&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;awscognito&lt;/strong&gt;: The platform_token\u2019s value is the aws cognito access token (JWT).&lt;/li&gt;\n\t\t\t&lt;/ul&gt;\n\t\t\t&lt;h2&gt;Account Group&lt;/h2&gt;\n\t\t\t&lt;p&gt;Several platforms are grouped under account groups. The accounts on these platforms have the same platform user id. \n\t\t\tLogin using one of these platform will returns the same IAM user. &lt;/p&gt;\n\t\t\t&lt;p&gt;Following is the current registered account grouping: &lt;/p&gt;\n\t\t\t&lt;ul&gt;\n\t\t\t&lt;li&gt; (psn) ps4web &lt;/li&gt;\n\t\t\t&lt;li&gt; (psn) ps4 &lt;/li&gt;\n\t\t\t&lt;li&gt; (psn) ps5 &lt;/li&gt;\n\t\t\t&lt;/ul&gt;\n\t\t\t&lt;h2&gt;Access Token Content&lt;/h2&gt;\n\t\t\t&lt;p&gt;Following is the access token\u2019s content:&lt;/p&gt;\n\t\t\t&lt;ul&gt;\n\t\t\t&lt;li&gt;\n\t\t\t\t&lt;p&gt;&lt;strong&gt;namespace&lt;/strong&gt;. It is the namespace the token was generated from.&lt;/p&gt;\n\t\t\t&lt;/li&gt;\n\t\t\t&lt;li&gt;\n\t\t\t\t&lt;p&gt;&lt;strong&gt;display_name&lt;/strong&gt;. The display name of the sub. It is empty if the token is generated from the client credential&lt;/p&gt;\n\t\t\t&lt;/li&gt;\n\t\t\t&lt;li&gt;\n\t\t\t\t&lt;p&gt;&lt;strong&gt;roles&lt;/strong&gt;. The sub\u2019s roles. It is empty if the token is generated from the client credential&lt;/p&gt;\n\t\t\t&lt;/li&gt;\n\t\t\t&lt;li&gt;\n\t\t\t\t&lt;p&gt;&lt;strong&gt;namespace_roles&lt;/strong&gt;. The sub\u2019s roles scoped to namespace. Improvement from roles, which make the role scoped to specific namespace instead of global to publisher namespace&lt;/p&gt;\n\t\t\t&lt;/li&gt;\n\t\t\t&lt;li&gt;\n\t\t\t\t&lt;p&gt;&lt;strong&gt;permissions&lt;/strong&gt;. The sub or aud\u2019 permissions&lt;/p&gt;\n\t\t\t&lt;/li&gt;\n\t\t\t&lt;li&gt;\n\t\t\t\t&lt;p&gt;&lt;strong&gt;bans&lt;/strong&gt;. The sub\u2019s list of bans. It is used by the IAM client for validating the token.&lt;/p&gt;\n\t\t\t&lt;/li&gt;\n\t\t\t&lt;li&gt;\n\t\t\t\t&lt;p&gt;&lt;strong&gt;jflgs&lt;/strong&gt;. It stands for Justice Flags. It is a special flag used for storing additional status information regarding the sub. It is implemented as a bit mask. Following explains what each bit represents:&lt;/p&gt;\n\t\t\t&lt;ul&gt;\n\t\t\t\t&lt;li&gt;&lt;p&gt;1: Email Address Verified&lt;/p&gt;&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;p&gt;2: Phone Number Verified&lt;/p&gt;&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;p&gt;4: Anonymous&lt;/p&gt;&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;p&gt;8: Suspicious Login&lt;/p&gt;&lt;/li&gt;\n\t\t\t&lt;/ul&gt;\n\t\t\t&lt;/li&gt;\n\t\t\t&lt;li&gt;\n\t\t\t\t&lt;p&gt;&lt;strong&gt;aud&lt;/strong&gt;. The aud is the client ID.&lt;/p&gt;\n\t\t\t&lt;/li&gt;\n\t\t\t&lt;li&gt;\n\t\t\t\t&lt;p&gt;&lt;strong&gt;iat&lt;/strong&gt;. The time the token issues at. It is in Epoch time format&lt;/p&gt;\n\t\t\t&lt;/li&gt;\n\t\t\t&lt;li&gt;\n\t\t\t\t&lt;p&gt;&lt;strong&gt;exp&lt;/strong&gt;. The time the token expires. It is in Epoch time format&lt;/p&gt;\n\t\t\t&lt;/li&gt;\n\t\t\t&lt;li&gt;\n\t\t\t\t&lt;p&gt;&lt;strong&gt;sub&lt;/strong&gt;. The UserID. The sub is omitted if the token is generated from client credential&lt;/p&gt;\n\t\t\t&lt;/li&gt;\n\t\t\t&lt;h2&gt;Bans&lt;/h2&gt;\n\t\t\t&lt;p&gt;The JWT contains user&#39;s active bans with its expiry date. List of ban types can be obtained from /bans.&lt;/p&gt;\n\t\t\t&lt;br&gt;action code : 10704"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1{userId}~1crosslink/post/security",
    "value": [
      {
        "HasPermission": [
          "NAMESPACE:{namespace}:USER:{userId} [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1{userId}~1crosslink/post/description",
    "value": "&lt;h2&gt;The endpoint is going to be deprecated at 9 July, 2018. Please use this instead: /users/{userId}/platforms/{platformId}/link&lt;/h2&gt;\n&lt;p&gt;Required permission &#39;NAMESPACE:{namespace}:USER:{userId} [UPDATE]&#39;.&lt;/p&gt;\n&lt;p&gt;\n\tAccess token from original namespace is needed as authorization header. Access token from designated account needed as form parameter to verify the ownership of that account.\n\tWhen platformID (device platfom ID) is specified, platform login method for that specific platform ID is removed.\n\tThis means to protect account from second hand device usage.\n&lt;/p&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1{userId}~1enable/put/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:USERSTATUS:USER:{userId} [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1{userId}~1enable/put/description",
    "value": "&lt;h2&gt;The endpoint is going to be deprecated. Please use this instead: iam/v2/admin/namespaces/{namespace}/users/{userId}/enable&lt;/h2&gt;\n\t\t\t\t&lt;p&gt;Required permissions &#39;ADMIN:NAMESPACE:{namespace}:USERSTATUS:USER:{userId} [UPDATE]&#39;&lt;p&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1{userId}~1permissions~1{resource}~1{action}/post/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:PERMISSION:USER:{userId} [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1{userId}~1permissions~1{resource}~1{action}/post/description",
    "value": "&lt;p&gt;Required permission &#39;ADMIN:NAMESPACE:{namespace}:PERMISSION:USER:{userId} [UPDATE]&#39;&lt;/p&gt;\n\t\t\t&lt;p&gt;This endpoint will update existing permission (bitwise OR the action) if found one with same resource, otherwise it will append a new permission&lt;/p&gt;\n\t\t\t&lt;p&gt;Schedule contains cron string or date range (both are UTC, also in cron syntax) to indicate when a permission and action are in effect.&lt;/p&gt;\n\t\t\t&lt;p&gt;Both schedule types accepts quartz compatible cron syntax e.g. * * * * * * *.&lt;/p&gt;\n\t\t\t&lt;p&gt;In ranged schedule, first element will be start date, and second one will be end date&lt;/p&gt;\n\t\t\t&lt;p&gt;If schedule is set, the scheduled action must be valid too, that is between 1 to 15, inclusive&lt;/p&gt;\n\t\t\t&lt;p&gt;Syntax reference&lt;/p&gt;\n\t\t\t&lt;p&gt;Fields:&lt;/p&gt;\n\t\t\t&lt;ol&gt;\n\t\t\t&lt;li&gt;Seconds: 0-59 * / , -&lt;/li&gt;\n\t\t\t&lt;li&gt;Minutes: 0-59 * / , -&lt;/li&gt;\n\t\t\t&lt;li&gt;Hours: 0-23 * / , -&lt;/li&gt;\n\t\t\t&lt;li&gt;Day of month: 1-31 * / , - L W&lt;/li&gt;\n\t\t\t&lt;li&gt;Month: 1-12 JAN-DEC * / , -&lt;/li&gt;\n\t\t\t&lt;li&gt;Day of week: 0-6 SUN-SAT * / , - L #&lt;/li&gt;\n\t\t\t&lt;li&gt;Year: 1970-2099 * / , -&lt;/li&gt;\n\t\t\t&lt;/ol&gt;\n\t\t\t&lt;p&gt;Special characters:&lt;/p&gt;\n\t\t\t&lt;ol&gt;\n\t\t\t&lt;li&gt;*: all values in the fields, e.g. * in seconds fields indicates every second&lt;/li&gt;\n\t\t\t&lt;li&gt;/: increments of ranges, e.g. 3-59/15 in the minute field indicate the third minute of the hour and every 15 minutes thereafter&lt;/li&gt;\n\t\t\t&lt;li&gt;,: separate items of a list, e.g. MON,WED,FRI in day of week&lt;/li&gt;\n\t\t\t&lt;li&gt;-: range, e.g. 2010-2018 indicates every year between 2010 and 2018, inclusive&lt;/li&gt;\n\t\t\t&lt;li&gt;L: last, e.g. When used in the day-of-week field, it allows you to specify constructs such as &#34;the last Friday&#34; (5L) of a given month. In the day-of-month field, it specifies the last day of the month.&lt;/li&gt;\n\t\t\t&lt;li&gt;W: business day, e.g. if you were to specify 15W as the value for the day-of-month field, the meaning is: &#34;the nearest business day to the 15th of the month.&#34;&lt;/li&gt;\n\t\t\t&lt;li&gt;#: must be followed by a number between one and five. It allows you to specify constructs such as &#34;the second Friday&#34; of a given month.&lt;/li&gt;\n\t\t\t&lt;/ol&gt;\n\t\t\t"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1{userId}~1permissions~1{resource}~1{action}/delete/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:PERMISSION:USER:{userId} [DELETE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1{userId}~1permissions~1{resource}~1{action}/delete/description",
    "value": "Required permission &#39;ADMIN:NAMESPACE:{namespace}:PERMISSION:USER:{userId} [DELETE]&#39;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1bans~1reasons/get/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:BAN [READ]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1bans~1reasons/get/description",
    "value": "&lt;p&gt;Required permission &#39;ADMIN:BAN [READ]&#39;&lt;/p&gt;\nBan reasons is the code available to justify ban assignment. It is applicable globally for any namespace.\n&lt;p&gt;action code : 10202&lt;/p&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1public~1namespaces~1{namespace}~1users~1{userId}~1platforms~1link/post/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1public~1namespaces~1{namespace}~1users~1me~1code~1verify/post/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1public~1namespaces~1{namespace}~1users~1me~1code~1verify/post/description",
    "value": "&lt;p&gt;Required valid user authorization&lt;/p&gt;\n&lt;p&gt;Redeems a verification code sent to a user to verify the user&#39;s contact address is correct&lt;/p&gt;\n&lt;p&gt;Available ContactType : &lt;b&gt;email&lt;/b&gt;&lt;/p&gt;\n&lt;p&gt;action code: 10107&lt;/p&gt;\n"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1sso~1{platformId}/get/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1oauth~1revoke~1token/post/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1oauth~1revoke~1token/post/description",
    "value": "&lt;h1&gt;Deprecated at August 30, 2019. Please use the /v3/oauth/revoke endpoint instead&lt;/h1&gt;\n\t\t\t\t\t &lt;p&gt;Revokes a token.&lt;/p&gt;\n\t\t\t\t\t &lt;p&gt;This endpoint requires all requests to have Authorization header set with Basic access authentication constructed from client id and client secret or Bearer access authentication with valid access token.&lt;/p&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1{userId}~1bans~1{banId}~1disable/put/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:BAN:USER:{userId} [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1{userId}~1bans~1{banId}~1disable/put/description",
    "value": "Required permission &#39;ADMIN:NAMESPACE:{namespace}:BAN:USER:{userId} [UPDATE]&#39;.&lt;br&gt;&lt;br&gt;&lt;b&gt;Notes for using IAM in publisher - game studio scenarios&lt;/b&gt;&lt;br&gt;&lt;p&gt;The endpoint allows:&lt;/p&gt; &lt;ul&gt;&lt;li&gt;The admin user in publisher namespace disables user\u2019s ban in publisher namespace.&lt;/li&gt;&lt;li&gt;The admin user in game namespace disables user\u2019s ban in game namespace.&lt;/li&gt;&lt;li&gt;The admin user in publisher namespace disables user\u2019s ban in publisher namespace.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Other scenarios are not supported and will return 403: Forbidden.&lt;/p&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1users~1{userId}/patch/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:USER:{userId} [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1users~1{userId}/patch/description",
    "value": "&lt;p&gt;Required permission &#39;ADMIN:NAMESPACE:{namespace}:USER:{userId} [UPDATE]&#39;&lt;/p&gt;\n&lt;br&gt;&lt;p&gt;This Endpoint support update user based on given data. &lt;b&gt;Single request can update single field or multi fields.&lt;/b&gt;&lt;/p&gt; \n&lt;p&gt;Supported field {country, displayName, emailAddress, languageTag, dateOfBirth}&lt;/p&gt;\n&lt;p&gt;Country use ISO3166-1 alpha-2 two letter, e.g. US.&lt;/p&gt;\n&lt;p&gt;Date of Birth format : YYYY-MM-DD, e.g. 2019-04-29.&lt;/p&gt;\n&lt;br&gt;&lt;b&gt;Several case of updating email address&lt;/b&gt;\n&lt;ul&gt;&lt;li&gt;User want to update email address of which have been verified, NewEmailAddress response field will be filled with new email address.&lt;/li&gt;\n&lt;li&gt;User want to update email address of which have not been verified, {LoginId, OldEmailAddress, EmailAddress} response field will be filled with new email address. &lt;/li&gt;\n&lt;li&gt;User want to update email address of which have been verified and updated before, {LoginId, OldEmailAddress, EmailAddress} response field will be filled with verified email before. NewEmailAddress response field will be filled with newest email address. &lt;/li&gt;\n&lt;p&gt;action code : 10103 &lt;/p&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1users~1{userId}/get/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:USER:{userId} [READ]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1users~1{userId}/get/description",
    "value": "Required permission &#39;ADMIN:NAMESPACE:{namespace}:USER:{userId} [READ]&#39;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1platforms~1all~1clients~1active/get/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:PLATFORM:*:CLIENT [READ]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1{userId}~1upgradeHeadlessAccountWithVerificationCode/post/security",
    "value": [
      {
        "HasPermission": [
          "NAMESPACE:{namespace}:USER:{userId} [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1{userId}~1upgradeHeadlessAccountWithVerificationCode/post/description",
    "value": "Required permission &#39;NAMESPACE:{namespace}:USER:{userId} [UPDATE]&#39;\n&lt;p&gt;The endpoint upgrades a headless account by linking the headless account with the email address and the password. By upgrading the headless account into a full account, the user could use the email address and password for using Justice IAM.\nThe endpoint is a shortcut for upgrading a headless account and verifying the email address in one call. In order to get a verification code for the endpoint, please check the send verification code endpoint.&lt;/p&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1public~1namespaces~1{namespace}~1users~1{userId}/get/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1public~1namespaces~1{namespace}~1users~1{userId}/get/description",
    "value": "&lt;p&gt;This endpoint retrieve user attributes. action code: 10129&lt;/p&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1users~1{userId}~1logins~1histories/get/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:HISTORY:LOGIN:USER:{userId} [READ]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1users~1{userId}~1logins~1histories/get/description",
    "value": "Required permission &#39;ADMIN:NAMESPACE:{namespace}:HISTORY:LOGIN:USER:{userId} [READ]&#39;&lt;p&gt;Notes for this endpoint: &lt;/p&gt; &lt;ul&gt;&lt;li&gt;This endpoint retrieve the first page of the data if `after` and `before` parameters is empty.&lt;/li&gt;&lt;li&gt;The maximum value of the limit is 100 and the minimum value of the limit is 1.&lt;/li&gt;&lt;li&gt;This endpoint retrieve the next page of the data if we provide `after` parameters with valid Unix timestamp.&lt;/li&gt;&lt;li&gt;This endpoint retrieve the previous page of the data if we provide `before` parameter with valid data Unix timestamp.&lt;/li&gt;&lt;ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v4~1admin~1roles/post/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:ROLE [CREATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v4~1admin~1roles/get/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:ROLE [READ]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v4~1public~1namespaces~1{namespace}~1users~1invite~1{invitationId}/post/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v2~1admin~1namespaces~1{namespace}~1users~1{userId}~1bans/get/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:BAN:USER:{userId} [READ]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v2~1admin~1namespaces~1{namespace}~1users~1{userId}~1bans/get/description",
    "value": "Required permission &#39;ADMIN:NAMESPACE:{namespace}:BAN:USER:{userId} [READ]&#39;."
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1public~1namespaces~1{namespace}~1users~1reset/post/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1public~1namespaces~1{namespace}~1users~1reset/post/description",
    "value": "&lt;p&gt;action code: 10105&lt;/p&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1bans/get/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:BAN [READ]",
          "BAN:ADMIN [READ]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1bans/get/description",
    "value": "&lt;p&gt;Required permission &#39;BAN:ADMIN [READ]&#39; or &#39;ADMIN:BAN [READ]&#39;&lt;/p&gt;\n\t\t\t&lt;p&gt;Required Permission &#39;BAN:ADMIN [READ]&#39; is going to be &lt;strong&gt;DEPRECATED&lt;/strong&gt; for security purpose.\n\t\t\tIt is going to be deprecated on &lt;strong&gt;31 JANUARY 2019&lt;/strong&gt;, please use permission &#39;ADMIN:BAN [READ]&#39; instead.&lt;/p&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1forgotPassword/post/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:PASSWORD:USER [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1forgotPassword/post/description",
    "value": "Required permission &#39;ADMIN:NAMESPACE:{namespace}:PASSWORD:USER [UPDATE]&#39; or valid basic auth header&lt;p&gt;&lt;strong&gt;Special note for publisher-game scenario:&lt;/strong&gt; Game Client should provide game namespace path parameter and Publisher Client should provide publisher namespace path parameter. &lt;/p&gt;&lt;p&gt;The password reset code will be sent to the publisher account&#39;s email address. &lt;/p&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1byPlatformUserID/get/security",
    "value": [
      {
        "HasPermission": [
          "NAMESPACE:{namespace}:USER [READ]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1byPlatformUserID/get/description",
    "value": "Required permission &#39;NAMESPACE:{namespace}:USER [READ]&#39;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v2~1public~1namespaces~1{namespace}~1users~1{userId}~1password/put/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1agerestrictions/patch/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:AGERESTRICTION [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1agerestrictions/patch/description",
    "value": "Required permission &#39;ADMIN:NAMESPACE:{namespace}:AGERESTRICTION [UPDATE]&#39; &lt;br&gt; action code: 10122"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1agerestrictions/get/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:AGERESTRICTION [READ]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1agerestrictions/get/description",
    "value": "Required permission &#39;ADMIN:NAMESPACE:{namespace}:AGERESTRICTION [READ]&#39;&lt;br&gt;action code: 10138"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1{userId}~1platforms/get/security",
    "value": [
      {
        "HasPermission": [
          "NAMESPACE:{namespace}:USER:{userId} [READ]",
          "ADMIN:NAMESPACE:{namespace}:JUSTICE:USER:{userId} [READ]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1{userId}~1platforms/get/description",
    "value": "\n&lt;p&gt;Required permission &#39;NAMESPACE:{namespace}:USER:{userId} [READ]&#39;.&lt;/p&gt;\n&lt;h2&gt;Justice Platform Account&lt;/h2&gt;\n&lt;p&gt;The permission \u2019ADMIN:NAMESPACE:{namespace}:JUSTICE:USER:{userId}\u2019 [READ] is required in order to read the UserID who linked with the user.&lt;/p&gt;\n"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1{userId}~1password/put/security",
    "value": [
      {
        "HasPermission": [
          "NAMESPACE:{namespace}:PASSWORD:USER:{userId} [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1{userId}~1password/put/description",
    "value": "&lt;h2&gt;The endpoint is going to be deprecated. Admin user please use this instead: iam/v2/admin/namespaces/{namespace}/users/{userId}/password&lt;/h2&gt;\n+\t\t\t\t&lt;p&gt;Required permission &#39;NAMESPACE:{namespace}:PASSWORD:USER:{userId} [UPDATE]&#39;&lt;p&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1roles~1{roleId}~1managers/post/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:ROLE [UPDATE]",
          "ROLE:ADMIN [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1roles~1{roleId}~1managers/post/description",
    "value": "&lt;p&gt;Required permission &#39;ROLE:ADMIN [UPDATE]&#39; or &#39;ADMIN:ROLE [UPDATE]&#39;&lt;/p&gt;\n\t\t\t&lt;p&gt;Required Permission &#39;ROLE:ADMIN [UPDATE]&#39; is going to be &lt;strong&gt;DEPRECATED&lt;/strong&gt; for security purpose.\n\t\t\tIt is going to be deprecated on &lt;strong&gt;31 JANUARY 2019&lt;/strong&gt;, please use permission &#39;ADMIN:ROLE [UPDATE]&#39; instead.&lt;/p&gt;\n\t\t\t&lt;p&gt;Role can only be assigned to other users by the role&#39;s manager.&lt;/p&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1roles~1{roleId}~1managers/delete/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:ROLE [UPDATE]",
          "ROLE:ADMIN [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1roles~1{roleId}~1managers/delete/description",
    "value": "&lt;p&gt;Required permission &#39;ROLE:ADMIN [UPDATE]&#39; or &#39;ADMIN:ROLE [UPDATE]&#39;&lt;/p&gt;\n\t\t\t&lt;p&gt;Required Permission &#39;ROLE:ADMIN [UPDATE]&#39; is going to be &lt;strong&gt;DEPRECATED&lt;/strong&gt; for security purpose.\n\t\t\tIt is going to be deprecated on &lt;strong&gt;31 JANUARY 2019&lt;/strong&gt;, please use permission &#39;ADMIN:ROLE [UPDATE]&#39; instead.&lt;/p&gt;\n\t\t\t&lt;p&gt;Role can only be assigned to other users by the role&#39;s manager.&lt;/p&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1roles~1{roleId}~1managers/get/security",
    "value": [
      {
        "HasPermission": [
          "ROLE [READ]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1roles~1{roleId}~1managers/get/description",
    "value": "&lt;p&gt;Required permission &#39;ROLE [READ]&#39;&lt;/p&gt;\n\t\t\t&lt;p&gt;Role can only be assigned to other users by the role&#39;s manager.&lt;/p&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v2~1public~1namespaces~1{namespace}~1users~1{userId}~1platforms~1justice/get/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v2~1public~1namespaces~1{namespace}~1users~1{userId}~1bans/get/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v4~1admin~1namespaces~1{namespace}~1users~1{userId}/put/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:USER:{userId} [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v4~1admin~1namespaces~1{namespace}~1users~1{userId}/put/description",
    "value": "&lt;p&gt;This endpoint requires ADMIN:NAMESPACE:{namespace}:USER:{userId} [UPDATE] permission&lt;/p&gt;\n&lt;br&gt;&lt;p&gt;This Endpoint support update user based on given data. &lt;b&gt;Single request can update single field or multi fields.&lt;/b&gt;&lt;/p&gt; \n&lt;p&gt;Supported field {country, displayName, languageTag, dateOfBirth}&lt;/p&gt;\n&lt;p&gt;Country use ISO3166-1 alpha-2 two letter, e.g. US.&lt;/p&gt;\n&lt;p&gt;Date of Birth format : YYYY-MM-DD, e.g. 2019-04-29.&lt;/p&gt;\n&lt;br&gt;&lt;b&gt;Several case of updating email address&lt;/b&gt;\n&lt;p&gt;action code : 10103 &lt;/p&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1users~1{userId}~1platforms~1{platformId}~1link/post/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:USER:{userId} [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1users~1{userId}~1platforms~1{platformId}~1link/post/description",
    "value": "&lt;p&gt;Required permission &#39;ADMIN:NAMESPACE:{namespace}:USER:{userId} [UPDATE]&#39;.&lt;/p&gt;\n\t\t\t&lt;p&gt;&lt;br&gt;&lt;b&gt;Prerequisite:&lt;/b&gt; Platform client configuration need to be added to database for specific platformId. Namespace service URL need to be specified (refer to required environment variables).\n&lt;h2&gt;Supported platforms:&lt;/h2&gt;\n\t\t\t&lt;ul&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;steam&lt;/strong&gt;: The ticket\u2019s value is the authentication code returned by Steam.&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;steamopenid&lt;/strong&gt;: Steam&#39;s user authentication method using OpenID 2.0. The ticket&#39;s value is URL generated by Steam on web authentication&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;facebook&lt;/strong&gt;: The ticket\u2019s value is the authorization code returned by Facebook OAuth&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;google&lt;/strong&gt;: The ticket\u2019s value is the authorization code returned by Google OAuth&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;oculus&lt;/strong&gt;: The ticket\u2019s value is a string composed of Oculus&#39;s user ID and the nonce separated by a colon (:).&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;twitch&lt;/strong&gt;: The ticket\u2019s value is the authorization code returned by Twitch OAuth.&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;android&lt;/strong&gt;: The ticket&#39;s value is the Android\u2019s device ID&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;ios&lt;/strong&gt;: The ticket&#39;s value is the iOS\u2019s device ID.&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;apple&lt;/strong&gt;: The ticket\u2019s value is the authorization code returned by Apple OAuth.&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;device&lt;/strong&gt;: Every device that does\u2019nt run Android and iOS is categorized as a device platform. The ticket&#39;s value is the device\u2019s ID.&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;discord&lt;/strong&gt;: The ticket\u2019s value is the authorization code returned by Discord OAuth.&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;awscognito&lt;/strong&gt;: The ticket\u2019s value is the aws cognito access token (JWT).&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;epicgames&lt;/strong&gt;: The ticket\u2019s value is an access-token obtained from Epicgames EOS Account Service.&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;nintendo&lt;/strong&gt;: The ticket\u2019s value is the authorization code(id_token) returned by Nintendo OAuth.&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;stadia&lt;/strong&gt;: The ticket\u2019s value is a JWT Token, which can be obtained after calling the Stadia SDK&#39;s function.&lt;/li&gt;\n\t\t\t&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1{userId}~1publisher/get/security",
    "value": [
      {
        "HasPermission": [
          "NAMESPACE:{namespace}:PUBLISHER:USER:{userId} [READ]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1{userId}~1publisher/get/description",
    "value": "&lt;p&gt;Required permissions &#39;NAMESPACE:{namespace}:PUBLISHER:USER:{userId} [READ].&lt;/p&gt;\n\t&lt;p&gt;&lt;strong&gt;Restriction:&lt;/strong&gt;\n\t\tPath Parameter &lt;strong&gt;namespace&lt;/strong&gt; can be provided only with game namespace&lt;/p&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1admins/get/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:USER [READ]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v4~1admin~1roles~1{roleId}~1users/post/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:ROLE [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v4~1admin~1roles~1{roleId}~1users/delete/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:ROLE [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v4~1admin~1roles~1{roleId}~1users/get/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:ROLE [READ]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1users~1{userId}~1platforms/get/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:USER:{userId} [READ]",
          "ADMIN:NAMESPACE:{namespace}:JUSTICE:USER:{userId} [READ]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1users~1{userId}~1platforms/get/description",
    "value": "&lt;p&gt;Required permission &#39;ADMIN:NAMESPACE:{namespace}:USER:{userId} [READ]&#39;.&lt;/p&gt;\n\t\t\t&lt;h2&gt;Justice Platform Account&lt;/h2&gt;\n\t\t\t&lt;p&gt;The permission \u2019ADMIN:NAMESPACE:{namespace}:JUSTICE:USER:{userId}\u2019 [READ] \n\t\t\t\tis required in order to read the UserID who linked with the user.&lt;/p&gt;\n\t\t\t&lt;br&gt;Gets platform accounts that are already linked with user account\n        \t&lt;br&gt;action code : 10128"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1{userId}~1bans~1{banId}~1enable/put/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:BAN:USER:{userId} [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1{userId}~1bans~1{banId}~1enable/put/description",
    "value": "Required permission &#39;ADMIN:NAMESPACE:{namespace}:BAN:USER:{userId} [UPDATE]&#39;."
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1clients/post/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:CLIENT [CREATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1clients/post/description",
    "value": "Add a new OAuth 2.0 client. Protected by the permission: ADMIN:NAMESPACE:{namespace}:CLIENT [CREATE]&lt;br&gt;\n\t\tA new client automatically granted with these scopes: commerce, account, analytics, publishing, social.&lt;br&gt;\n\t\taction code: 10301&lt;br&gt;\n\t\t&lt;p&gt;&lt;strong&gt;Fields Description:&lt;/strong&gt;\n\t\t&lt;ul&gt;\n\t\t&lt;li&gt;&lt;strong&gt;clientId&lt;/strong&gt; : The client ID. e.g f815e5c44f364993961be3b3f26a7bf4&lt;/li&gt;\n\t\t&lt;li&gt;&lt;strong&gt;clientName&lt;/strong&gt; : The client name. e.g E-commerce&lt;/li&gt;\n\t\t&lt;li&gt;&lt;strong&gt;secret&lt;/strong&gt; : The client&#39;s secret. It&#39;s empty if the client&#39;s type is a public client. Otherwise, the client secret is required&lt;/li&gt;\n\t\t&lt;li&gt;&lt;strong&gt;namespace&lt;/strong&gt; : The namespace where the client lives. e.g sample-game&lt;/li&gt;\n\t\t&lt;li&gt;&lt;strong&gt;redirectUri&lt;/strong&gt; : Contains the redirect URI used in OAuth callback. e.g https://example.net/platform&lt;/li&gt;\n\t\t&lt;li&gt;&lt;strong&gt;oauthClientType&lt;/strong&gt; : The OAuth 2.0 client type. The client type determines whether the authorization needs Proof Of Key Exchange or not. \n\t\t\t\t\tA public client type doesn&#39;t have a client secret and should use PKCE flow. \n\t\t\t\t\tA confidential client type has a client secret and don&#39;t use PKCE flow\n\t\t\t&lt;ul&gt;Supported oAuthClientType :\n\t\t\t\t&lt;li&gt;&lt;strong&gt;Public&lt;/strong&gt;&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;Confidential&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;\n\t\t&lt;li&gt;&lt;strong&gt;audiences&lt;/strong&gt; : List of target client IDs who is intended to receive the token. e.g [&#34;eaaa65618fe24293b00a61454182b435&#34;, &#34;40073ee9bc3446d3a051a71b48509a5d&#34;]&lt;/li&gt;\n\t\t&lt;li&gt;&lt;strong&gt;baseUri&lt;/strong&gt; : A base URI of the application. It is used for making sure the token is intended to be used by the client. e.g https://example.net/platform&lt;/li&gt;\n\t\t&lt;li&gt;&lt;strong&gt;clientPermissions&lt;/strong&gt; : Contains the client&#39;s permissions&lt;/li&gt;\n\t\t&lt;/ul&gt;\n\t\t&lt;/p&gt;\n\t\t"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1clients/get/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:CLIENT [READ]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1clients/get/description",
    "value": "&lt;p&gt;Required permission &#39;ADMIN:NAMESPACE:{namespace}:CLIENT [READ]&#39;&lt;/p&gt;\n&lt;p&gt;action code: 10308&lt;/p&gt;\n"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1{userId}~1platforms~1justice~1{targetNamespace}/post/security",
    "value": [
      {
        "HasPermission": [
          "NAMESPACE:{namespace}:JUSTICE:USER:{userId} [UPDATE]",
          "ADMIN:NAMESPACE:{namespace}:JUSTICE:USER:{userId} [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1{userId}~1platforms~1justice~1{targetNamespace}/post/description",
    "value": "&lt;p&gt;This endpoint requires the client access token as the bearer token. Required permission &#39;ADMIN:NAMESPACE:{namespace}:JUSTICE:USER:{userId} [UPDATE]&#39;&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;It is going to be removed on November 26th, 2018&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;The endpoint returns user Justice platform account linked with the given user. If the user Justice platform account doesn&#39;t exist in the designated namespace, the endpoint is going to\u00a0&lt;strong&gt;create and return the new Justice platform account.&lt;/strong&gt;\nThe newly user Justice platform account is going to be forced to perform token grant through the given user and can&#39;t perform password update&lt;/p&gt;\n&lt;h3&gt;Read Justice Platform Account UserID&lt;/h3&gt;\n&lt;p&gt;In order to read the Justice platform account UserID, it is required to have the permission: &lt;strong&gt;NAMESPACE:{namespace}:JUSTICE:USER:{userId} [READ]&lt;/strong&gt;, otherwise the UserID is going to be censored and replaced with \u201cRedacted\u201d text.&lt;/p&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1{userId}~1platforms~1justice~1{targetNamespace}/get/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:JUSTICE:USER:{userId} [READ]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1{userId}~1platforms~1justice~1{targetNamespace}/get/description",
    "value": "&lt;p&gt;This endpoint requires the client access token as the bearer token. Required permission &#39;ADMIN:NAMESPACE:{namespace}:JUSTICE:USER:{userId} [READ]&#39;&lt;/p&gt;\n\t\t\t&lt;p&gt;This endpoint will support publisher access to game and game access to publisher&lt;/p&gt;\n\t\t\t&lt;p&gt;If targetNamespace filled with publisher namespace then this endpoint will return its game user id and game namespace&lt;/p&gt;\n\t\t\t&lt;p&gt;If targetNamespace filled with game namespace then this endpoint will return its publisher user id and publisher namespace&lt;/p&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1users~1{userId}~1headless~1code~1verify/post/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:USER:{userId} [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1users~1{userId}~1headless~1code~1verify/post/description",
    "value": "Required permission &#39;ADMIN:NAMESPACE:{namespace}:USER:{userId} [UPDATE]&#39;\n        \t&lt;p&gt;The endpoint upgrades a headless account by linking the headless account with the email address and the password.\n\t\t\t\tBy upgrading the headless account into a full account, the user could use the email address and password for using Justice IAM. &lt;/p&gt;\n        \t&lt;p&gt;The endpoint is a shortcut for upgrading a headless account and verifying the email address in one call. \n\t\t\t\tIn order to get a verification code for the endpoint, please check the send verification code endpoint. &lt;/p&gt;\n        \t&lt;p&gt;This endpoint also have an ability to update user data (if the user data field is specified) right after the upgrade account process is done.&lt;br/&gt;\n\t\t\t\tSupported user data fields :\n\t\t\t\t&lt;ul&gt;\n\t\t\t\t\t&lt;li&gt;displayName&lt;/li&gt;\n\t\t\t\t\t&lt;li&gt;dateOfBirth : format YYYY-MM-DD, e.g. 2019-04-29&lt;/li&gt;\n\t\t\t\t\t&lt;li&gt;country : format ISO3166-1 alpha-2 two letter, e.g. US&lt;/li&gt;\n\t\t\t\t&lt;/ul&gt;\n\t\t\t&lt;br&gt;action code : 10124&lt;/p&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1oauth~1revoke/post/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1oauth~1revoke/post/description",
    "value": "&lt;p&gt;This endpoint revokes a token.&lt;/p&gt;\n\t\t\t\t\t &lt;p&gt;This endpoint requires authorized requests header with Basic Authentication from client that establish the token.&lt;/p&gt;&lt;br&gt;action code: 10706"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1clients~1{clientId}~1permissions/post/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:CLIENT [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1clients~1{clientId}~1permissions/post/description",
    "value": "&lt;p&gt;Required permission &#39;ADMIN:NAMESPACE:{namespace}:CLIENT&#39; [UPDATE]&#39;&lt;/p&gt;\n&lt;p&gt;action code: 10303&lt;/p&gt;\n"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1clients~1{clientId}~1permissions/put/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:CLIENT [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1clients~1{clientId}~1permissions/put/description",
    "value": "&lt;p&gt;Required permission &#39;ADMIN:NAMESPACE:{namespace}:CLIENT [UPDATE]&#39;&lt;/p&gt;\n&lt;p&gt;action code: 10307&lt;/p&gt;\n"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1public~1namespaces~1{namespace}~1platforms~1{platformId}~1users~1{platformUserId}/get/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1public~1namespaces~1{namespace}~1platforms~1{platformId}~1users~1{platformUserId}/get/description",
    "value": "Get User By Platform User ID\n\t\t\nThis endpoint return user information by given platform ID and platform user ID \n\n&lt;strong&gt;nintendo platform user ID&lt;/strong&gt;: NSA ID need to be appended with Environment ID using colon as separator. e.g kmzwa8awaa:dd1\n"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1public~1namespaces~1{namespace}~1users~1me~1platforms~1{platformId}~1web~1link~1establish/get/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1oauth~1revocationlist/get/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1oauth~1revocationlist/get/description",
    "value": "&lt;p&gt;This endpoint will return a list of revoked users and revoked tokens. List of revoked tokens in bloom filter format. This endpoint requires all requests to have Authorization header set with Basic access authentication constructed from client id and client secret.&lt;/p&gt;\n\t\t\t&lt;p&gt;The bloom filter uses MurmurHash3 algorithm for hashing the values&lt;/p&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1oauth~1verify/post/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1roles~1{roleId}~1permissions~1{resource}~1{action}/post/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:ROLE [UPDATE]",
          "ROLE:ADMIN [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1roles~1{roleId}~1permissions~1{resource}~1{action}/post/description",
    "value": "&lt;p&gt;Required permission &#39;ROLE:ADMIN [UPDATE]&#39; Or &#39;ADMIN:ROLE [UPDATE]&#39;&lt;/p&gt;\n\t\t\t&lt;p&gt;Required Permission &#39;ROLE:ADMIN [UPDATE]&#39; is going to be &lt;strong&gt;DEPRECATED&lt;/strong&gt; for security purpose.\n\t\t\tIt is going to be deprecated on &lt;strong&gt;31 JANUARY 2019&lt;/strong&gt;, please use permission &#39;ADMIN:ROLE [UPDATE]&#39; instead.&lt;/p&gt;\n\t\t\t&lt;p&gt;This endpoint will update existing permission (bitwise OR the action) if found one with same resource, otherwise it will append a new permission&lt;/p&gt;\n\t\t\t&lt;p&gt;Schedule contains cron string or date range (both are UTC, also in cron syntax) to indicate when a permission and action are in effect.&lt;/p&gt;\n\t\t\t&lt;p&gt;Both schedule types accepts quartz compatible cron syntax e.g. * * * * * * *.&lt;/p&gt;\n\t\t\t&lt;p&gt;In ranged schedule, first element will be start date, and second one will be end date&lt;/p&gt;\n\t\t\t&lt;p&gt;If schedule is set, the scheduled action must be valid too, that is between 1 to 15, inclusive&lt;/p&gt;\n\t\t\t&lt;p&gt;Syntax reference&lt;/p&gt;\n\t\t\t&lt;p&gt;Fields:&lt;/p&gt;\n\t\t\t&lt;ol&gt;\n\t\t\t&lt;li&gt;Seconds: 0-59 * / , -&lt;/li&gt;\n\t\t\t&lt;li&gt;Minutes: 0-59 * / , -&lt;/li&gt;\n\t\t\t&lt;li&gt;Hours: 0-23 * / , -&lt;/li&gt;\n\t\t\t&lt;li&gt;Day of month: 1-31 * / , - L W&lt;/li&gt;\n\t\t\t&lt;li&gt;Month: 1-12 JAN-DEC * / , -&lt;/li&gt;\n\t\t\t&lt;li&gt;Day of week: 0-6 SUN-SAT * / , - L #&lt;/li&gt;\n\t\t\t&lt;li&gt;Year: 1970-2099 * / , -&lt;/li&gt;\n\t\t\t&lt;/ol&gt;\n\t\t\t&lt;p&gt;Special characters:&lt;/p&gt;\n\t\t\t&lt;ol&gt;\n\t\t\t&lt;li&gt;*: all values in the fields, e.g. * in seconds fields indicates every second&lt;/li&gt;\n\t\t\t&lt;li&gt;/: increments of ranges, e.g. 3-59/15 in the minute field indicate the third minute of the hour and every 15 minutes thereafter&lt;/li&gt;\n\t\t\t&lt;li&gt;,: separate items of a list, e.g. MON,WED,FRI in day of week&lt;/li&gt;\n\t\t\t&lt;li&gt;-: range, e.g. 2010-2018 indicates every year between 2010 and 2018, inclusive&lt;/li&gt;\n\t\t\t&lt;li&gt;L: last, e.g. When used in the day-of-week field, it allows you to specify constructs such as &#34;the last Friday&#34; (5L) of a given month. In the day-of-month field, it specifies the last day of the month.&lt;/li&gt;\n\t\t\t&lt;li&gt;W: business day, e.g. if you were to specify 15W as the value for the day-of-month field, the meaning is: &#34;the nearest business day to the 15th of the month.&#34;&lt;/li&gt;\n\t\t\t&lt;li&gt;#: must be followed by a number between one and five. It allows you to specify constructs such as &#34;the second Friday&#34; of a given month.&lt;/li&gt;\n\t\t\t&lt;/ol&gt;\n\t\t\t"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1roles~1{roleId}~1permissions~1{resource}~1{action}/delete/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:ROLE [UPDATE]",
          "ROLE:ADMIN [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1roles~1{roleId}~1permissions~1{resource}~1{action}/delete/description",
    "value": "Required permission &#39;ROLE:ADMIN [UPDATE]&#39; or &#39;ADMIN:ROLE [UPDATE]&#39;\n\t\t\t&lt;p&gt;Required Permission &#39;ROLE:ADMIN [UPDATE]&#39; is going to be &lt;strong&gt;DEPRECATED&lt;/strong&gt; for security purpose.\n\t\t\tIt is going to be deprecated on &lt;strong&gt;31 JANUARY 2019&lt;/strong&gt;, please use permission &#39;ADMIN:ROLE [UPDATE]&#39; instead.&lt;/p&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1users~1{userId}~1permissions/post/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:PERMISSION:USER:{userId} [CREATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1users~1{userId}~1permissions/post/description",
    "value": "&lt;p&gt;Required permission &#39;ADMIN:NAMESPACE:{namespace}:PERMISSION:USER:{userId} [CREATE]&#39;&lt;/p&gt;\n\t\t\t&lt;p&gt;This endpoint will APPEND user&#39;s permissions with the ones defined in body&lt;/p&gt;\n\t\t\t&lt;p&gt;Schedule contains cron string or date range (both are UTC, also in cron syntax) to indicate when a permission and action are in effect.&lt;/p&gt;\n\t\t\t&lt;p&gt;Both schedule types accepts quartz compatible cron syntax e.g. * * * * * * *.&lt;/p&gt;\n\t\t\t&lt;p&gt;In ranged schedule, first element will be start date, and second one will be end date&lt;/p&gt;\n\t\t\t&lt;p&gt;If schedule is set, the scheduled action must be valid too, that is between 1 to 15, inclusive&lt;/p&gt;\n\t\t\t&lt;p&gt;Syntax reference&lt;/p&gt;\n\t\t\t&lt;p&gt;Fields:&lt;/p&gt;\n\t\t\t&lt;ol&gt;\n\t\t\t&lt;li&gt;Seconds: 0-59 * / , -&lt;/li&gt;\n\t\t\t&lt;li&gt;Minutes: 0-59 * / , -&lt;/li&gt;\n\t\t\t&lt;li&gt;Hours: 0-23 * / , -&lt;/li&gt;\n\t\t\t&lt;li&gt;Day of month: 1-31 * / , - L W&lt;/li&gt;\n\t\t\t&lt;li&gt;Month: 1-12 JAN-DEC * / , -&lt;/li&gt;\n\t\t\t&lt;li&gt;Day of week: 0-6 SUN-SAT * / , - L #&lt;/li&gt;\n\t\t\t&lt;li&gt;Year: 1970-2099 * / , -&lt;/li&gt;\n\t\t\t&lt;/ol&gt;\n\t\t\t&lt;p&gt;Special characters:&lt;/p&gt;\n\t\t\t&lt;ol&gt;\n\t\t\t&lt;li&gt;*: all values in the fields, e.g. * in seconds fields indicates every second&lt;/li&gt;\n\t\t\t&lt;li&gt;/: increments of ranges, e.g. 3-59/15 in the minute field indicate the third minute of the hour and every 15 minutes thereafter&lt;/li&gt;\n\t\t\t&lt;li&gt;,: separate items of a list, e.g. MON,WED,FRI in day of week&lt;/li&gt;\n\t\t\t&lt;li&gt;-: range, e.g. 2010-2018 indicates every year between 2010 and 2018, inclusive&lt;/li&gt;\n\t\t\t&lt;li&gt;L: last, e.g. When used in the day-of-week field, it allows you to specify constructs such as &#34;the last Friday&#34; (5L) of a given month. In the day-of-month field, it specifies the last day of the month.&lt;/li&gt;\n\t\t\t&lt;li&gt;W: business day, e.g. if you were to specify 15W as the value for the day-of-month field, the meaning is: &#34;the nearest business day to the 15th of the month.&#34;&lt;/li&gt;\n\t\t\t&lt;li&gt;#: must be followed by a number between one and five. It allows you to specify constructs such as &#34;the second Friday&#34; of a given month.&lt;/li&gt;\n\t\t\t&lt;/ol&gt;\n\t\t\t"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1users~1{userId}~1permissions/delete/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:PERMISSION:USER:{userId} [DELETE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1users~1{userId}~1permissions/delete/description",
    "value": "Required permission &#39;ADMIN:NAMESPACE:{namespace}:PERMISSION:USER:{userId} [DELETE]&#39;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1users~1{userId}~1permissions/put/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:PERMISSION:USER:{userId} [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1users~1{userId}~1permissions/put/description",
    "value": "&lt;p&gt;Required permission &#39;ADMIN:NAMESPACE:{namespace}:PERMISSION:USER:{userId} [UPDATE]&#39;&lt;/p&gt;\n\t\t\t&lt;p&gt;This endpoint will REPLACE user&#39;s permissions with the ones defined in body&lt;/p&gt;\n\t\t\t&lt;p&gt;Schedule contains cron string or date range (both are UTC, also in cron syntax) to indicate when a permission and action are in effect.&lt;/p&gt;\n\t\t\t&lt;p&gt;Both schedule types accepts quartz compatible cron syntax e.g. * * * * * * *.&lt;/p&gt;\n\t\t\t&lt;p&gt;In ranged schedule, first element will be start date, and second one will be end date&lt;/p&gt;\n\t\t\t&lt;p&gt;If schedule is set, the scheduled action must be valid too, that is between 1 to 15, inclusive&lt;/p&gt;\n\t\t\t&lt;p&gt;Syntax reference&lt;/p&gt;\n\t\t\t&lt;p&gt;Fields:&lt;/p&gt;\n\t\t\t&lt;ol&gt;\n\t\t\t&lt;li&gt;Seconds: 0-59 * / , -&lt;/li&gt;\n\t\t\t&lt;li&gt;Minutes: 0-59 * / , -&lt;/li&gt;\n\t\t\t&lt;li&gt;Hours: 0-23 * / , -&lt;/li&gt;\n\t\t\t&lt;li&gt;Day of month: 1-31 * / , - L W&lt;/li&gt;\n\t\t\t&lt;li&gt;Month: 1-12 JAN-DEC * / , -&lt;/li&gt;\n\t\t\t&lt;li&gt;Day of week: 0-6 SUN-SAT * / , - L #&lt;/li&gt;\n\t\t\t&lt;li&gt;Year: 1970-2099 * / , -&lt;/li&gt;\n\t\t\t&lt;/ol&gt;\n\t\t\t&lt;p&gt;Special characters:&lt;/p&gt;\n\t\t\t&lt;ol&gt;\n\t\t\t&lt;li&gt;*: all values in the fields, e.g. * in seconds fields indicates every second&lt;/li&gt;\n\t\t\t&lt;li&gt;/: increments of ranges, e.g. 3-59/15 in the minute field indicate the third minute of the hour and every 15 minutes thereafter&lt;/li&gt;\n\t\t\t&lt;li&gt;,: separate items of a list, e.g. MON,WED,FRI in day of week&lt;/li&gt;\n\t\t\t&lt;li&gt;-: range, e.g. 2010-2018 indicates every year between 2010 and 2018, inclusive&lt;/li&gt;\n\t\t\t&lt;li&gt;L: last, e.g. When used in the day-of-week field, it allows you to specify constructs such as &#34;the last Friday&#34; (5L) of a given month. In the day-of-month field, it specifies the last day of the month.&lt;/li&gt;\n\t\t\t&lt;li&gt;W: business day, e.g. if you were to specify 15W as the value for the day-of-month field, the meaning is: &#34;the nearest business day to the 15th of the month.&#34;&lt;/li&gt;\n\t\t\t&lt;li&gt;#: must be followed by a number between one and five. It allows you to specify constructs such as &#34;the second Friday&#34; of a given month.&lt;/li&gt;\n\t\t\t&lt;/ol&gt;\n\t\t\t"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1bans~1reasons/get/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:BAN [READ]",
          "BAN:ADMIN [READ]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1bans~1reasons/get/description",
    "value": "&lt;p&gt;Required permission &#39;BAN:ADMIN [READ]&#39; or &#39;ADMIN:BAN [READ]&#39;&lt;/p&gt;\n\t\t\t&lt;p&gt;Required Permission &#39;BAN:ADMIN [READ]&#39; is going to be &lt;strong&gt;DEPRECATED&lt;/strong&gt; for security purpose.\n\t\t\tIt is going to be deprecated on &lt;strong&gt;31 JANUARY 2019&lt;/strong&gt;, please use permission &#39;ADMIN:BAN [READ]&#39; instead.&lt;/p&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1clients~1{clientId}~1secret/put/security",
    "value": [
      {
        "HasPermission": [
          "CLIENT:ADMIN [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1clients~1{clientId}~1secret/put/description",
    "value": "Required permission &#39;CLIENT:ADMIN [UPDATE]&#39;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v2~1admin~1namespaces~1{namespace}~1agerestrictions/patch/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:AGERESTRICTION [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v2~1admin~1namespaces~1{namespace}~1agerestrictions/patch/description",
    "value": "Required permission &#39;ADMIN:NAMESPACE:{namespace}:AGERESTRICTION [UPDATE]&#39;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v2~1admin~1namespaces~1{namespace}~1agerestrictions/get/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:AGERESTRICTION [READ]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v2~1admin~1namespaces~1{namespace}~1agerestrictions/get/description",
    "value": "Required permission &#39;ADMIN:NAMESPACE:{namespace}:AGERESTRICTION [READ]&#39;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v2~1admin~1namespaces~1{namespace}~1users/get/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:USER [READ]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v2~1admin~1namespaces~1{namespace}~1users/get/description",
    "value": "Required permission &#39;ADMIN:NAMESPACE:{namespace}:USER [READ]&#39;."
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1roles~1{roleId}~1admin/post/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:ROLE [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1roles~1{roleId}~1admin/post/description",
    "value": "&lt;p&gt;Required permission &#39;ADMIN:ROLE [UPDATE]&#39;&lt;/p&gt;\n\t\t\t&lt;p&gt;Admin roles has its members listed in the role.&lt;/p&gt;\n\t\t\t&lt;p&gt;Role can be set as admin role only when it has at least 1 manager.&lt;/p&gt;\n\t\t\t&lt;br&gt;action code: 10412"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1roles~1{roleId}~1admin/delete/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:ROLE [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1roles~1{roleId}~1admin/delete/description",
    "value": "&lt;p&gt;Required permission &#39;ADMIN:ROLE [UPDATE]&#39;&lt;/p&gt; code: 10413"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1roles~1{roleId}~1admin/get/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:ROLE [READ]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1roles~1{roleId}~1admin/get/description",
    "value": "&lt;p&gt;Required permission &#39;ADMIN:ROLE [READ]&#39;&lt;/p&gt;\n\t\t\t&lt;p&gt;Admin roles has its members listed in the role.&lt;/p&gt;\n\t\t\t&lt;p&gt;action code: 10420&lt;/p&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1public~1namespaces~1{namespace}~1platforms~1{platformId}~1users/post/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1public~1namespaces~1{namespace}~1platforms~1{platformId}~1users/post/description",
    "value": "List User ID By Platform User ID\nThis endpoint intended to list game user ID from the given namespace\nThis endpoint return list of user ID by given platform ID and list of platform user ID \n\n&lt;strong&gt;nintendo platform user ID&lt;/strong&gt;: NSA ID need to be appended with Environment ID using colon as separator. e.g kmzwa8awaa:dd1\n"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1public~1namespaces~1{namespace}~1users~1{userId}~1bans/get/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1public~1namespaces~1{namespace}~1users~1{userId}~1bans/get/description",
    "value": "Required valid user authorization.\n\t\t&lt;p&gt;Notes:&lt;/p&gt;\n\t\t&lt;ul&gt;\n\t\t\t&lt;li&gt;This endpoint retrieve the first page of the data if after and before parameters is empty&lt;/li&gt;\n\t\t\t&lt;li&gt;&lt;strong&gt;The pagination is not working yet&lt;/strong&gt;&lt;/li&gt;\n\t\t&lt;/ul&gt;\n\t\t"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1users~1{userId}~1bans/post/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:BAN:USER:{userId} [CREATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1users~1{userId}~1bans/post/description",
    "value": "&lt;p&gt;Required permission &#39;ADMIN:NAMESPACE:{namespace}:BAN:USER:{userId} [CREATE]&#39;.&lt;/p&gt;\n&lt;p&gt;Bans a user with specific type of ban. Ban types and reason can be queried. &lt;/p&gt;\n&lt;p&gt;action code : 10141 &lt;/p&gt;\n"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1users~1{userId}~1bans/get/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:BAN:USER:{userId} [READ]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1users~1{userId}~1bans/get/description",
    "value": "&lt;p&gt;Required permission &#39;ADMIN:NAMESPACE:{namespace}:BAN:USER:{userId} [READ]&#39;&lt;/p&gt;\n&lt;p&gt;This endpoint retrieve the first page of the data if after and before parameters is empty&lt;/p&gt;\n&lt;p&gt;action code : 10126&lt;/p&gt;\n"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1roles~1{roleId}~1permissions/post/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:ROLE [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1roles~1{roleId}~1permissions/post/description",
    "value": "&lt;p&gt;Required permission &#39;ADMIN:ROLE [UPDATE]&#39;&lt;/p&gt;\n\t\t\t&lt;p&gt;This endpoint will ATTACH permission(s) into the role&lt;/p&gt;\n\t\t\t&lt;br&gt;action code: 10404&lt;br&gt;\n\t\t\t&lt;p&gt;Schedule contains cron string or date range (both are UTC, also in cron syntax) to indicate when a permission and action are in effect.&lt;/p&gt;\n\t\t\t&lt;p&gt;Both schedule types accepts quartz compatible cron syntax e.g. * * * * * * *.&lt;/p&gt;\n\t\t\t&lt;p&gt;In ranged schedule, first element will be start date, and second one will be end date&lt;/p&gt;\n\t\t\t&lt;p&gt;If schedule is set, the scheduled action must be valid too, that is between 1 to 15, inclusive&lt;/p&gt;\n\t\t\t&lt;p&gt;Syntax reference&lt;/p&gt;\n\t\t\t&lt;p&gt;Fields:&lt;/p&gt;\n\t\t\t&lt;ol&gt;\n\t\t\t&lt;li&gt;Seconds: 0-59 * / , -&lt;/li&gt;\n\t\t\t&lt;li&gt;Minutes: 0-59 * / , -&lt;/li&gt;\n\t\t\t&lt;li&gt;Hours: 0-23 * / , -&lt;/li&gt;\n\t\t\t&lt;li&gt;Day of month: 1-31 * / , - L W&lt;/li&gt;\n\t\t\t&lt;li&gt;Month: 1-12 JAN-DEC * / , -&lt;/li&gt;\n\t\t\t&lt;li&gt;Day of week: 0-6 SUN-SAT * / , - L #&lt;/li&gt;\n\t\t\t&lt;li&gt;Year: 1970-2099 * / , -&lt;/li&gt;\n\t\t\t&lt;/ol&gt;\n\t\t\t&lt;p&gt;Special characters:&lt;/p&gt;\n\t\t\t&lt;ol&gt;\n\t\t\t&lt;li&gt;*: all values in the fields, e.g. * in seconds fields indicates every second&lt;/li&gt;\n\t\t\t&lt;li&gt;/: increments of ranges, e.g. 3-59/15 in the minute field indicate the third minute of the hour and every 15 minutes thereafter&lt;/li&gt;\n\t\t\t&lt;li&gt;,: separate items of a list, e.g. MON,WED,FRI in day of week&lt;/li&gt;\n\t\t\t&lt;li&gt;-: range, e.g. 2010-2018 indicates every year between 2010 and 2018, inclusive&lt;/li&gt;\n\t\t\t&lt;li&gt;L: last, e.g. When used in the day-of-week field, it allows you to specify constructs such as &#34;the last Friday&#34; (5L) of a given month. In the day-of-month field, it specifies the last day of the month.&lt;/li&gt;\n\t\t\t&lt;li&gt;W: business day, e.g. if you were to specify 15W as the value for the day-of-month field, the meaning is: &#34;the nearest business day to the 15th of the month.&#34;&lt;/li&gt;\n\t\t\t&lt;li&gt;#: must be followed by a number between one and five. It allows you to specify constructs such as &#34;the second Friday&#34; of a given month.&lt;/li&gt;\n\t\t\t&lt;/ol&gt;\n\t\t\t"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1roles~1{roleId}~1permissions/delete/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:ROLE [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1roles~1{roleId}~1permissions/delete/description",
    "value": "Required permission &#39;ADMIN:ROLE [UPDATE]&#39;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1roles~1{roleId}~1permissions/put/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:ROLE [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1roles~1{roleId}~1permissions/put/description",
    "value": "&lt;p&gt;Required permission &#39;ADMIN:ROLE [UPDATE]&#39;&lt;/p&gt;\n\t\t\t&lt;p&gt;This endpoint will REPLACE role&#39;s permissions with the ones defined in body&lt;/p&gt;\n\t\t\t&lt;br&gt;action code: 10405&lt;br&gt;\n\t\t\t&lt;p&gt;Schedule contains cron string or date range (both are UTC, also in cron syntax) to indicate when a permission and action are in effect.&lt;/p&gt;\n\t\t\t&lt;p&gt;Both schedule types accepts quartz compatible cron syntax e.g. * * * * * * *.&lt;/p&gt;\n\t\t\t&lt;p&gt;In ranged schedule, first element will be start date, and second one will be end date&lt;/p&gt;\n\t\t\t&lt;p&gt;If schedule is set, the scheduled action must be valid too, that is between 1 to 15, inclusive&lt;/p&gt;\n\t\t\t&lt;p&gt;Syntax reference&lt;/p&gt;\n\t\t\t&lt;p&gt;Fields:&lt;/p&gt;\n\t\t\t&lt;ol&gt;\n\t\t\t&lt;li&gt;Seconds: 0-59 * / , -&lt;/li&gt;\n\t\t\t&lt;li&gt;Minutes: 0-59 * / , -&lt;/li&gt;\n\t\t\t&lt;li&gt;Hours: 0-23 * / , -&lt;/li&gt;\n\t\t\t&lt;li&gt;Day of month: 1-31 * / , - L W&lt;/li&gt;\n\t\t\t&lt;li&gt;Month: 1-12 JAN-DEC * / , -&lt;/li&gt;\n\t\t\t&lt;li&gt;Day of week: 0-6 SUN-SAT * / , - L #&lt;/li&gt;\n\t\t\t&lt;li&gt;Year: 1970-2099 * / , -&lt;/li&gt;\n\t\t\t&lt;/ol&gt;\n\t\t\t&lt;p&gt;Special characters:&lt;/p&gt;\n\t\t\t&lt;ol&gt;\n\t\t\t&lt;li&gt;*: all values in the fields, e.g. * in seconds fields indicates every second&lt;/li&gt;\n\t\t\t&lt;li&gt;/: increments of ranges, e.g. 3-59/15 in the minute field indicate the third minute of the hour and every 15 minutes thereafter&lt;/li&gt;\n\t\t\t&lt;li&gt;,: separate items of a list, e.g. MON,WED,FRI in day of week&lt;/li&gt;\n\t\t\t&lt;li&gt;-: range, e.g. 2010-2018 indicates every year between 2010 and 2018, inclusive&lt;/li&gt;\n\t\t\t&lt;li&gt;L: last, e.g. When used in the day-of-week field, it allows you to specify constructs such as &#34;the last Friday&#34; (5L) of a given month. In the day-of-month field, it specifies the last day of the month.&lt;/li&gt;\n\t\t\t&lt;li&gt;W: business day, e.g. if you were to specify 15W as the value for the day-of-month field, the meaning is: &#34;the nearest business day to the 15th of the month.&#34;&lt;/li&gt;\n\t\t\t&lt;li&gt;#: must be followed by a number between one and five. It allows you to specify constructs such as &#34;the second Friday&#34; of a given month.&lt;/li&gt;\n\t\t\t&lt;/ol&gt;\n\t\t\t"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1{userId}~1bans/get/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:BAN:USER:{userId} [READ]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1{userId}~1bans/get/description",
    "value": "Required permissions &#39;ADMIN:NAMESPACE:{namespace}:BAN:USER:{userId} [READ]&#39;."
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1oauth~1admin~1namespaces~1{namespace}~1users~1{userId}~1platforms~1{platformId}~1platformToken/get/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:USER:{userId} [READ]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1oauth~1admin~1namespaces~1{namespace}~1users~1{userId}~1platforms~1{platformId}~1platformToken/get/description",
    "value": "Admin Retrieve User Third Party Platform Token&lt;br/&gt;\n&lt;p&gt;\nThis endpoint used for retrieving third party platform token for user that login using third party.\nPassing platform group name or it&#39;s member will return same access token that can be used across the platform members. \n&lt;/p&gt;\n         &lt;p&gt;Notes:&lt;/p&gt;\n       &lt;ul&gt;\n                 &lt;li&gt;Required permission: ADMIN:NAMESPACE:{namespace}:USER:{userId} [READ]&lt;/li&gt;\n             &lt;/ul&gt;\n&lt;p&gt;The third party platform and platform group covered for this is:&lt;/p&gt;\n&lt;ul&gt;\t\t\t\t\n\t&lt;li&gt;(psn) ps4web&lt;/li&gt;\n\t&lt;li&gt;(psn) ps4&lt;/li&gt;\n\t&lt;li&gt;(psn) ps5&lt;/li&gt;\n\t&lt;li&gt;xbox live&lt;/li&gt;\n\t&lt;li&gt;steam&lt;/li&gt;\n&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1public~1namespaces~1{namespace}~1users~1forgot/post/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1public~1namespaces~1{namespace}~1users~1forgot/post/description",
    "value": "&lt;p&gt;&lt;strong&gt;Special note for publisher-game scenario:&lt;/strong&gt; \nGame Client should provide game namespace path parameter and Publisher \nClient should provide publisher namespace path parameter. &lt;/p&gt;\n&lt;p&gt;The password reset code will be sent to the publisher account&#39;s email address. &lt;/p&gt;\n&lt;p&gt;action code : 10104 &lt;/p&gt;\n"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1users~1{userId}~1platforms~1justice/get/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1users~1{userId}~1platforms~1justice/get/responses/400/description",
    "value": ""
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1clients~1{clientId}/get/security",
    "value": [
      {
        "HasPermission": [
          "CLIENT [READ]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1clients~1{clientId}/get/description",
    "value": "Required permission &#39;CLIENT [READ]&#39;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1clients~1{clientId}/delete/security",
    "value": [
      {
        "HasPermission": [
          "CLIENT:ADMIN [DELETE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1clients~1{clientId}/delete/description",
    "value": "&lt;h2&gt;The endpoint is going to be deprecated at &lt;strong&gt;16 August, 2018&lt;/strong&gt;. Please use this instead: namespaces/{namespace}/clients/{clientId}&lt;/h2&gt;\n&lt;p&gt;Required permission &#39;CLIENT:ADMIN [DELETE]&#39;&lt;/p&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1clients~1{clientId}/put/security",
    "value": [
      {
        "HasPermission": [
          "CLIENT:ADMIN [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1clients~1{clientId}/put/description",
    "value": "Required permission &#39;CLIENT:ADMIN [UPDATE]&#39;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v4~1public~1namespaces~1{namespace}~1users~1me~1email/put/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v4~1public~1namespaces~1{namespace}~1users~1me~1email/put/description",
    "value": "&lt;p&gt;The endpoint to update my email address. &lt;/p&gt;\n&lt;p&gt;It requires a verification code from &lt;pre&gt;/users/me/code/request&lt;/pre&gt; with &lt;b&gt;UpdateEmailAddress&lt;/b&gt; context.&lt;/p&gt;\n"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1resetPassword/post/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:PASSWORD:USER [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1resetPassword/post/responses/400/description",
    "value": ""
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1resetPassword/post/responses/404/description",
    "value": ""
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1resetPassword/post/responses/403/description",
    "value": ""
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1resetPassword/post/description",
    "value": "Required permission &#39;ADMIN:NAMESPACE:{namespace}:PASSWORD:USER [UPDATE]&#39; or valid basic auth header"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v2~1admin~1namespaces~1{namespace}~1users~1{userId}~1platforms~1{platformId}~1link/delete/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:USER:{userId} [DELETE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v2~1admin~1namespaces~1{namespace}~1users~1{userId}~1platforms~1{platformId}~1link/delete/description",
    "value": "&lt;p&gt;Required permission &#39;ADMIN:NAMESPACE:{namespace}:USER:{userId} [DELETE]&#39;.&lt;/p&gt;\n&lt;h2&gt;Supported platforms:&lt;/h2&gt;\n\t\t\t&lt;ul&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;steam&lt;/strong&gt;&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;steamopenid&lt;/strong&gt;&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;facebook&lt;/strong&gt;&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;google&lt;/strong&gt;&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;oculus&lt;/strong&gt;&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;twitch&lt;/strong&gt;&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;android&lt;/strong&gt;&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;ios&lt;/strong&gt;&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;device&lt;/strong&gt;&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;discord&lt;/strong&gt;&lt;/li&gt;\n\t\t\t&lt;/ul&gt;\n\t\t\t&lt;p&gt;Delete link of user&#39;s account with platform. &#39;justice&#39; platform might have multiple accounts from different namespaces linked. platform_namespace need to be specified when the platform ID is &#39;justice&#39;.\n\t\t\t&lt;br&gt;Delete link of justice platform will enable password token grant and password update. &lt;/p&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1platforms~1{platformId}~1sso/patch/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:PLATFORM:{platformId}:SSO [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1platforms~1{platformId}~1sso/patch/operationId",
    "value": "UpdateSSOPlatformCredential"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1platforms~1{platformId}~1sso/get/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:PLATFORM:{platformId}:SSO [READ]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1platforms~1{platformId}~1sso/get/operationId",
    "value": "RetrieveSSOLoginPlatformCredential"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1platforms~1{platformId}~1sso/post/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:PLATFORM:{platformId}:SSO [CREATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1platforms~1{platformId}~1sso/post/description",
    "value": "This is the API to Add SSO Platform Credential. It needs ADMIN:NAMESPACE:{namespace}:PLATFORM:{platformId}:SSO [CREATE] resource.&lt;h2&gt;Supported platforms:&lt;/h2&gt;&lt;ul&gt;\n\t\t\t&lt;li&gt;&lt;strong&gt;discourse&lt;/strong&gt;&lt;/li&gt;the ssoUrl of the discourse is the discourse forum url. example: https://forum.example.com\n\t\t\t&lt;li&gt;&lt;strong&gt;azure with SAML&lt;/strong&gt;&lt;/li&gt;&lt;b&gt;appId&lt;/b&gt; is an application identifier in IdP, in azure it&#39;s called EntityID\n\t\t\t&lt;b&gt;acsUrl&lt;/b&gt; is an endpoint on the service provider where the identity provider will redirect to with its authentication response. example: /iam/v3/sso/saml/azuresaml/authenticate \n\t\t\t&lt;b&gt;federationMetadataUrl&lt;/b&gt; is an endpoint on the Identity Provider(IdP) to get IdP federation metadata for service provider to build trust relationship\n\t\t\t&lt;/ul&gt;"
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1platforms~1{platformId}~1sso/post/operationId",
    "value": "AddSSOLoginPlatformCredential"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1platforms~1{platformId}~1sso/delete/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:PLATFORM:{platformId}:SSO [DELETE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1platforms~1{platformId}~1sso/delete/operationId",
    "value": "DeleteSSOLoginPlatformCredentialV3"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1bans~1users/get/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:BAN [READ]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1bans~1users/get/description",
    "value": "Required permission &#39;ADMIN:BAN [READ]&#39; &lt;br&gt;Ban type is the code\n\t\t\tavailable for ban assignment. It is applicable globally for any namespace.  &lt;br&gt;action code : 10201"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1users~1{userId}~1information/delete/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:INFORMATION:USER:{userId} [DELETE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1users~1{userId}~1information/delete/description",
    "value": "Required permissions &#39;ADMIN:NAMESPACE:{namespace}:INFORMATION:USER:{userId} [DELETE]&#39;."
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1{userId}~1disable/put/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:USERSTATUS:USER:{userId} [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1{userId}~1disable/put/description",
    "value": "&lt;h2&gt;The endpoint is going to be deprecated. Please use this instead: iam/v2/admin/namespaces/{namespace}/users/{userId}/disable&lt;/h2&gt;\n+\t\t\t\t&lt;p&gt;Required permissions &#39;ADMIN:NAMESPACE:{namespace}:USERSTATUS:USER:{userId} [UPDATE]&#39;&lt;p&gt;\n\t\t&lt;p&gt;For &lt;strong&gt;Deletion Account&lt;/strong&gt; purpose fill the reason with:&lt;/p&gt;\n\t\t&lt;ul&gt;\n\t\t&lt;li&gt;&lt;strong&gt;DeactivateAccount&lt;/strong&gt; : if your deletion request comes from user&lt;/li&gt;\n\t\t&lt;li&gt;&lt;strong&gt;AdminDeactivateAccount&lt;/strong&gt; : if your deletion request comes from admin&lt;/li&gt;\n\t\t&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1roles~1{roleId}~1permissions~1{resource}~1{action}/delete/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:ROLE [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1roles~1{roleId}~1permissions~1{resource}~1{action}/delete/description",
    "value": "Required permission &#39;ADMIN:ROLE [UPDATE]&#39; &lt;br&gt;action code: 10406&lt;br&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1oauth~1token/post/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1oauth~1token/post/description",
    "value": "&lt;p&gt;This endpoint requires all requests to have &lt;code&gt;Authorization&lt;/code&gt; header set with &lt;code&gt;Basic&lt;/code&gt; access authentication\n\t\t\tconstructed from client id and client secret.&lt;/p&gt;\n\t\t\t&lt;p&gt;This endpoint supports different &lt;strong&gt;grant types&lt;/strong&gt;:&lt;/p&gt;&lt;ol&gt;\n\t \t\t&lt;li&gt;Grant Type == &lt;code&gt;client_credentials&lt;/code&gt;:&lt;br /&gt;\n\t \t\t&amp;nbsp;&amp;nbsp;&amp;nbsp; This endpoint will check the client credentials provided through Authorization header.&lt;/li&gt;\n\t \t\t&lt;li&gt;Grant Type == &lt;code&gt;password&lt;/code&gt;:&lt;br /&gt;\n\t \t\t&amp;nbsp;&amp;nbsp;&amp;nbsp; The grant type to use for authenticating a user, whether it&#39;s by email / username and password combination\n\t\t\tor through platform.&lt;/li&gt;\n\t \t\t&lt;li&gt;Grant Type == &lt;code&gt;refresh_token&lt;/code&gt;:&lt;br /&gt;\n\t \t\t&amp;nbsp;&amp;nbsp;&amp;nbsp; Used to get a new access token for a valid refresh token.&lt;/li&gt;\n\t \t\t&lt;li&gt;Grant Type == &lt;code&gt;authorization_code&lt;code&gt;:&lt;br /&gt;\n\t \t\t&amp;nbsp;&amp;nbsp;&amp;nbsp; It generates the user token by given the authorization\n\t \t\tcode which generated in &#34;/authorize&#34; API response. It should also pass\n\t \t\tin the redirect_uri, which should be the same as generating the\n\t \t\tauthorization code request.&lt;/li&gt;&lt;/ol&gt;\n\t \t\t&lt;p&gt;For platform authentication, use grant type &lt;code&gt;password&lt;/code&gt;.\n\t \t\tThe &lt;code&gt;username&lt;/code&gt; field would be in form of\n\t \t\t&lt;code&gt;platform:&amp;lt;platform type&amp;gt;&lt;/code&gt;, for example\n\t \t\t&lt;code&gt;platform:steam&lt;/code&gt; for Steam. For the &lt;code&gt;password&lt;/code&gt;\n\t \t\tfield, set it to the authentication/authorization ticket or token obtainable through the\n\t \t\trespective platform SDK after authenticated the user to the platform. Supported platforms:&lt;/p&gt;&lt;ul&gt;\n\t\t\t&lt;li&gt;&lt;strong&gt;steam&lt;/strong&gt; - use &lt;code&gt;platform:steam&lt;/code&gt; as the username and use the authentication ticket obtained\n\t\t\tfrom Steam through the Steam SDK as the password.&lt;/li&gt;\n\t\t\t&lt;li&gt;&lt;strong&gt;ps4&lt;/strong&gt; - use &lt;code&gt;platform:ps4&lt;/code&gt; as the username and use the authorization code\n\t\t\tobtained from the PlayStation Network through a player PS4 unit as the password.&lt;/li&gt;\n\t\t\t&lt;li&gt;&lt;strong&gt;live&lt;/strong&gt; - use &lt;code&gt;platform:live&lt;/code&gt; as the username and use token obtained from \n\t\t\tXbox Secure Token Service (XSTS) as the password.&lt;/li&gt;\n\t\t\t&lt;li&gt;&lt;strong&gt;oculus&lt;/strong&gt; - use &lt;code&gt;platform:oculus&lt;/code&gt; as the username and use the &lt;code&gt;user_id:nonce&lt;/code&gt;\n\t\t\tas password obtained from Oculus through the Oculus SDK.&lt;/li&gt;&lt;/ul&gt;&lt;/p&gt;\n\t\t\t&lt;p&gt;The access token and refresh token are in form of JWT token.\n\t \t\tAn access token JWT contains data which structure is similar to the\n\t \t\tResponse Class below, but without OAuth-related data. To verify a token, use the public keys\n\t\t\tobtained from the &lt;code&gt;/jwks&lt;/code&gt; endpoint below.&lt;/p&gt;\n&lt;h2&gt;Access Token Content&lt;/h2&gt;\n&lt;p&gt;Following is the access token\u2019s content:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;\n\t&lt;p&gt;&lt;strong&gt;namespace&lt;/strong&gt;. It is the namespace the token was generated from.&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;\n\t&lt;p&gt;&lt;strong&gt;display_name&lt;/strong&gt;. The display name of the sub. It is empty if the token is generated from the client credential&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;\n\t&lt;p&gt;&lt;strong&gt;roles&lt;/strong&gt;. The sub\u2019s roles. It is empty if the token is generated from the client credential&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;\n\t&lt;p&gt;&lt;strong&gt;namespace_roles&lt;/strong&gt;. The sub\u2019s roles scoped to namespace. Improvement from roles, which make the role scoped to specific namespace instead of global to publisher namespace&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;\n\t&lt;p&gt;&lt;strong&gt;permissions&lt;/strong&gt;. The sub or aud\u2019 permissions&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;\n\t&lt;p&gt;&lt;strong&gt;bans&lt;/strong&gt;. The sub\u2019s list of bans. It is used by the IAM client for validating the token.&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;\n\t&lt;p&gt;&lt;strong&gt;jflgs&lt;/strong&gt;. It stands for Justice Flags. It is a special flag used for storing additional status information regarding the sub. It is implemented as a bit mask. Following explains what each bit represents:&lt;/p&gt;\n&lt;ul&gt;\n\t&lt;li&gt;&lt;p&gt;1: Email Address Verified&lt;/p&gt;&lt;/li&gt;\n\t&lt;li&gt;&lt;p&gt;2: Phone Number Verified&lt;/p&gt;&lt;/li&gt;\n\t&lt;li&gt;&lt;p&gt;4: Anonymous&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/li&gt;\n&lt;li&gt;\n\t&lt;p&gt;&lt;strong&gt;aud&lt;/strong&gt;. The aud is the client ID.&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;\n\t&lt;p&gt;&lt;strong&gt;iat&lt;/strong&gt;. The time the token issues at. It is in Epoch time format&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;\n\t&lt;p&gt;&lt;strong&gt;exp&lt;/strong&gt;. The time the token expires. It is in Epoch time format&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;\n\t&lt;p&gt;&lt;strong&gt;sub&lt;/strong&gt;. The UserID. The sub is omitted if the token is generated from client credential&lt;/p&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;h2&gt;Bans&lt;/h2&gt;\n&lt;p&gt;The JWT contains user&#39;s active bans with its expiry date. List of ban types can be obtained from /bans.&lt;/p&gt;\n&lt;h2&gt;Track Login History&lt;/h2&gt;\n&lt;p&gt;This endpoint will track login history to detect suspicious login activity, please provide &#34;device_id&#34; (alphanumeric) in request header parameter otherwise we will set to &#34;unknown&#34;.&lt;/p&gt;\n&lt;p&gt;Align with General Data Protection Regulation in Europe, user login history will be kept within 28 days by default&#34;&lt;/p&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1location~1country/get/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1location~1country/get/description",
    "value": "&lt;p&gt;This endpoint get country location based on the request.&lt;/p&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1users/get/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:USER [READ]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1users/get/description",
    "value": "&lt;p&gt;Required permission &#39;ADMIN:NAMESPACE:{namespace}:USER [READ]&#39;&lt;/p&gt;\n\t\t\t&lt;p&gt;This endpoint search user who owns the given email address&lt;/p&gt;\n\t\t\t&lt;br&gt;action code : 10132"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1clients~1{clientId}~1clientpermissions~1{resource}~1{action}/post/security",
    "value": [
      {
        "HasPermission": [
          "CLIENT:ADMIN [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1clients~1{clientId}~1clientpermissions~1{resource}~1{action}/post/description",
    "value": "Required permission &#39;CLIENT:ADMIN [UPDATE]&#39;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1clients~1{clientId}~1clientpermissions~1{resource}~1{action}/delete/security",
    "value": [
      {
        "HasPermission": [
          "CLIENT:ADMIN [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1clients~1{clientId}~1clientpermissions~1{resource}~1{action}/delete/description",
    "value": "Required permission &#39;CLIENT:ADMIN [UPDATE]&#39;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1public~1namespaces~1{namespace}~1users~1me~1platforms~1{platformId}~1web~1link/get/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1public~1roles~1{roleId}/get/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1public~1roles~1{roleId}/get/description",
    "value": " &lt;br&gt;This endpoint is used to get non-admin role based on specify roleId.  &lt;br&gt;action code : 10417"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v2~1public~1namespaces~1{namespace}~1users~1resetPassword/post/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1clients~1{clientId}/patch/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:CLIENT [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1clients~1{clientId}/patch/description",
    "value": "Updates an OAuth 2.0 client. Protected by the permission: ADMIN:NAMESPACE:{namespace}:CLIENT [UPDATE].\n\t\t\t\tSpecify only the fields you want to update in the request payload, e.g. {&#34;ClientName&#34;:&#34;E-commerce&#34;, &#34;BaseUri&#34;:&#34;https://example.net&#34;}\n\t\t&lt;br&gt; action code: 10302&lt;br&gt;\n\t\t&lt;p&gt;&lt;strong&gt;Fields Description:&lt;/strong&gt;\n\t\t&lt;ul&gt;\n\t\t&lt;li&gt;&lt;strong&gt;clientName&lt;/strong&gt; : The client name. It should not be empty if the field exists in the body. e.g E-commerce&lt;/li&gt;\n\t\t&lt;li&gt;&lt;strong&gt;namespace&lt;/strong&gt; : The namespace where the client lives. e.g sample-game&lt;/li&gt;\n\t\t&lt;li&gt;&lt;strong&gt;redirectUri&lt;/strong&gt; : Contains the redirect URI used in OAuth callback. It should not be empty if the field exists in the body.  e.g https://example.net/platform&lt;/li&gt;\n\t\t&lt;li&gt;&lt;strong&gt;audiences&lt;/strong&gt; : List of target client IDs who is intended to receive the token. e.g [&#34;eaaa65618fe24293b00a61454182b435&#34;, &#34;40073ee9bc3446d3a051a71b48509a5d&#34;]&lt;/li&gt;\n\t\t&lt;li&gt;&lt;strong&gt;baseUri&lt;/strong&gt; : A base URI of the application. It is used in the audience checking for making sure the token is used by the right resource server. Required if the application type is a server. e.g https://example.net/platform&lt;/li&gt;\n\t\t&lt;li&gt;&lt;strong&gt;clientPermissions&lt;/strong&gt; : Contains the client&#39;s permissions&lt;/li&gt;\n\t\t&lt;/ul&gt;\n\t\t&lt;/p&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1clients~1{clientId}/get/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:CLIENT [READ]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1clients~1{clientId}/get/description",
    "value": "Required permission &#39;ADMIN:NAMESPACE:{namespace}:CLIENT [READ]&#39;&lt;br&gt;action code: 10309"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1clients~1{clientId}/delete/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:CLIENT [DELETE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1clients~1{clientId}/delete/description",
    "value": "Required permission &#39;ADMIN:NAMESPACE:{namespace}:CLIENT [DELETE]&#39;&lt;br&gt;action code : 10310"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1roles/post/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:ROLE [CREATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1roles/post/description",
    "value": "Required permission &#39;ADMIN:ROLE [CREATE]&#39; &lt;br&gt;action code: 10401"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1roles/get/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:ROLE [READ]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1roles/get/description",
    "value": "Required permission &#39;ADMIN:ROLE [READ]&#39;&lt;br&gt; &lt;p&gt;action code: 10414&lt;/p&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1oauth~1introspect/post/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1oauth~1introspect/post/description",
    "value": "&lt;p&gt;This endpoint returns information about an access token intended to be used by resource servers or other internal servers.&lt;/p&gt;\n\t\t\t\t\t &lt;p&gt;This endpoint requires authorized requests header with valid basic or bearer token.&lt;/p&gt;\n\t\t\t\t\t &lt;p&gt;action code : 10705&lt;/p&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1public~1namespaces~1{namespace}~1users~1me~1headless~1code~1verify/post/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1public~1namespaces~1{namespace}~1users~1me~1headless~1code~1verify/post/description",
    "value": "Require valid user access token.\n        \t&lt;p&gt;The endpoint upgrades a headless account by linking the headless account with the email address and the password. \n\t\t\tBy upgrading the headless account into a full account, the user could use the email address and password for using Justice IAM. &lt;/p&gt;\n        \t&lt;p&gt;The endpoint is a shortcut for upgrading a headless account and verifying the email address in one call. \n\t\t\tIn order to get a verification code for the endpoint, please check the send verification code endpoint.&lt;/p&gt;\n        \t&lt;p&gt;This endpoint also have an ability to update user data (if the user data field is specified) right after the upgrade account process is done.&lt;br/&gt;\n\t\t\t\tSupported user data fields :\n\t\t\t\t&lt;ul&gt;\n\t\t\t\t\t&lt;li&gt;displayName&lt;/li&gt;\n\t\t\t\t\t&lt;li&gt;dateOfBirth : format YYYY-MM-DD, e.g. 2019-04-29&lt;/li&gt;\n\t\t\t\t\t&lt;li&gt;country : format ISO3166-1 alpha-2 two letter, e.g. US&lt;/li&gt;\n\t\t\t\t&lt;/ul&gt;\n        \t&lt;br&gt;action code : 10124&lt;/p&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1{userId}~1verification/post/security",
    "value": [
      {
        "HasPermission": [
          "NAMESPACE:{namespace}:USER:{userId} [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1{userId}~1verification/post/description",
    "value": "&lt;p&gt;Required permission &#39;NAMESPACE:{namespace}:USER:{userId} [UPDATE]&#39;&lt;/p&gt;\n\t\t\tRedeems a verification code sent to a user to verify the user&#39;s contact address is correct\n\t\t\t&lt;p&gt;Available ContactType : &lt;b&gt;email&lt;b/&gt; or &lt;b&gt;phone&lt;b/&gt; &lt;/p&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v2~1public~1namespaces~1{namespace}~1users~1{userId}~1platforms~1{platformId}~1link/post/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v2~1public~1namespaces~1{namespace}~1users~1{userId}~1platforms~1{platformId}~1link/post/description",
    "value": "&lt;p&gt;&lt;br&gt;&lt;b&gt;Prerequisite:&lt;/b&gt; \n\t\tPlatform client configuration need to be added to database for specific platformId. Namespace service URL need to be specified (refer to required environment variables).\n\t\t\t&lt;h2&gt;Supported platforms:&lt;/h2&gt;\n\t\t\t&lt;ul&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;steam&lt;/strong&gt;: The ticket\u2019s value is the authentication code returned by Steam.&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;steamopenid&lt;/strong&gt;: Steam&#39;s user authentication method using OpenID 2.0. The ticket&#39;s value is URL generated by Steam on web authentication&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;facebook&lt;/strong&gt;: The ticket\u2019s value is the authorization code returned by Facebook OAuth&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;google&lt;/strong&gt;: The ticket\u2019s value is the authorization code returned by Google OAuth&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;oculus&lt;/strong&gt;: The ticket\u2019s value is a string composed of Oculus&#39;s user ID and the nonce separated by a colon (:).&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;twitch&lt;/strong&gt;: The ticket\u2019s value is the authorization code returned by Twitch OAuth.&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;android&lt;/strong&gt;: The ticket&#39;s value is the Android\u2019s device ID&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;ios&lt;/strong&gt;: The ticket&#39;s value is the iOS\u2019s device ID.&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;device&lt;/strong&gt;: Every device that doesn&#39;t run Android and iOS is categorized as a device platform. The ticket&#39;s value is the device\u2019s ID.&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;discord&lt;/strong&gt;: The ticket\u2019s value is the authorization code returned by Discord OAuth.&lt;/li&gt;\n\t\t\t&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v2~1public~1namespaces~1{namespace}~1users~1{userId}~1platforms~1{platformId}~1link/delete/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v2~1public~1namespaces~1{namespace}~1users~1{userId}~1platforms~1{platformId}~1link/delete/description",
    "value": "&lt;h2&gt;Supported platforms:&lt;/h2&gt;\n\t\t\t&lt;ul&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;steam&lt;/strong&gt;&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;steamopenid&lt;/strong&gt;&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;facebook&lt;/strong&gt;&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;google&lt;/strong&gt;&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;oculus&lt;/strong&gt;&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;twitch&lt;/strong&gt;&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;android&lt;/strong&gt;&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;ios&lt;/strong&gt;&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;device&lt;/strong&gt;&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;discord&lt;/strong&gt;&lt;/li&gt;\n\t\t\t&lt;/ul&gt;\n\t\t\t&lt;p&gt;Delete link of user&#39;s account with platform. &#39;justice&#39; platform might have multiple accounts from different namespaces linked. platform_namespace need to be specified when the platform ID is &#39;justice&#39;.\n\t\t\t&lt;br&gt;Delete link of justice platform will enable password token grant and password update. &lt;/p&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v4~1public~1namespaces~1{namespace}~1users/post/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v4~1public~1namespaces~1{namespace}~1users/post/description",
    "value": "Create a new user with unique email address and username.\n\t\t&lt;p&gt;\n\t\t&lt;b&gt;Required attributes:&lt;/b&gt;\n\t\t- authType: possible value is EMAILPASSWD\n\t\t- emailAddress: 5 to 254 characters\n\t\t- username: 3 to 48 characters, case insensitive, alphanumeric with allowed symbols underscore (_) and dot (.)\n\t\t- password: 8 to 32 characters, satisfy at least 3 out of 4 conditions(uppercase, lowercase letters, numbers and special characters) and should not have more than 2 equal characters in a row.\n\t\t- country: ISO3166-1 alpha-2 two letter, e.g. US.\n\t\t- dateOfBirth: YYYY-MM-DD, e.g. 1990-01-01. valid values are between 1905-01-01 until current date.\n\t\t&lt;br/&gt;\n\t\t&lt;b&gt;Not required attributes:&lt;/b&gt;\t\n\t\t- displayName: 1 to 48 characters\n\t\t&lt;/p&gt;\n\t\t&lt;p&gt;This endpoint support accepting agreements for the created user. Supply the accepted agreements in acceptedPolicies attribute.&lt;/p&gt;\n\t\t"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v2~1public~1namespaces~1{namespace}~1users/post/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v2~1public~1namespaces~1{namespace}~1users/post/description",
    "value": "\n&lt;p&gt;Available Authentication Types:&lt;/p&gt;\n&lt;ol&gt;\n&lt;li&gt;&lt;strong&gt;EMAILPASSWD&lt;/strong&gt;: an authentication type used for new user registration through email.&lt;/li&gt;\n&lt;/ol&gt;\n&lt;p&gt;Country use ISO3166-1 alpha-2 two letter, e.g. US.&lt;/p&gt;\n"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1users~1{userId}~1verify/put/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:USER:{userId} [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1users~1{userId}~1verify/put/description",
    "value": "&lt;p&gt;This endpoint force verify user. Required permission ADMIN:NAMESPACE:{namespace}:USER:{userId} [UPDATE]&lt;/p&gt;\n&lt;p&gt;action code: 10118&lt;/p&gt;\n"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1oauth~1admin~1namespaces~1{namespace}~1users~1{userId}~1revoke/post/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:USER:{userId} [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1oauth~1admin~1namespaces~1{namespace}~1users~1{userId}~1revoke/post/description",
    "value": "&lt;p&gt;This endpoint revokes all access tokens and refresh tokens a user has prior the revocation time.&lt;/p&gt;\n\t\t\t&lt;p&gt;This endpoint requires authorized requests header with valid access token.&lt;/p&gt;\n\t\t\t&lt;p&gt;Required permission &#39;ADMIN:NAMESPACE:{namespace}:USER:{userId} [UPDATE]&#39;&lt;/p&gt;\n\t\t\t&lt;p&gt;It is a convenient feature for the developer (or admin) who wanted to revokes all user&#39;s access tokens and refresh tokens generated before some period of time.&lt;/p&gt;\n\t\t\t&lt;p&gt;action code : 10707&lt;/p&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users/post/security",
    "value": [
      {
        "HasPermission": [
          "NAMESPACE:{namespace}:USER [CREATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users/post/responses/400/description",
    "value": ""
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users/post/responses/409/description",
    "value": ""
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users/post/description",
    "value": "&lt;p&gt;Required permission &#39;NAMESPACE:{namespace}:USER [CREATE]&#39;.&lt;/p&gt;\n&lt;p&gt;Available Authentication Types:&lt;/p&gt;\n&lt;ol&gt;\n&lt;li&gt;&lt;strong&gt;EMAILPASSWD&lt;/strong&gt;: an authentication type used for new user registration through email.&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;PHONEPASSWD&lt;/strong&gt;: an authentication type used for new user registration through phone number.&lt;/li&gt;\n&lt;/ol&gt;\n&lt;p&gt;Country use ISO3166-1 alpha-2 two letter, e.g. US.&lt;/p&gt;\n"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1sso~1{platformId}~1logout/post/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1sso~1{platformId}~1logout/post/description",
    "value": "Logout user&#39;s session on platform that logged in using SSO.\n\nSupported platforms:\n- discourse\n"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1public~1roles/get/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1public~1roles/get/description",
    "value": " &lt;br&gt;This endpoint is used to get all non-admin role.  &lt;br&gt; &lt;p&gt;action code: 10418&lt;/p&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1roles~1{roleId}~1members/post/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:ROLE [UPDATE]",
          "ROLE:ADMIN [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1roles~1{roleId}~1members/post/description",
    "value": "&lt;p&gt;Required permission &#39;ROLE:ADMIN [UPDATE]&#39; or &#39;ADMIN:ROLE [UPDATE]&#39;&lt;/p&gt;\n\t\t\t&lt;p&gt;Required Permission &#39;ROLE:ADMIN [UPDATE]&#39; is going to be &lt;strong&gt;DEPRECATED&lt;/strong&gt; for security purpose.\n\t\t\tIt is going to be deprecated on &lt;strong&gt;31 JANUARY 2019&lt;/strong&gt;, please use permission &#39;ADMIN:ROLE [UPDATE]&#39; instead.&lt;/p&gt;\n\t\t\t&lt;p&gt;Admin roles has its members listed in the role.&lt;/p&gt;\n\t\t\t&lt;p&gt;Role can only be assigned to other users by the role&#39;s manager.&lt;/p&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1roles~1{roleId}~1members/delete/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:ROLE [UPDATE]",
          "ROLE:ADMIN [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1roles~1{roleId}~1members/delete/description",
    "value": "&lt;p&gt;Required permission &#39;ROLE:ADMIN [UPDATE]&#39; or &#39;ADMIN:ROLE [UPDATE]&#39;&lt;/p&gt;\n\t\t\t&lt;p&gt;Required Permission &#39;ROLE:ADMIN [UPDATE]&#39; is going to be &lt;strong&gt;DEPRECATED&lt;/strong&gt; for security purpose.\n\t\t\tIt is going to be deprecated on &lt;strong&gt;31 JANUARY 2019&lt;/strong&gt;, please use permission &#39;ADMIN:ROLE [UPDATE]&#39; instead.&lt;/p&gt;\n\t\t\t&lt;p&gt;Admin roles has its members listed in the role.&lt;/p&gt;\n\t\t\t&lt;p&gt;Role can only be assigned to other users by the role&#39;s manager.&lt;/p&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1roles~1{roleId}~1members/get/security",
    "value": [
      {
        "HasPermission": [
          "ROLE [READ]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1roles~1{roleId}~1members/get/description",
    "value": "&lt;p&gt;Required permission &#39;ROLE [READ]&#39;&lt;/p&gt;\n\t\t\t&lt;p&gt;Admin roles has its members listed in the role.&lt;/p&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1{userId}~1verificationcode/post/security",
    "value": [
      {
        "HasPermission": [
          "NAMESPACE:{namespace}:USER:{userId} [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1{userId}~1verificationcode/post/description",
    "value": "Required permission &#39;NAMESPACE:{namespace}:USER:{userId} [UPDATE]&#39;\n\t\t\t&lt;p&gt;The verification code is sent to either the phone number or email address. It depends on the LoginID&#39;s value.&lt;/p&gt;\n\t\t\t&lt;p&gt;Available contexts for use : &lt;/p&gt;\n\t\t\t&lt;ol&gt;\n\t\t\t&lt;li&gt;&lt;strong&gt;UserAccountRegistration&lt;/strong&gt;&lt;p&gt;a context type used for verifying email address in user account registration. It returns 409 if the email address already verified. &lt;strong&gt;&lt;em&gt;It is the default context if the Context field is empty&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;\n\t\t\t&lt;li&gt;&lt;strong&gt;UpdateEmailAddress&lt;/strong&gt;&lt;p&gt;a context type used for verify user before updating email address.(Without email address verified checking)&lt;/p&gt;&lt;/li&gt;\n\t\t\t&lt;li&gt;&lt;strong&gt;upgradeHeadlessAccount&lt;/strong&gt;&lt;p&gt;The context is intended to be used whenever the email address wanted to be automatically verified on upgrading a headless account.  If this context used, IAM rejects the request if the loginId field&#39;s value is already used by others by returning HTTP Status Code 409.&lt;/p&gt;&lt;/li&gt;\n\t\t\t&lt;/ol&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v2~1admin~1namespaces~1{namespace}~1users~1{userId}~1ban/post/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:BAN:USER:{userId} [CREATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v2~1admin~1namespaces~1{namespace}~1users~1{userId}~1ban/post/description",
    "value": "Required permission &#39;ADMIN:NAMESPACE:{namespace}:BAN:USER:{userId} [CREATE]&#39;."
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1oauth~1revocationlist/get/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1oauth~1revocationlist/get/description",
    "value": "&lt;p&gt;This endpoint will return a list of revoked users and revoked tokens. List of revoked tokens in bloom filter format.&lt;/p&gt;\n\t\t\t\t\t &lt;p&gt;This endpoint requires authorized requests header with valid access token.&lt;/p&gt;\n\t\t\t\t\t &lt;p&gt;The bloom filter uses MurmurHash3 algorithm for hashing the values&lt;/p&gt;\n\t\t\t\t\t &lt;p&gt;action code : 10708&lt;/p&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v2~1admin~1namespaces~1{namespace}~1countries~1{countryCode}/patch/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:AGERESTRICTION [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v2~1admin~1namespaces~1{namespace}~1countries~1{countryCode}/patch/description",
    "value": "Required permission &#39;ADMIN:NAMESPACE:{namespace}:AGERESTRICTION [UPDATE]&#39;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1roles~1{roleId}/get/security",
    "value": [
      {
        "HasPermission": [
          "ROLE [READ]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1roles~1{roleId}/get/description",
    "value": "Required permission &#39;ROLE [READ]&#39;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1roles~1{roleId}/delete/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:ROLE [DELETE]",
          "ROLE:ADMIN [DELETE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1roles~1{roleId}/delete/description",
    "value": "Required permission &#39;ROLE:ADMIN [DELETE]&#39; or &#39;ADMIN:ROLE [DELETE]&#39;\n\t\t\t&lt;p&gt;Required Permission &#39;ROLE:ADMIN [DELETE]&#39; is going to be &lt;strong&gt;DEPRECATED&lt;/strong&gt; for security purpose.\n\t\t\tIt is going to be deprecated on &lt;strong&gt;31 JANUARY 2019&lt;/strong&gt;, please use permission &#39;ADMIN:ROLE [DELETE]&#39; instead.&lt;/p&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1roles~1{roleId}/put/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:ROLE [UPDATE]",
          "ROLE:ADMIN [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1roles~1{roleId}/put/description",
    "value": "&lt;p&gt;Required permission &#39;ROLE:ADMIN [UPDATE]&#39; or &#39;ADMIN:ROLE [UPDATE]&#39;&lt;/p&gt;\n\t\t\t&lt;p&gt;Required Permission &#39;ROLE:ADMIN [UPDATE]&#39; is going to be &lt;strong&gt;DEPRECATED&lt;/strong&gt; for security purpose.\n\t\t\tIt is going to be deprecated on &lt;strong&gt;31 JANUARY 2019&lt;/strong&gt;, please use permission &#39;ADMIN:ROLE [UPDATE]&#39; instead.&lt;/p&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v2~1public~1namespaces~1{namespace}~1users~1forgotPassword/post/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v2~1public~1namespaces~1{namespace}~1users~1forgotPassword/post/description",
    "value": "&lt;p&gt;&lt;strong&gt;Special note for publisher-game scenario:&lt;/strong&gt; Game Client should provide game namespace path parameter and Publisher Client should provide publisher namespace path parameter. &lt;/p&gt;&lt;p&gt;The password reset code will be sent to the publisher account&#39;s email address. &lt;/p&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1sso~1saml~1platforms~1{platformId}~1authenticate/post/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1sso~1saml~1platforms~1{platformId}~1authenticate/post/responses/302/headers",
    "value": {
      "Location": {
        "description": "The Location header",
        "type": "string"
      }
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1sso~1saml~1platforms~1{platformId}~1authenticate/post/description",
    "value": "This endpoint authenticates user platform for SAML protocol. It validates user to its\n          respective platforms. Deactivated or login-banned users are unable to login. &lt;br&gt;\n          &lt;h2&gt;Supported platforms:&lt;/h2&gt;&lt;ul&gt;\n          &lt;li&gt;&lt;strong&gt;azure&lt;/strong&gt;&lt;/li&gt;Microsoft login page will redirects to this endpoint after login success\n          as previously defined on authentication request SAML\n          &lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1public~1users~1me/get/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1public~1users~1me/get/description",
    "value": "&lt;p&gt;Require valid user authorization&lt;br&gt;Get my user data&lt;br&gt;action code : 10147 &lt;/p&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1users~1search/get/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:USER [READ]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1users~1search/get/description",
    "value": "&lt;p&gt;Required permission ADMIN:NAMESPACE:{namespace}:USER [READ]&lt;/p&gt;\n               &lt;p&gt;Endpoint behavior :\n               &lt;ul&gt;&lt;li&gt;by default this endpoint searches all users on the specified namespace&lt;/li&gt;\n               &lt;li&gt;if query parameter is defined, endpoint will search users whose email address, display name, username, or third party partially match with the query&lt;/li&gt;\n               &lt;li&gt;if startDate and endDate parameters is defined, endpoint will search users which created on the certain date range&lt;/li&gt;\n               &lt;li&gt;if query, startDate and endDate parameters are defined, endpoint will search users whose email address and display name match and created on the certain date range&lt;/li&gt;\n               &lt;li&gt;if startDate parameter is defined, endpoint will search users that created start from the defined date&lt;/li&gt;\n               &lt;li&gt;if endDate parameter is defined, endpoint will search users that created until the defined date&lt;/li&gt;\n&lt;li&gt;if platformId parameter is defined and by parameter is using thirdparty, endpoint will search users based on the platformId they have linked to &lt;/li&gt;\n&lt;li&gt;if platformBy parameter is defined and by parameter is using thirdparty, endpoint will search users based on the platformUserId or platformDisplayName they have linked to, example value: platformUserId or platformDisplayName&lt;/li&gt;\n               &lt;li&gt;if limit is not defined, The default limit is 100&lt;/li&gt;\n&lt;/ul&gt;&lt;/p&gt;\n             &lt;br&gt;action code : 10133"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v4~1public~1namespaces~1{namespace}~1users~1me/patch/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v4~1public~1namespaces~1{namespace}~1users~1me/patch/description",
    "value": "&lt;p&gt;Requires valid user access token &lt;/p&gt;\n&lt;br&gt;&lt;p&gt;This Endpoint support update user based on given data. &lt;b&gt;Single request can update single field or multi fields.&lt;/b&gt;&lt;/p&gt; \n&lt;p&gt;Supported field {country, displayName, languageTag, dateOfBirth}&lt;/p&gt;\n&lt;p&gt;Country use ISO3166-1 alpha-2 two letter, e.g. US.&lt;/p&gt;\n&lt;p&gt;Date of Birth format : YYYY-MM-DD, e.g. 2019-04-29.&lt;/p&gt;\n&lt;br&gt;&lt;b&gt;Several case of updating email address&lt;/b&gt;\n&lt;p&gt;action code : 10103 &lt;/p&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1public~1namespaces~1{namespace}~1users~1{userId}~1validate/post/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1public~1namespaces~1{namespace}~1users~1{userId}~1validate/post/description",
    "value": "This endpoint is used to validate the user password. Required valid user authorization and valid user ID.\n\t\t&lt;p&gt;Notes:&lt;/p&gt;\n\t\t&lt;ul&gt;\n\t\t\t&lt;li&gt;This endpoint validate the user password by specifying the userId and password&lt;/li&gt;\n\t\t&lt;/ul&gt;\n\t\t"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1{userId}~1ban/post/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:BAN:USER:{userId} [CREATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1{userId}~1ban/post/description",
    "value": "Required permission &#39;ADMIN:NAMESPACE:{namespace}:BAN:USER:{userId} [CREATE]&#39;."
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1users~1{userId}~1platforms~1link/post/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:USER:{userId} [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1users~1{userId}~1platforms~1link/post/description",
    "value": "&lt;p&gt;Required permission &#39;ADMIN:NAMESPACE:{namespace}:USER:{userId} [UPDATE]&#39;&lt;/p&gt;\nForce linking platform account to user User Account. This endpoint intended for admin to forcefully link account to user.\n"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1{userId}~1platforms~1{platformId}~1unlink/post/security",
    "value": [
      {
        "HasPermission": [
          "NAMESPACE:{namespace}:USER:{userId} [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1{userId}~1platforms~1{platformId}~1unlink/post/description",
    "value": "&lt;p&gt;Required permission &#39;NAMESPACE:{namespace}:USER:{userId} [UPDATE]&#39;.&lt;/p&gt;\n&lt;h2&gt;Supported platforms:&lt;/h2&gt;\n\t\t\t&lt;ul&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;steam&lt;/strong&gt;&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;steamopenid&lt;/strong&gt;&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;facebook&lt;/strong&gt;&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;google&lt;/strong&gt;&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;oculus&lt;/strong&gt;&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;twitch&lt;/strong&gt;&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;android&lt;/strong&gt;&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;ios&lt;/strong&gt;&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;device&lt;/strong&gt;&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;justice&lt;/strong&gt;: A user might have several &#39;justice\u2019 platform on different namespaces. That\u2019s why the platform_namespace need to be specified when the platform ID is \u2018justice\u2019. The platform_namespace is the designated user\u2019s namespace.&lt;/li&gt;\n\t\t\t&lt;/ul&gt;\n\t\t\t&lt;p&gt;Unlink user&#39;s account with platform. &#39;justice&#39; platform might have multiple accounts from different namespaces linked. platform_namespace need to be specified when the platform ID is &#39;justice&#39;.\n\t\t\t&lt;br&gt;Unlinking justice platform will enable password token grant and password update. &lt;/p&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1public~1namespaces~1{namespace}~1users~1me~1platforms~1justice~1{targetNamespace}/post/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1roles~1{roleId}~1managers/post/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:ROLE [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1roles~1{roleId}~1managers/post/description",
    "value": "&lt;p&gt;Role can only be assigned to other users by the role&#39;s manager.&lt;/p&gt;\n\t\t\t&lt;br&gt;&lt;p&gt;Required permission &#39;ADMIN:ROLE [UPDATE]&#39;&lt;/p&gt;&lt;br&gt;action code: 10408"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1roles~1{roleId}~1managers/delete/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:ROLE [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1roles~1{roleId}~1managers/delete/description",
    "value": "&lt;p&gt;Required permission &#39;ADMIN:ROLE [UPDATE]&#39;&lt;/p&gt;\n\t\t\t&lt;p&gt;Role can only be assigned to other users by the role&#39;s manager.&lt;/p&gt; &lt;br&gt; action code: 10409"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1roles~1{roleId}~1managers/get/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:ROLE [READ]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1roles~1{roleId}~1managers/get/description",
    "value": "&lt;p&gt;Required permission &#39;ADMIN:ROLE [READ]&#39;&lt;/p&gt;\n\t\t\t&lt;p&gt;Role can only be assigned to other users by the role&#39;s manager.&lt;/p&gt;&lt;br/&gt;\n\t\t\taction code: 10415"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1roles~1{roleId}~1permissions/post/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:ROLE [UPDATE]",
          "ROLE:ADMIN [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1roles~1{roleId}~1permissions/post/description",
    "value": "&lt;p&gt;Required permission &#39;ROLE:ADMIN [UPDATE]&#39; or &#39;ADMIN:ROLE [UPDATE]&#39;&lt;/p&gt;\n\t\t\t&lt;p&gt;Required Permission &#39;ROLE:ADMIN [UPDATE]&#39; is going to be &lt;strong&gt;DEPRECATED&lt;/strong&gt; for security purpose.\n\t\t\tIt is going to be deprecated on &lt;strong&gt;31 JANUARY 2019&lt;/strong&gt;, please use permission &#39;ADMIN:ROLE [UPDATE]&#39; instead.&lt;/p&gt;\n\t\t\t&lt;p&gt;This endpoint will REPLACE role&#39;s permissions with the ones defined in body&lt;/p&gt;\n\t\t\t&lt;p&gt;Schedule contains cron string or date range (both are UTC, also in cron syntax) to indicate when a permission and action are in effect.&lt;/p&gt;\n\t\t\t&lt;p&gt;Both schedule types accepts quartz compatible cron syntax e.g. * * * * * * *.&lt;/p&gt;\n\t\t\t&lt;p&gt;In ranged schedule, first element will be start date, and second one will be end date&lt;/p&gt;\n\t\t\t&lt;p&gt;If schedule is set, the scheduled action must be valid too, that is between 1 to 15, inclusive&lt;/p&gt;\n\t\t\t&lt;p&gt;Syntax reference&lt;/p&gt;\n\t\t\t&lt;p&gt;Fields:&lt;/p&gt;\n\t\t\t&lt;ol&gt;\n\t\t\t&lt;li&gt;Seconds: 0-59 * / , -&lt;/li&gt;\n\t\t\t&lt;li&gt;Minutes: 0-59 * / , -&lt;/li&gt;\n\t\t\t&lt;li&gt;Hours: 0-23 * / , -&lt;/li&gt;\n\t\t\t&lt;li&gt;Day of month: 1-31 * / , - L W&lt;/li&gt;\n\t\t\t&lt;li&gt;Month: 1-12 JAN-DEC * / , -&lt;/li&gt;\n\t\t\t&lt;li&gt;Day of week: 0-6 SUN-SAT * / , - L #&lt;/li&gt;\n\t\t\t&lt;li&gt;Year: 1970-2099 * / , -&lt;/li&gt;\n\t\t\t&lt;/ol&gt;\n\t\t\t&lt;p&gt;Special characters:&lt;/p&gt;\n\t\t\t&lt;ol&gt;\n\t\t\t&lt;li&gt;*: all values in the fields, e.g. * in seconds fields indicates every second&lt;/li&gt;\n\t\t\t&lt;li&gt;/: increments of ranges, e.g. 3-59/15 in the minute field indicate the third minute of the hour and every 15 minutes thereafter&lt;/li&gt;\n\t\t\t&lt;li&gt;,: separate items of a list, e.g. MON,WED,FRI in day of week&lt;/li&gt;\n\t\t\t&lt;li&gt;-: range, e.g. 2010-2018 indicates every year between 2010 and 2018, inclusive&lt;/li&gt;\n\t\t\t&lt;li&gt;L: last, e.g. When used in the day-of-week field, it allows you to specify constructs such as &#34;the last Friday&#34; (5L) of a given month. In the day-of-month field, it specifies the last day of the month.&lt;/li&gt;\n\t\t\t&lt;li&gt;W: business day, e.g. if you were to specify 15W as the value for the day-of-month field, the meaning is: &#34;the nearest business day to the 15th of the month.&#34;&lt;/li&gt;\n\t\t\t&lt;li&gt;#: must be followed by a number between one and five. It allows you to specify constructs such as &#34;the second Friday&#34; of a given month.&lt;/li&gt;\n\t\t\t&lt;/ol&gt;\n\t\t\t"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1users~1{userId}~1permissions~1{resource}~1{action}/delete/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:PERMISSION:USER:{userId} [DELETE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1users~1{userId}~1permissions~1{resource}~1{action}/delete/description",
    "value": "Required permission &#39;ADMIN:NAMESPACE:{namespace}:PERMISSION:USER:{userId} [DELETE]&#39;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1public~1namespaces~1{namespace}~1users/post/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1public~1namespaces~1{namespace}~1users/post/description",
    "value": "\n&lt;p&gt;Available Authentication Types:&lt;/p&gt;\n&lt;ol&gt;\n&lt;li&gt;&lt;strong&gt;EMAILPASSWD&lt;/strong&gt;: an authentication type used for new user registration through email.&lt;/li&gt;\n&lt;/ol&gt;\n&lt;p&gt;Country use ISO3166-1 alpha-2 two letter, e.g. US.&lt;/p&gt;\n&lt;p&gt;Date of Birth format : YYYY-MM-DD, e.g. 2019-04-29.&lt;/p&gt;\n&lt;p&gt;This endpoint support accepting agreements for the created user. Supply the accepted agreements in acceptedPolicies attribute.&lt;/p&gt;\n"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1public~1namespaces~1{namespace}~1users/get/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1public~1namespaces~1{namespace}~1users/get/description",
    "value": "&lt;p&gt;Requires valid user access token&lt;/p&gt;\n\t\t\t&lt;p&gt;This endpoint search all users on the specified namespace that match the query on these fields: display name, and username.\n\t\t\tThe query length should greater than 1\uff0cotherwise will not query the database. The default limit value is 100&lt;/p&gt;\n\t\t\t&lt;br&gt;action code : 10132"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v2~1admin~1namespaces~1{namespace}~1users~1{userId}~1password/put/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:PASSWORD:USER:{userId} [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v2~1admin~1namespaces~1{namespace}~1users~1{userId}~1password/put/description",
    "value": "Required permission &#39;ADMIN:NAMESPACE:{namespace}:PASSWORD:USER:{userId} [UPDATE]&#39;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1users~1{userId}~1roles~1{roleId}/post/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:ROLE:USER:{userId} [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1users~1{userId}~1roles~1{roleId}/post/description",
    "value": "&lt;p&gt;This endpoint adds role to user. Required permission ADMIN:NAMESPACE:{namespace}:ROLE:USER:{userId} [UPDATE]&lt;/p&gt;\n&lt;p&gt;action code: 10109&lt;/p&gt;\n"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1users~1{userId}~1roles~1{roleId}/delete/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:ROLE:USER:{userId} [DELETE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1users~1{userId}~1roles~1{roleId}/delete/description",
    "value": "&lt;p&gt;This endpoint removes role from user. Required permission ADMIN:NAMESPACE:{namespace}:ROLE:USER:{userId} [DELETE]&lt;/p&gt;\n&lt;p&gt;action code: 10110&lt;/p&gt;\n"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1public~1namespaces~1{namespace}~1users~1{userId}~1logins~1histories/get/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1public~1namespaces~1{namespace}~1users~1{userId}~1logins~1histories/get/description",
    "value": "Required valid user authorization.&lt;p&gt;Notes for this endpoint: &lt;/p&gt; &lt;ul&gt;&lt;li&gt;This endpoint retrieve the first page of the data if `after` and `before` parameters is empty.&lt;/li&gt;&lt;li&gt;The maximum value of the limit is 100 and the minimum value of the limit is 1.&lt;/li&gt;&lt;li&gt;This endpoint retrieve the next page of the data if we provide `after` parameters with valid Unix timestamp.&lt;/li&gt;&lt;li&gt;This endpoint retrieve the previous page of the data if we provide `before` parameter with valid data Unix timestamp.&lt;/li&gt;&lt;ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v4~1admin~1roles~1{roleId}/patch/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:ROLE [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v4~1admin~1roles~1{roleId}/get/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:ROLE [READ]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v4~1admin~1roles~1{roleId}/delete/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:ROLE [DELETE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v4~1admin~1roles~1{roleId}/delete/description",
    "value": "Required permission ADMIN:ROLE [DELETE]\n\nRemoves role ID from user&#39;s Roles and NamespaceRoles before deleting the role.\n\naction code: 10403"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1users~1{userId}~1deletion~1status/patch/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:DELETIONSTATUS:USER:{userId} [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1users~1{userId}~1deletion~1status/patch/description",
    "value": "Required permissions &#39;ADMIN:NAMESPACE:{namespace}:DELETIONSTATUS:USER:{userId} [UPDATE]&#39; &lt;br&gt;action code : 10144"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1users~1{userId}~1deletion~1status/get/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:DELETIONSTATUS:USER:{userId} [READ]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1users~1{userId}~1deletion~1status/get/description",
    "value": "Required permissions &#39;ADMIN:NAMESPACE:{namespace}:DELETIONSTATUS:USER:{userId} [READ]&#39; &lt;br&gt;action code : 10145"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v4~1public~1namespaces~1{namespace}~1users~1me~1headless~1verify/post/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v4~1public~1namespaces~1{namespace}~1users~1me~1headless~1verify/post/description",
    "value": "Require valid user authorization\n\t\t\tUpgrade headless account to full account without verifying email address. Client does not need to provide verification code which sent to email address.\n\t\t\t&lt;br&gt;action code : 10124 &lt;/p&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v4~1admin~1users~1users~1invite/post/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:USER:INVITE [CREATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v4~1admin~1users~1users~1invite/post/description",
    "value": "Required permission &#39;ADMIN:USER:INVITE [CREATE]\n\nUse this endpoint to invite admin or non-admin user and assign role to them. The role must be scoped to namespace. An admin user can only\nassign role with namespaces that the admin user has required permission which is same as the required permission of endpoint: [AdminAddUserRoleV4].\nRole is optional, if not specified then it will only assign User role\n\nThe invited admin will also assigned with &#34;User&#34; role by default.\n"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1clients~1{clientId}~1permissions~1{resource}~1{action}/delete/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:CLIENT [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1clients~1{clientId}~1permissions~1{resource}~1{action}/delete/description",
    "value": "Required permission &#39;ADMIN:NAMESPACE:{namespace}:CLIENT [UPDATE]&#39;&lt;br&gt;action code : 10304"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1logout/post/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1logout/post/description",
    "value": "&lt;p&gt;This endpoint is used to remove &lt;b&gt;access_token&lt;/b&gt; cookie and &lt;b&gt;refresh_token&lt;/b&gt; cookie.&lt;/p&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v4~1admin~1roles~1{roleId}~1permissions/post/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:ROLE [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v4~1admin~1roles~1{roleId}~1permissions/post/description",
    "value": "&lt;p&gt;Required permission &#39;ADMIN:ROLE [UPDATE]&#39;&lt;/p&gt;\n&lt;p&gt;This endpoint will ATTACH permission(s) into the role&lt;/p&gt;\n&lt;br&gt;action code: 10404&lt;br&gt;\n&lt;p&gt;Schedule contains cron string or date range (both are UTC, also in cron syntax) to indicate when a permission and action are in effect.&lt;/p&gt;\n&lt;p&gt;Both schedule types accepts quartz compatible cron syntax e.g. * * * * * * *.&lt;/p&gt;\n&lt;p&gt;In ranged schedule, first element will be start date, and second one will be end date&lt;/p&gt;\n&lt;p&gt;If schedule is set, the scheduled action must be valid too, that is between 1 to 15, inclusive&lt;/p&gt;\n&lt;p&gt;Syntax reference&lt;/p&gt;\n&lt;p&gt;Fields:&lt;/p&gt;\n&lt;ol&gt;\n&lt;li&gt;Seconds: 0-59 * / , -&lt;/li&gt;\n&lt;li&gt;Minutes: 0-59 * / , -&lt;/li&gt;\n&lt;li&gt;Hours: 0-23 * / , -&lt;/li&gt;\n&lt;li&gt;Day of month: 1-31 * / , - L W&lt;/li&gt;\n&lt;li&gt;Month: 1-12 JAN-DEC * / , -&lt;/li&gt;\n&lt;li&gt;Day of week: 0-6 SUN-SAT * / , - L #&lt;/li&gt;\n&lt;li&gt;Year: 1970-2099 * / , -&lt;/li&gt;\n&lt;/ol&gt;\n&lt;p&gt;Special characters:&lt;/p&gt;\n&lt;ol&gt;\n&lt;li&gt;*: all values in the fields, e.g. * in seconds fields indicates every second&lt;/li&gt;\n&lt;li&gt;/: increments of ranges, e.g. 3-59/15 in the minute field indicate the third minute of the hour and every 15 minutes thereafter&lt;/li&gt;\n&lt;li&gt;,: separate items of a list, e.g. MON,WED,FRI in day of week&lt;/li&gt;\n&lt;li&gt;-: range, e.g. 2010-2018 indicates every year between 2010 and 2018, inclusive&lt;/li&gt;\n&lt;li&gt;L: last, e.g. When used in the day-of-week field, it allows you to specify constructs such as &#34;the last Friday&#34; (5L) of a given month. In the day-of-month field, it specifies the last day of the month.&lt;/li&gt;\n&lt;li&gt;W: business day, e.g. if you were to specify 15W as the value for the day-of-month field, the meaning is: &#34;the nearest business day to the 15th of the month.&#34;&lt;/li&gt;\n&lt;li&gt;#: must be followed by a number between one and five. It allows you to specify constructs such as &#34;the second Friday&#34; of a given month.&lt;/li&gt;\n&lt;/ol&gt;\n"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v4~1admin~1roles~1{roleId}~1permissions/delete/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:ROLE [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v4~1admin~1roles~1{roleId}~1permissions/put/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:ROLE [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v4~1admin~1roles~1{roleId}~1permissions/put/description",
    "value": "&lt;p&gt;Required permission &#39;ADMIN:ROLE [UPDATE]&#39;&lt;/p&gt;\n&lt;p&gt;This endpoint will REPLACE role&#39;s permissions with the ones defined in body&lt;/p&gt;\n&lt;br&gt;action code: 10405&lt;br&gt;\n&lt;p&gt;Schedule contains cron string or date range (both are UTC, also in cron syntax) to indicate when a permission and action are in effect.&lt;/p&gt;\n&lt;p&gt;Both schedule types accepts quartz compatible cron syntax e.g. * * * * * * *.&lt;/p&gt;\n&lt;p&gt;In ranged schedule, first element will be start date, and second one will be end date&lt;/p&gt;\n&lt;p&gt;If schedule is set, the scheduled action must be valid too, that is between 1 to 15, inclusive&lt;/p&gt;\n&lt;p&gt;Syntax reference&lt;/p&gt;\n&lt;p&gt;Fields:&lt;/p&gt;\n&lt;ol&gt;\n&lt;li&gt;Seconds: 0-59 * / , -&lt;/li&gt;\n&lt;li&gt;Minutes: 0-59 * / , -&lt;/li&gt;\n&lt;li&gt;Hours: 0-23 * / , -&lt;/li&gt;\n&lt;li&gt;Day of month: 1-31 * / , - L W&lt;/li&gt;\n&lt;li&gt;Month: 1-12 JAN-DEC * / , -&lt;/li&gt;\n&lt;li&gt;Day of week: 0-6 SUN-SAT * / , - L #&lt;/li&gt;\n&lt;li&gt;Year: 1970-2099 * / , -&lt;/li&gt;\n&lt;/ol&gt;\n&lt;p&gt;Special characters:&lt;/p&gt;\n&lt;ol&gt;\n&lt;li&gt;*: all values in the fields, e.g. * in seconds fields indicates every second&lt;/li&gt;\n&lt;li&gt;/: increments of ranges, e.g. 3-59/15 in the minute field indicate the third minute of the hour and every 15 minutes thereafter&lt;/li&gt;\n&lt;li&gt;,: separate items of a list, e.g. MON,WED,FRI in day of week&lt;/li&gt;\n&lt;li&gt;-: range, e.g. 2010-2018 indicates every year between 2010 and 2018, inclusive&lt;/li&gt;\n&lt;li&gt;L: last, e.g. When used in the day-of-week field, it allows you to specify constructs such as &#34;the last Friday&#34; (5L) of a given month. In the day-of-month field, it specifies the last day of the month.&lt;/li&gt;\n&lt;li&gt;W: business day, e.g. if you were to specify 15W as the value for the day-of-month field, the meaning is: &#34;the nearest business day to the 15th of the month.&#34;&lt;/li&gt;\n&lt;li&gt;#: must be followed by a number between one and five. It allows you to specify constructs such as &#34;the second Friday&#34; of a given month.&lt;/li&gt;\n&lt;/ol&gt;\n"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1clients/post/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:CLIENT [CREATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1clients/post/description",
    "value": "&lt;h2&gt;The endpoint is going to be deprecated. Please use this instead: /v3/admin/namespaces/{namespace}/clients&lt;/h2&gt;Required permission &#39;ADMIN:NAMESPACE:{namespace}:CLIENT [CREATE]&#39;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1clients/get/security",
    "value": [
      {
        "HasPermission": [
          "NAMESPACE:{namespace}:CLIENT [READ]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1clients/get/description",
    "value": "Required permission &#39;NAMESPACE:{namespace}:CLIENT [READ]&#39;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v2~1admin~1namespaces~1{namespace}~1users~1{userId}~1roles/post/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:ROLE:USER:{userId} [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v2~1admin~1namespaces~1{namespace}~1users~1{userId}~1roles/post/description",
    "value": "Required permission &#39;ADMIN:NAMESPACE:{namespace}:ROLE:USER:{userId} [UPDATE]&#39;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v2~1admin~1namespaces~1{namespace}~1users~1{userId}~1roles/put/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:ROLE:USER:{userId} [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v2~1admin~1namespaces~1{namespace}~1users~1{userId}~1roles/put/description",
    "value": "Required permission &#39;ADMIN:NAMESPACE:{namespace}:ROLE:USER:{userId} [UPDATE]&#39;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1users~1{userId}~1code~1verify/post/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:USER:{userId} [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1users~1{userId}~1code~1verify/post/description",
    "value": "&lt;p&gt;Required permission &#39;ADMIN:NAMESPACE:{namespace}:USER:{userId} [UPDATE]&#39;&lt;/p&gt;\n\t\t\tRedeems a verification code sent to a user to verify the user&#39;s contact address is correct\n\t\t\t&lt;p&gt;Available ContactType : &lt;b&gt;email&lt;b/&gt; or &lt;b&gt;phone&lt;b/&gt; &lt;/p&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1public~1namespaces~1{namespace}~1users~1me~1headless~1verify/post/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1public~1namespaces~1{namespace}~1users~1me~1headless~1verify/post/description",
    "value": "&lt;p&gt;Require valid user authorization&lt;br&gt;action code : 10124 &lt;/p&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1admin/get/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:USER [READ]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1admin/get/description",
    "value": "&lt;p&gt;Required permission &#39;ADMIN:NAMESPACE:{namespace}:USER [READ]&#39;&lt;/p&gt;\n\t\t\t&lt;p&gt;This endpoint search admin users which have the roleId&lt;/p&gt;\n\t\t\t&lt;p&gt;Notes : this endpoint only accept admin role. Admin Role is role which have admin status and members.\n\t\t\tUse endpoint [GET] /roles/{roleId}/admin to check the role status&lt;/p&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1platforms~1{platformId}~1authenticate/get/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1platforms~1{platformId}~1authenticate/get/responses/302/headers",
    "value": {
      "Location": {
        "description": "The Location header",
        "type": "string"
      }
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1platforms~1{platformId}~1authenticate/get/description",
    "value": "This endpoint authenticates user platform. It validates user to its\n          respective platforms. Deactivated or login-banned users are unable to login. &lt;br&gt;\n          &lt;h2&gt;Supported platforms:&lt;/h2&gt;&lt;ul&gt;\n          &lt;li&gt;&lt;strong&gt;steamopenid&lt;/strong&gt;&lt;/li&gt;Steam login page will redirects to this endpoint after login success\n          as previously defined on openID request parameter &lt;code&gt;openid.return_to&lt;/code&gt; when request login to steam\n          https://openid.net/specs/openid-authentication-2_0.html#anchor27\n          &lt;li&gt;&lt;strong&gt;ps4web&lt;/strong&gt;&lt;/li&gt;PS4 login page will redirects to this endpoint after login success\n          as previously defined on authorize request parameter &lt;code&gt;redirect_uri&lt;/code&gt; \n\t\t  https://ps4.siedev.net/resources/documents/WebAPI/1/Auth_WebAPI-Reference/0002.html#0GetAccessTokenUsingAuthorizationCode\n          &lt;li&gt;&lt;strong&gt;xblweb&lt;/strong&gt;&lt;/li&gt;XBL login page will redirects to this endpoint after login success\n          as previously defined on authorize request parameter &lt;code&gt;redirect_uri&lt;/code&gt; \n          &lt;li&gt;&lt;strong&gt;epicgames&lt;/strong&gt;&lt;/li&gt;Epicgames login page will redirects to this endpoint after login success\n          or an error occurred. If error, it redirects to the login page.\n          &lt;li&gt;&lt;strong&gt;twitch&lt;/strong&gt;&lt;/li&gt;Twitch login page will redirects to this endpoint after login success\n          as previously defined on authorize request parameter &lt;code&gt;redirect_uri&lt;/code&gt;\n          &lt;/ul&gt; action code : 10709"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1public~1namespaces~1{namespace}~1platforms~1clients~1active/get/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1oauth~1authorize/post/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1oauth~1authorize/post/description",
    "value": "The endpoint supports two response types:&lt;br/&gt;\n\t&lt;p&gt;&lt;strong&gt;1. Response Type == &#34;code&#34;:&lt;/strong&gt;&lt;/p&gt;\n\t&lt;p&gt;The endpoint returns an authorization code that will be used by the IAM client to exchange for an access token. It supports two different headers, the basic and the bearer header. Each behaves differently.&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;\n\t&lt;p&gt;&lt;strong&gt;The basic header&lt;/strong&gt;&lt;/p&gt;\n\t&lt;p&gt;The basic header\u2019s value is the base64 of the client ID and client secret. It is used by the developer whenever the developer authorizes a user on a same namespace.&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;\n\t&lt;p&gt;&lt;strong&gt;The bearer header&lt;/strong&gt;&lt;/p&gt;\n\t&lt;p&gt;The bearer header\u2019s value is an access token. It is used by the developer whenever the developer authorizes a user on a different namespace. The endpoint validates user\u2019s entitlement on the designated namespace for making sure the user is authorized for a designated namespace.&lt;/p&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Following are the responses returned by the endpoint:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;&lt;strong&gt;Authorize success&lt;/strong&gt;: redirects to the given URL with the following information: ?code={authorization code}&amp;state={state}&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;strong&gt;Authorize failure&lt;/strong&gt;: redirects to the given URL with the following information:?error=access_denied&amp;error_description=...&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\t &lt;p&gt;&lt;strong&gt;2. Response Type == &#34;token&#34;:&lt;/strong&gt;&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;\n\t&lt;p&gt;&lt;strong&gt;Authorize success&lt;/strong&gt;: redirects to the given URL with the following information:&lt;/p&gt;\n\t&lt;p&gt;#access_token={accesstoken}&amp;expires_in={expiration duration in seconds}&amp;token_type=Bearer&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;\n\t&lt;p&gt;&lt;strong&gt;Authorize failure&lt;/strong&gt;: redirects to the given URL with the following information:&lt;/p&gt;\n\t&lt;p&gt;?error=access_denied&amp;error_description=...&lt;/p&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v2~1admin~1namespaces~1{namespace}~1users~1{userId}~1enable/put/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:USERSTATUS:USER:{userId} [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v2~1admin~1namespaces~1{namespace}~1users~1{userId}~1enable/put/description",
    "value": "Required permissions &#39;ADMIN:NAMESPACE:{namespace}:USERSTATUS:USER:{userId} [UPDATE]&#39;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v2~1admin~1namespaces~1{namespace}~1countries~1agerestrictions/get/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:AGERESTRICTION [READ]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v2~1admin~1namespaces~1{namespace}~1countries~1agerestrictions/get/description",
    "value": "Required permission &#39;ADMIN:NAMESPACE:{namespace}:AGERESTRICTION [READ]&#39;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v4~1admin~1namespaces~1{namespace}~1users~1{userId}~1roles/post/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:ROLE:USER:* [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v4~1admin~1namespaces~1{namespace}~1users~1{userId}~1roles/post/responses/500/description",
    "value": ""
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v4~1admin~1namespaces~1{namespace}~1users~1{userId}~1roles/post/responses/422/description",
    "value": ""
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v4~1admin~1namespaces~1{namespace}~1users~1{userId}~1roles/post/description",
    "value": "This endpoint requires ADMIN:NAMESPACE:{namespace}:ROLE:USER:* [UPDATE] permission.\n\nNew role will be appended to user&#39;s current roles. Request body need to specify allowed namespace for given role to support new role restriction.\nSkipped the check whether the user performing the request is a role manager / assigner since there is a plan to discard the role manager / assigner.\n"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v4~1admin~1namespaces~1{namespace}~1users~1{userId}~1roles/delete/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:ROLE:USER:* [Delete]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v4~1admin~1namespaces~1{namespace}~1users~1{userId}~1roles/delete/description",
    "value": "This endpoint requires ADMIN:NAMESPACE:{namespace}:ROLE:USER:* [Delete] permission.\n\nRemove a role from user&#39;s roles.\n"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v4~1admin~1namespaces~1{namespace}~1users~1{userId}~1roles/get/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:ROLE:USER:* [READ]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v4~1admin~1namespaces~1{namespace}~1users~1{userId}~1roles/put/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:ROLE:USER:* [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v4~1admin~1namespaces~1{namespace}~1users~1{userId}~1roles/put/description",
    "value": "This endpoint requires ADMIN:NAMESPACE:{namespace}:ROLE:USER:* [UPDATE] permission.\n\nUser&#39;s roles will be replaced with roles from request body.\n"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v2~1public~1namespaces~1{namespace}~1users~1{userId}/patch/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v2~1public~1namespaces~1{namespace}~1users~1{userId}/patch/description",
    "value": "&lt;br&gt;&lt;p&gt;This Endpoint support update user based on given data. &lt;b&gt;Single request can update single field or multi fields.&lt;/b&gt;&lt;/p&gt; This endpoint require valid user access token to accessed. &lt;p&gt;Supported field {Country, DisplayName, LanguageTag}&lt;/p&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v2~1public~1namespaces~1{namespace}~1users~1{userId}/get/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1users~1{userId}~1codes/get/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:USER:{userId}:CODE [READ]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1users~1{userId}~1codes/get/description",
    "value": "[WARNING] This endpoint is only for testing purpose. &lt;br&gt;This endpoint get active user verification\n\t\tcode. There are 3 scenario of getting verification codes : after account registration, after reset password \n\t\trequest, and after headless account upgrade. All of them will be returned on this endpoint. Required permission\n \t\t&#39;ADMIN:NAMESPACE:{namespace}:USER:{userId}:CODE&#39; [READ] &lt;br&gt;action code: 10146"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1byLoginId/get/security",
    "value": [
      {
        "HasPermission": [
          "NAMESPACE:{namespace}:USER [READ]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1byLoginId/get/description",
    "value": "Required permission &#39;NAMESPACE:{namespace}:USER [READ]&#39;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1roles/post/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:ROLE [CREATE]",
          "ROLE:ADMIN [CREATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1roles/post/description",
    "value": "&lt;p&gt;Required permission &#39;ROLE:ADMIN [CREATE]&#39; or &#39;ADMIN:ROLE [CREATE]&#39; &lt;/p&gt;\n\t\t\t&lt;p&gt;Required Permission &#39;ROLE:ADMIN [CREATE]&#39; is going to be &lt;strong&gt;DEPRECATED&lt;/strong&gt; for security purpose.\n\t\t\tIt is going to be deprecated on &lt;strong&gt;31 JANUARY 2019&lt;/strong&gt;, please use permission &#39;ADMIN:ROLE [CREATE]&#39; instead.&lt;/p&gt;\n\t\t\t&lt;p&gt;Role can only be assigned to other users by the role&#39;s manager.&lt;/p&gt;\n\t\t\t&lt;p&gt;If role is an administrator role (i.e. AdminRole == true), it will list out the role&#39;s members.&lt;/p&gt;\n\t\t\t&lt;p&gt;Administrator role can be created only when at least 1 manager is specified.&lt;/p&gt;\n\t\t\t"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1roles/get/security",
    "value": [
      {
        "HasPermission": [
          "ROLE [READ]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1roles/get/description",
    "value": "Required permission &#39;ROLE [READ]&#39;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1users~1{userId}~1code~1request/post/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:USER:{userId} [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1users~1{userId}~1code~1request/post/description",
    "value": "Required permission &#39;ADMIN:NAMESPACE:{namespace}:USER:{userId} [UPDATE]&#39;\n&lt;p&gt;The verification code is sent to email address.&lt;/p&gt;\n&lt;p&gt;Available contexts for use : &lt;/p&gt;\n&lt;ol&gt;\n\t&lt;li&gt;&lt;strong&gt;UserAccountRegistration&lt;/strong&gt;\n\t\t&lt;p&gt;a context type used for verifying email address in user account registration. It returns 409 if the email address already verified. \n\t\t&lt;strong&gt;&lt;em&gt;It is the default context if the Context field is empty&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;\n\t&lt;/li&gt;\n\t&lt;li&gt;&lt;strong&gt;UpdateEmailAddress&lt;/strong&gt;\n\t\t&lt;p&gt;a context type used for verify user before updating email address.(Without email address verified checking)&lt;/p&gt;\n\t&lt;/li&gt;\n\t&lt;li&gt;&lt;strong&gt;upgradeHeadlessAccount&lt;/strong&gt;\n\t\t&lt;p&gt;The context is intended to be used whenever the email address wanted to be automatically verified on upgrading a headless account.  \n\t\t\tIf this context used, IAM rejects the request if the email address is already used by others by returning HTTP Status Code 409.&lt;/p&gt;\n\t&lt;/li&gt;\n&lt;/ol&gt;\n&lt;p&gt;action code: 10116&lt;/p&gt;\n"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1bans/get/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:BAN [READ]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1bans/get/description",
    "value": "Required permission &#39;ADMIN:BAN [READ]&#39; &lt;br&gt;Ban type is the code\n\t\t\tavailable for ban assignment. It is applicable globally for any namespace.  &lt;br&gt;action code : 10201"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1users~1{userId}~1roles/patch/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:ROLE:USER:{userId} [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1users~1{userId}~1roles/patch/responses/422/description",
    "value": ""
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1users~1{userId}~1roles/patch/description",
    "value": "This endpoint requires ADMIN:NAMESPACE:{namespace}:ROLE:USER:{userId} [UPDATE] permission.\n\nUser&#39;s roles will be updated with given roles (replacing current user&#39;s role). Request body need to specify allowed namespace for given role to support new role restriction.\nSkipped the check whether the user performing the request is a role manager / assigner since there is a plan to discard the role manager / assigner.\n"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1users~1{userId}~1roles/delete/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:ROLE:USER:{userId} [DELETE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1users~1{userId}~1roles/delete/description",
    "value": "Required permission &#39;ADMIN:NAMESPACE:{namespace}:ROLE:USER:{userId} [DELETE]&#39;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1oauth~1revoke~1user/post/security",
    "value": [
      {
        "HasPermission": [
          "NAMESPACE:{namespace}:USER:{userID}:ADMIN [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1oauth~1revoke~1user/post/description",
    "value": "&lt;h2&gt;The endpoint is going to be deprecated at 21 August, 2018. Please use this instead: oauth/namespaces/{namespace}/users/{userId}/revoke&lt;/h2&gt;\n\t\t\t&lt;p&gt;This endpoint revokes a user. &lt;/p&gt;\n\t\t\t&lt;p&gt;This endpoint requires all requests to have Authorization header set with Bearer access authentication with valid access token.&lt;/p&gt;\n\t\t\t&lt;p&gt;Required permission &#39;NAMESPACE:{namespace}:USER:{userID}:ADMIN [UPDATE]&#39;&lt;/p&gt;\n\t\t\t&lt;p&gt;When other clients know that the userID has been revoked and the token is issued before the revocation, forcing a new token will contain banned permissions. &lt;/p&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1public~1namespaces~1{namespace}~1users~1{userId}~1platforms/get/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1public~1namespaces~1{namespace}~1users~1{userId}~1platforms/get/description",
    "value": "&lt;p&gt;This endpoint retrieves platform accounts linked to user. Required valid user authorization.\n\t\t\t\t\t&lt;br&gt;action code: 10128 &lt;/p&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1users~1{userId}~1platforms~1{platformId}/delete/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:USER:{userId} [DELETE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1users~1{userId}~1platforms~1{platformId}/delete/description",
    "value": "&lt;p&gt;Required permission &#39;ADMIN:NAMESPACE:{namespace}:USER:{userId} [DELETE]&#39;.\n\t\t\t&lt;h2&gt;Supported platforms:&lt;/h2&gt;\n\t\t\t&lt;ul&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;steam&lt;/strong&gt;&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;steamopenid&lt;/strong&gt;&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;facebook&lt;/strong&gt;&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;google&lt;/strong&gt;&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;oculus&lt;/strong&gt;&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;twitch&lt;/strong&gt;&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;android&lt;/strong&gt;&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;ios&lt;/strong&gt;&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;apple&lt;/strong&gt;&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;device&lt;/strong&gt;&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;discord&lt;/strong&gt;&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;awscognito&lt;/strong&gt;&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;epicgames&lt;/strong&gt;&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;nintendo&lt;/strong&gt;&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;stadia&lt;/strong&gt;&lt;/li&gt;\n\t\t\t&lt;/ul&gt;\n\t\t\t&lt;p&gt;Unlink user&#39;s account from a specific platform. &#39;justice&#39; platform might have multiple accounts from different namespaces linked.\n\t\t\t&lt;br&gt;&lt;i&gt;platformNamespace&lt;/i&gt; need to be specified when the platform ID is &#39;justice&#39;.\n\t\t\t&lt;br&gt;\n\t\t\t&lt;br&gt;Unlink user&#39;s account from justice platform will enable password token grant and password update.\n\t\t\t&lt;br&gt;\n\t\t\t&lt;br&gt;If you want to unlink user&#39;s account in a game namespace, you have to specify &lt;i&gt;platformNamespace&lt;/i&gt; to that game namespace.\n\t\t\t&lt;br&gt;\n\t\t\t&lt;br&gt;action code : 10121 &lt;/p&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1oauth~1token/post/security",
    "value": [
      {
        "HasPermission": [],
        "HasScope": [
          "of"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1oauth~1token/post/description",
    "value": "&lt;p&gt;This endpoint supports grant type:&lt;/p&gt;&lt;ol&gt;\n\t \t\t&lt;li&gt;Grant Type == &lt;code&gt;authorization_code&lt;/code&gt;:&lt;br /&gt;\n\t\t\t\t&amp;nbsp;&amp;nbsp;&amp;nbsp; It generates the user token by given the authorization\n\t\t\t\tcode which generated in &#34;/v3/oauth/auth&#34; API response. It should also pass\n\t\t\t\tin the redirect_uri, which should be the same as generating the\n\t\t\t\tauthorization code request.\n\t\t\t&lt;/li&gt;\n\t\t\t&lt;li&gt;Grant Type == &lt;code&gt;refresh_token&lt;/code&gt;:&lt;br /&gt;\n\t \t\t\t&amp;nbsp;&amp;nbsp;&amp;nbsp; Used to get a new access token for a valid refresh token.\n\t\t\t&lt;/li&gt;\n\t\t\t&lt;li&gt;Grant Type == &lt;code&gt;client_credentials&lt;/code&gt;:&lt;br /&gt;\n\t \t\t\t&amp;nbsp;&amp;nbsp;&amp;nbsp; It generates a token by checking the client credentials provided through Authorization header.\n\t\t\t&lt;/li&gt;&lt;/ol&gt;\n\t\t\t&lt;h2&gt;Access Token Content&lt;/h2&gt;\n\t\t\t&lt;p&gt;Following is the access token\u2019s content:&lt;/p&gt;\n\t\t\t&lt;ul&gt;\n\t\t\t&lt;li&gt;\n\t\t\t\t&lt;p&gt;&lt;strong&gt;namespace&lt;/strong&gt;. It is the namespace the token was generated from.&lt;/p&gt;\n\t\t\t&lt;/li&gt;\n\t\t\t&lt;li&gt;\n\t\t\t\t&lt;p&gt;&lt;strong&gt;display_name&lt;/strong&gt;. The display name of the sub. It is empty if the token is generated from the client credential&lt;/p&gt;\n\t\t\t&lt;/li&gt;\n\t\t\t&lt;li&gt;\n\t\t\t\t&lt;p&gt;&lt;strong&gt;roles&lt;/strong&gt;. The sub\u2019s roles. It is empty if the token is generated from the client credential&lt;/p&gt;\n\t\t\t&lt;/li&gt;\n\t\t\t&lt;li&gt;\n\t\t\t\t&lt;p&gt;&lt;strong&gt;namespace_roles&lt;/strong&gt;. The sub\u2019s roles scoped to namespace. Improvement from roles, which make the role scoped to specific namespace instead of global to publisher namespace&lt;/p&gt;\n\t\t\t&lt;/li&gt;\n\t\t\t&lt;li&gt;\n\t\t\t\t&lt;p&gt;&lt;strong&gt;permissions&lt;/strong&gt;. The sub or aud\u2019 permissions&lt;/p&gt;\n\t\t\t&lt;/li&gt;\n\t\t\t&lt;li&gt;\n\t\t\t\t&lt;p&gt;&lt;strong&gt;bans&lt;/strong&gt;. The sub\u2019s list of bans. It is used by the IAM client for validating the token.&lt;/p&gt;\n\t\t\t&lt;/li&gt;\n\t\t\t&lt;li&gt;\n\t\t\t\t&lt;p&gt;&lt;strong&gt;jflgs&lt;/strong&gt;. It stands for Justice Flags. It is a special flag used for storing additional status information regarding the sub. It is implemented as a bit mask. Following explains what each bit represents:&lt;/p&gt;\n\t\t\t&lt;ul&gt;\n\t\t\t\t&lt;li&gt;&lt;p&gt;1: Email Address Verified&lt;/p&gt;&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;p&gt;2: Phone Number Verified&lt;/p&gt;&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;p&gt;4: Anonymous&lt;/p&gt;&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;p&gt;8: Suspicious Login&lt;/p&gt;&lt;/li&gt;\n\t\t\t&lt;/ul&gt;\n\t\t\t&lt;/li&gt;\n\t\t\t&lt;li&gt;\n\t\t\t\t&lt;p&gt;&lt;strong&gt;aud&lt;/strong&gt;. The aud is the targeted resource server.&lt;/p&gt;\n\t\t\t&lt;/li&gt;\n\t\t\t&lt;li&gt;\n\t\t\t\t&lt;p&gt;&lt;strong&gt;iat&lt;/strong&gt;. The time the token issues at. It is in Epoch time format&lt;/p&gt;\n\t\t\t&lt;/li&gt;\n\t\t\t&lt;li&gt;\n\t\t\t\t&lt;p&gt;&lt;strong&gt;exp&lt;/strong&gt;. The time the token expires. It is in Epoch time format&lt;/p&gt;\n\t\t\t&lt;/li&gt;\n\t\t\t&lt;li&gt;\n\t\t\t\t&lt;p&gt;&lt;strong&gt;client_id&lt;/strong&gt;. The UserID. The sub is omitted if the token is generated from client credential&lt;/p&gt;\n\t\t\t&lt;/li&gt;\t\n\t\t\t&lt;li&gt;\n\t\t\t\t&lt;p&gt;&lt;strong&gt;scope&lt;/strong&gt;. The scope of the access request, expressed as a list of space-delimited, case-sensitive strings&lt;/p&gt;\n\t\t\t&lt;/li&gt;\n\t\t\t&lt;/ul&gt;\n\t\t\t&lt;h2&gt;Bans&lt;/h2&gt;\n\t\t\t&lt;p&gt;The JWT contains user&#39;s active bans with its expiry date. List of ban types can be obtained from /bans.&lt;/p&gt;\n\t\t\t&lt;h2&gt;Track Login History&lt;/h2&gt;\n\t\t\t&lt;p&gt;This endpoint will track login history to detect suspicious login activity, please provide &#34;device_id&#34; (alphanumeric) in request header parameter otherwise we will set to &#34;unknown&#34;.&lt;/p&gt;\n\t\t\t&lt;p&gt;Align with General Data Protection Regulation in Europe, user login history will be kept within 28 days by default&#34;&lt;/p&gt;\n\t\t\t&lt;p&gt;action code: 10703"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v2~1admin~1namespaces~1{namespace}~1users~1{userId}~1disable/put/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:USERSTATUS:USER:{userId} [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v2~1admin~1namespaces~1{namespace}~1users~1{userId}~1disable/put/description",
    "value": "Required permissions &#39;ADMIN:NAMESPACE:{namespace}:USERSTATUS:USER:{userId} [UPDATE]&#39;\n\t\t&lt;p&gt;For &lt;strong&gt;Deletion Account&lt;/strong&gt; purpose fill the reason with:&lt;/p&gt;\n\t\t&lt;ul&gt;\n\t\t&lt;li&gt;&lt;strong&gt;DeactivateAccount&lt;/strong&gt; : if your deletion request comes from user&lt;/li&gt;\n\t\t&lt;li&gt;&lt;strong&gt;AdminDeactivateAccount&lt;/strong&gt; : if your deletion request comes from admin&lt;/li&gt;\n\t\t&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1roles~1{roleId}~1members/post/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:ROLE [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1roles~1{roleId}~1members/post/description",
    "value": "&lt;p&gt;Required permission &#39;ADMIN:ROLE [UPDATE]&#39;&lt;/p&gt;\n\t\t\t&lt;p&gt;Admin roles has its members listed in the role.&lt;/p&gt;\n\t\t\t&lt;p&gt;Role can only be assigned to other users by the role&#39;s manager.&lt;/p&gt; &lt;br&gt;action code: 10410&lt;/br&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1roles~1{roleId}~1members/delete/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:ROLE [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1roles~1{roleId}~1members/delete/description",
    "value": "&lt;p&gt;Required permission &#39;ADMIN:ROLE [UPDATE]&#39;&lt;/p&gt;\n\t\t\t&lt;p&gt;Admin roles has its members listed in the role.&lt;/p&gt;\n\t\t\t&lt;p&gt;Role can only be assigned to other users by the role&#39;s manager.&lt;/p&gt; &lt;br&gt; action code: 10411"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1roles~1{roleId}~1members/get/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:ROLE [READ]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1roles~1{roleId}~1members/get/description",
    "value": "&lt;p&gt;Required permission &#39;ADMIN:ROLE [READ]&#39;&lt;/p&gt;\n&lt;p&gt;Admin roles has its members listed in the role.&lt;/p&gt;\n&lt;p&gt;action code: 10416&lt;/p&gt;\n"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1users~1me/get/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1users~1me/get/description",
    "value": "&lt;p&gt;Require valid user authorization&lt;br&gt;Get my user data&lt;br&gt;action code : 10147 &lt;/p&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1platforms~1{platformId}~1clients/patch/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:PLATFORM:{platformId}:CLIENT [CREATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1platforms~1{platformId}~1clients/patch/description",
    "value": "&lt;p&gt;This is the API to Add 3rd Platform Credential.&lt;/p&gt;\n\t\t\t\t\t &lt;p&gt;It needs ADMIN:NAMESPACE:{namespace}:PLATFORM:{platformId}:CLIENT [CREATE] resource.&lt;/p&gt;\n\t\t\t\t\t &lt;p&gt;The secret for &lt;strong&gt;apple&lt;/strong&gt; is base64 encoded private key.&lt;/p&gt;\n\t\t"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1platforms~1{platformId}~1clients/get/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:PLATFORM:{platformId}:CLIENT [READ]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1platforms~1{platformId}~1clients/post/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:PLATFORM:{platformId}:CLIENT [CREATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1platforms~1{platformId}~1clients/post/description",
    "value": "&lt;p&gt;This is the API to Add 3rd Platform Credential.&lt;/p&gt;\n\t\t\t\t\t &lt;p&gt;It needs ADMIN:NAMESPACE:{namespace}:PLATFORM:{platformId}:CLIENT [CREATE] resource.&lt;/p&gt;\n\t\t\t\t\t &lt;p&gt;The secret for &lt;strong&gt;apple&lt;/strong&gt; is base64 encoded private key.&lt;/p&gt;\n\t\t"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1platforms~1{platformId}~1clients/delete/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:PLATFORM:{platformId}:CLIENT [DELETE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1platforms~1sso/get/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:PLATFORM:*:SSO [READ]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1platforms~1sso/get/operationId",
    "value": "RetrieveAllSSOLoginPlatformCredentialV3"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1{userId}/get/security",
    "value": [
      {
        "HasPermission": [
          "NAMESPACE:{namespace}:USER:{userId} [READ]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1{userId}/get/description",
    "value": "Required permission &#39;NAMESPACE:{namespace}:USER:{userId} [READ]&#39;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1{userId}/delete/security",
    "value": [
      {
        "HasPermission": [
          "NAMESPACE:{namespace}:USER:{userId} [DELETE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1{userId}/delete/description",
    "value": "Required permission &#39;NAMESPACE:{namespace}:USER:{userId} [DELETE]&#39;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1{userId}/put/security",
    "value": [
      {
        "HasPermission": [
          "NAMESPACE:{namespace}:USER:{userId} [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1{userId}/put/description",
    "value": "&lt;p&gt;Required permission &#39;NAMESPACE:{namespace}:USER:{userId} [UPDATE]&#39;&lt;/p&gt;&lt;br&gt;&lt;p&gt;This Endpoint support update user based on given data. &lt;b&gt;Single request can update single field or multi fields.&lt;/b&gt;&lt;/p&gt; &lt;p&gt;Supported field {Country, DisplayName, LanguageTag}&lt;/p&gt;&lt;p&gt;Country use ISO3166-1 alpha-2 two letter, e.g. US.&lt;/p&gt;&lt;br&gt;&lt;b&gt;Several case of updating email address&lt;/b&gt;&lt;ul&gt;&lt;li&gt;User want to update email address of which have been verified, NewEmailAddress response field will be filled with new email address.&lt;/li&gt;&lt;li&gt;User want to update email address of which have not been verified, {LoginId, OldEmailAddress, EmailAddress} response field will be filled with new email address. &lt;/li&gt;&lt;li&gt;User want to update email address of which have been verified and updated before, {LoginId, OldEmailAddress, EmailAddress} response field will be filled with verified email before. NewEmailAddress response field will be filled with newest email address. &lt;/li&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1public~1namespaces~1{namespace}~1users~1me~1platforms~1{platformId}/post/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1public~1namespaces~1{namespace}~1users~1me~1platforms~1{platformId}/post/description",
    "value": "Required valid user authorization.\n\t\t&lt;p&gt;&lt;br&gt;&lt;b&gt;Prerequisite:&lt;/b&gt; \n\t\tPlatform client configuration need to be added to database for specific platformId. Namespace service URL need to be specified (refer to required environment variables).\n\t\t\t&lt;h2&gt;Supported platforms:&lt;/h2&gt;\n\t\t\t&lt;ul&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;steam&lt;/strong&gt;: The ticket\u2019s value is the authentication code returned by Steam.&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;steamopenid&lt;/strong&gt;: Steam&#39;s user authentication method using OpenID 2.0. The ticket&#39;s value is URL generated by Steam on web authentication&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;facebook&lt;/strong&gt;: The ticket\u2019s value is the authorization code returned by Facebook OAuth&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;google&lt;/strong&gt;: The ticket\u2019s value is the authorization code returned by Google OAuth&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;oculus&lt;/strong&gt;: The ticket\u2019s value is a string composed of Oculus&#39;s user ID and the nonce separated by a colon (:).&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;twitch&lt;/strong&gt;: The ticket\u2019s value is the authorization code returned by Twitch OAuth.&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;android&lt;/strong&gt;: The ticket&#39;s value is the Android\u2019s device ID&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;ios&lt;/strong&gt;: The ticket&#39;s value is the iOS\u2019s device ID.&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;apple&lt;/strong&gt;: The ticket\u2019s value is the authorization code returned by Apple OAuth.&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;device&lt;/strong&gt;: Every device that doesn&#39;t run Android and iOS is categorized as a device platform. The ticket&#39;s value is the device\u2019s ID.&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;discord&lt;/strong&gt;: The ticket\u2019s value is the authorization code returned by Discord OAuth.&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;ps4web&lt;/strong&gt;: The ticket\u2019s value is the authorization code returned by PSN OAuth.&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;xblweb&lt;/strong&gt;: The ticket\u2019s value is the authorization code returned by XBox Live OAuth.&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;awscognito&lt;/strong&gt;: The ticket\u2019s value is the aws cognito access token (JWT).&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;epicgames&lt;/strong&gt;: The ticket\u2019s value is an access-token obtained from Epicgames EOS Account Service.&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;nintendo&lt;/strong&gt;: The ticket\u2019s value is the authorization code(id_token) returned by Nintendo OAuth.&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;stadia&lt;/strong&gt;: The ticket\u2019s value is a JWT Token, which can be obtained after calling the Stadia SDK&#39;s function.&lt;/li&gt;\n\t\t\t&lt;/ul&gt;\n\t\t&lt;br&gt;action code : 10144"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1public~1namespaces~1{namespace}~1users~1me~1platforms~1{platformId}/delete/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1public~1namespaces~1{namespace}~1users~1me~1platforms~1{platformId}/delete/description",
    "value": "Required valid user authorization.\n\t\t\t&lt;h2&gt;Supported platforms:&lt;/h2&gt;\n\t\t\t&lt;ul&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;steam&lt;/strong&gt;&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;steamopenid&lt;/strong&gt;&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;facebook&lt;/strong&gt;&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;google&lt;/strong&gt;&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;oculus&lt;/strong&gt;&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;twitch&lt;/strong&gt;&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;android&lt;/strong&gt;&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;ios&lt;/strong&gt;&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;apple&lt;/strong&gt;&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;device&lt;/strong&gt;&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;discord&lt;/strong&gt;&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;awscognito&lt;/strong&gt;&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;epicgames&lt;/strong&gt;&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;nintendo&lt;/strong&gt;&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;stadia&lt;/strong&gt;&lt;/li&gt;\n\t\t\t&lt;/ul&gt;\n\t\t\t&lt;p&gt;Unlink user&#39;s account from a specific platform. &#39;justice&#39; platform might have multiple accounts from different namespaces linked.\n\t\t\t&lt;br&gt;&lt;i&gt;platformNamespace&lt;/i&gt; need to be specified when the platform ID is &#39;justice&#39;.\n\t\t\t&lt;br&gt;\n\t\t\t&lt;br&gt;Unlink user&#39;s account from justice platform will enable password token grant and password update.\n\t\t\t&lt;br&gt;\n\t\t\t&lt;br&gt;If you want to unlink user&#39;s account in a game namespace, you have to specify &lt;i&gt;platformNamespace&lt;/i&gt; to that game namespace.\n\t\t\t&lt;br&gt;\n\t\t\t&lt;br&gt;action code : 10121 &lt;/p&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1oauth~1jwks/get/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1oauth~1jwks/get/description",
    "value": "&lt;p&gt;This endpoint serves public keys for verifying JWT access tokens generated by this service.&lt;/p&gt;\n\t\t\t&lt;p&gt;When a client application wants to verify a JWT token, it needs to get the &#39;kid&#39; value found in the JWT token header and use it\n\t\t\tto look up the corresponding public key from a set returned by this endpoint. The client application can then use that public key to verify the JWT.&lt;/p&gt;\n\t\t\t&lt;p&gt;A client application might cache the keys so it doesn&#39;t need to do request every time it needs to verify a JWT token. If a client application\n\t\t\tcaches the keys and a key with the same &#39;kid&#39; cannot be found in the cache, it should then try to refresh the keys by making a request to this\n\t\t\tendpoint again.&lt;/p&gt;\n\t\t\t&lt;p&gt;Please refer to the RFC for more information about JWK (JSON Web Key): https://tools.ietf.org/html/rfc7517&lt;/p&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1users~1{userId}~1platforms~1justice~1{targetNamespace}/post/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:USER:{userId} [CREATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1roles~1{roleId}/patch/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:ROLE [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1roles~1{roleId}/patch/description",
    "value": "Required permission &#39;ADMIN:ROLE [UPDATE]&#39; &lt;br&gt;action code: 10402"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1roles~1{roleId}/get/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:ROLE [READ]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1roles~1{roleId}/get/description",
    "value": "Required permission &#39;ADMIN:ROLE [READ]&#39;&lt;br&gt; &lt;p&gt;action code: 10419&lt;/p&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1roles~1{roleId}/delete/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:ROLE [DELETE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1roles~1{roleId}/delete/description",
    "value": "Required permission &#39;&#39;ADMIN:ROLE [DELETE]&#39;&#39; &lt;br&gt;action code: 10403"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1users~1invite/post/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:USER:INVITE [CREATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1users~1invite/post/description",
    "value": "Required permission &#39;ADMIN:NAMESPACE:{namespace}:USER:INVITE [CREATE]\n\nUse this endpoint to invite admin or non-admin user and assign role to them. The role must be scoped to namespace.\nSubstitute the namespace in path parameter to desired role&#39;s namespace&#39;. An admin user can only\nassign role to namespaces that the admin user has the required permission. \nRole is optional, if not specified then it will only assign User role\n\nThe invited admin will also assigned with &#34;User&#34; role by default.\n"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1{userId}~1permissions/post/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:PERMISSION:USER:{userId} [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1{userId}~1permissions/post/description",
    "value": "&lt;p&gt;Required permission &#39;ADMIN:NAMESPACE:{namespace}:PERMISSION:USER:{userId} [UPDATE]&#39;&lt;/p&gt;\n\t\t\t&lt;p&gt;This endpoint will REPLACE user&#39;s permissions with the ones defined in body&lt;/p&gt;\n\t\t\t&lt;p&gt;Schedule contains cron string or date range (both are UTC, also in cron syntax) to indicate when a permission and action are in effect.&lt;/p&gt;\n\t\t\t&lt;p&gt;Both schedule types accepts quartz compatible cron syntax e.g. * * * * * * *.&lt;/p&gt;\n\t\t\t&lt;p&gt;In ranged schedule, first element will be start date, and second one will be end date&lt;/p&gt;\n\t\t\t&lt;p&gt;If schedule is set, the scheduled action must be valid too, that is between 1 to 15, inclusive&lt;/p&gt;\n\t\t\t&lt;p&gt;Syntax reference&lt;/p&gt;\n\t\t\t&lt;p&gt;Fields:&lt;/p&gt;\n\t\t\t&lt;ol&gt;\n\t\t\t&lt;li&gt;Seconds: 0-59 * / , -&lt;/li&gt;\n\t\t\t&lt;li&gt;Minutes: 0-59 * / , -&lt;/li&gt;\n\t\t\t&lt;li&gt;Hours: 0-23 * / , -&lt;/li&gt;\n\t\t\t&lt;li&gt;Day of month: 1-31 * / , - L W&lt;/li&gt;\n\t\t\t&lt;li&gt;Month: 1-12 JAN-DEC * / , -&lt;/li&gt;\n\t\t\t&lt;li&gt;Day of week: 0-6 SUN-SAT * / , - L #&lt;/li&gt;\n\t\t\t&lt;li&gt;Year: 1970-2099 * / , -&lt;/li&gt;\n\t\t\t&lt;/ol&gt;\n\t\t\t&lt;p&gt;Special characters:&lt;/p&gt;\n\t\t\t&lt;ol&gt;\n\t\t\t&lt;li&gt;*: all values in the fields, e.g. * in seconds fields indicates every second&lt;/li&gt;\n\t\t\t&lt;li&gt;/: increments of ranges, e.g. 3-59/15 in the minute field indicate the third minute of the hour and every 15 minutes thereafter&lt;/li&gt;\n\t\t\t&lt;li&gt;,: separate items of a list, e.g. MON,WED,FRI in day of week&lt;/li&gt;\n\t\t\t&lt;li&gt;-: range, e.g. 2010-2018 indicates every year between 2010 and 2018, inclusive&lt;/li&gt;\n\t\t\t&lt;li&gt;L: last, e.g. When used in the day-of-week field, it allows you to specify constructs such as &#34;the last Friday&#34; (5L) of a given month. In the day-of-month field, it specifies the last day of the month.&lt;/li&gt;\n\t\t\t&lt;li&gt;W: business day, e.g. if you were to specify 15W as the value for the day-of-month field, the meaning is: &#34;the nearest business day to the 15th of the month.&#34;&lt;/li&gt;\n\t\t\t&lt;li&gt;#: must be followed by a number between one and five. It allows you to specify constructs such as &#34;the second Friday&#34; of a given month.&lt;/li&gt;\n\t\t\t&lt;/ol&gt;\n\t\t\t"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1public~1namespaces~1{namespace}~1users~1bulk~1basic/post/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1public~1namespaces~1{namespace}~1users~1bulk~1basic/post/description",
    "value": "Required valid user authorization.\n\t\t&lt;p&gt;Notes:&lt;/p&gt;\n\t\t&lt;ul&gt;\n\t\t\t&lt;li&gt;This endpoint bulk get game users&#39; basic info by userId, max allowed 20 at a time&lt;/li&gt;\n\t\t\t&lt;li&gt;&lt;strong&gt;Result will include displayName(if it exists)&lt;/strong&gt;&lt;/li&gt;\n\t\t&lt;/ul&gt;\n\t\t"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1roles~1{roleId}~1admin/post/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:ROLE [UPDATE]",
          "ROLE:ADMIN [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1roles~1{roleId}~1admin/post/description",
    "value": "&lt;p&gt;Required permission &#39;ROLE:ADMIN [UPDATE]&#39; or &#39;ADMIN:ROLE [UPDATE]&#39;&lt;/p&gt;\n\t\t\t&lt;p&gt;Required Permission &#39;ROLE:ADMIN [UPDATE]&#39; is going to be &lt;strong&gt;DEPRECATED&lt;/strong&gt; for security purpose.\n\t\t\tIt is going to be deprecated on &lt;strong&gt;31 JANUARY 2019&lt;/strong&gt;, please use permission &#39;ADMIN:ROLE [UPDATE]&#39; instead.&lt;/p&gt;\n\t\t\t&lt;p&gt;Admin roles has its members listed in the role.&lt;/p&gt;\n\t\t\t&lt;p&gt;Role can be set as admin role only when it has at least 1 manager.&lt;/p&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1roles~1{roleId}~1admin/delete/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:ROLE [UPDATE]",
          "ROLE:ADMIN [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1roles~1{roleId}~1admin/delete/description",
    "value": "&lt;p&gt;Required permission &#39;ROLE:ADMIN [UPDATE]&#39; or &#39;ADMIN:ROLE [UPDATE]&#39;&lt;/p&gt;\n\t\t\t&lt;p&gt;Required Permission &#39;ROLE:ADMIN [UPDATE]&#39; is going to be &lt;strong&gt;DEPRECATED&lt;/strong&gt; for security purpose.\n\t\t\tIt is going to be deprecated on &lt;strong&gt;31 JANUARY 2019&lt;/strong&gt;, please use permission &#39;ADMIN:ROLE [UPDATE]&#39; instead.&lt;/p&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1roles~1{roleId}~1admin/get/security",
    "value": [
      {
        "HasPermission": [
          "ROLE [READ]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1roles~1{roleId}~1admin/get/description",
    "value": "&lt;p&gt;Required permission &#39;ROLE [READ]&#39;&lt;/p&gt;\n\t\t\t&lt;p&gt;Admin roles has its members listed in the role.&lt;/p&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1users~1{userId}~1status/patch/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:USERSTATUS:USER:{userId} [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1users~1{userId}~1status/patch/description",
    "value": "Required permissions &#39;ADMIN:NAMESPACE:{namespace}:USERSTATUS:USER:{userId} [UPDATE]&#39;\n\t\t&lt;p&gt;This endpoint disable or enable user account. Set the enable status on the request body to true to enable user account or set to false to disable it. &lt;/p&gt;\n\t\t&lt;p&gt;Disable user for &lt;strong&gt;Account Disable &lt;/strong&gt; purpose fill the reason with:&lt;/p&gt;\n\t\t&lt;ul&gt;\n\t\t&lt;li&gt;&lt;strong&gt;AdminDeactivateAccount&lt;/strong&gt; : if your disable account request comes from admin&lt;/li&gt;\n\t\t&lt;/ul&gt;\n\t\t&lt;p&gt;Enable user ignore field &#39;reason&#39; in the request body. &lt;/p&gt;\n\t\t&lt;br&gt;action code : 10143"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1oauth~1authorize/get/security",
    "value": [
      {
        "HasPermission": [],
        "HasScope": [
          "The"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1oauth~1authorize/get/responses/302/headers",
    "value": {
      "Location": {
        "description": "The Location header",
        "type": "string"
      }
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1oauth~1authorize/get/description",
    "value": "Initializes OAuth2.0 authorization code flow&lt;br/&gt;\n&lt;p&gt;The endpoint stores authorization request and redirects to login page with the authorization request id.\n\tThe user can then do the authentication on the login page. \n\tThe user will be redirected back to the requesting client with authorization code if successfully authenticated. \n&lt;/p&gt;\n&lt;p&gt;Only authorization code flow supported by this endpoint, implicit flow is not supported.&lt;/p&gt;\n&lt;ul&gt;\n\t&lt;li&gt;&lt;p&gt;&lt;strong&gt;Authorize success&lt;/strong&gt;: \n\t\tredirects to login page with the following information: ?request_id={authorization_request_id}&lt;/p&gt;\n\t&lt;/li&gt;\n\t&lt;li&gt;&lt;p&gt;&lt;strong&gt;Authorize failure&lt;/strong&gt;: \n\t\tredirects to the given redirect uri with the following information:\n\t\t?error={error_code}&amp;error_description={error description}&lt;/p&gt;\n\t&lt;/li&gt;\n&lt;/ul&gt;\n\t&lt;p&gt;Following are the error code based on the specification:&lt;/p&gt;\n&lt;ul&gt;\n\t&lt;li&gt;&lt;p&gt;invalid_request: The request is missing a required parameter, \n\t\tincludes an invalid parameter value, includes a parameter more than once, or is otherwise malformed.&lt;/p&gt;\n\t&lt;/li&gt;\n\t&lt;li&gt;&lt;p&gt;server_error: \n\t\tThe authorization server encountered an unexpected condition that prevented it from fulfilling the request.&lt;/p&gt;\n\t&lt;/li&gt;\n\t&lt;li&gt;&lt;p&gt;unauthorized_client: The client is not authorized to request a token using this method.&lt;/p&gt;&lt;/li&gt;\n\t&lt;li&gt;&lt;p&gt;access_denied: The resource owner or authorization server denied the request.&lt;/p&gt;&lt;/li&gt;\n\t&lt;li&gt;&lt;p&gt;invalid_scope: The requested scope is invalid, unknown, or malformed.&lt;/p&gt;&lt;/li&gt;\n\t&lt;li&gt;&lt;p&gt;unsupported_response_type: The authorization server does not support obtaining a token using this method.&lt;/p&gt;&lt;/li&gt;\n\t&lt;li&gt;&lt;p&gt;temporarily_unavailable: The authorization server is currently unable to handle the request \n\t\tdue to a temporary overloading or maintenance of the server.&lt;/p&gt;\n\t&lt;/li&gt;\n&lt;/ul&gt;\n\t&lt;p&gt;Please refer to the RFC for more information about authorization code flow: https://tools.ietf.org/html/rfc6749#section-4.1&lt;/p&gt;&lt;br&gt;\n\taction code: 10701\n\n"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v4~1public~1namespaces~1{namespace}~1users~1me~1headless~1code~1verify/post/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v4~1public~1namespaces~1{namespace}~1users~1me~1headless~1code~1verify/post/description",
    "value": "Require valid user access token.\n        \tThe endpoint upgrades a headless account by linking the headless account with the email address, username, and password. \n\t\t\tBy upgrading the headless account into a full account, the user could use the email address, username, and password for using Justice IAM.\n        \t&lt;br&gt;\n\t\t\tThe endpoint is a shortcut for upgrading a headless account and verifying the email address in one call. \n\t\t\tIn order to get a verification code for the endpoint, please check the &lt;a href=&#34;#operations-Users-PublicSendVerificationCodeV3&#34;&gt;send verification code endpoint&lt;/a&gt;.\n        \t&lt;br&gt;\n\t\t\tThis endpoint also have an ability to update user data (if the user data field is specified) right after the upgrade account process is done.\n\t\t\tSupported user data fields:\n\t\t\t\t&lt;ul&gt;\n\t\t\t\t\t&lt;li&gt;displayName&lt;/li&gt;\n\t\t\t\t\t&lt;li&gt;dateOfBirth : format YYYY-MM-DD, e.g. 2019-04-29&lt;/li&gt;\n\t\t\t\t\t&lt;li&gt;country : format ISO3166-1 alpha-2 two letter, e.g. US&lt;/li&gt;\n\t\t\t\t&lt;/ul&gt;\n        \taction code : 10124"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1oauth~1platforms~1{platformId}~1authorize/get/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1oauth~1platforms~1{platformId}~1authorize/get/description",
    "value": "&#39;Generate url to request auth code from third party platform &lt;br&gt;\n               &lt;h2&gt;Supported platforms:&lt;/h2&gt;&lt;ul&gt;\n               &lt;li&gt;&lt;strong&gt;steamopenid&lt;/strong&gt;&lt;/li&gt;This endpoint redirects to steam login page, then redirect back to platform\n               authenticate endpoint after successfully authenticating user steam.\n               &lt;li&gt;&lt;strong&gt;xblweb&lt;/strong&gt;&lt;/li&gt;This endpoint redirects to xbox login page, then redirect back to platform\n               authenticate endpoint after successfully authenticating xbox user.\n               &lt;li&gt;&lt;strong&gt;ps4web&lt;/strong&gt;&lt;/li&gt;This endpoint redirects to psn login page, then redirect back to platform\n               authenticate endpoint after successfully authenticating psn user.\n               &lt;li&gt;&lt;strong&gt;epicgames&lt;/strong&gt;&lt;/li&gt;This endpoint redirects to Epicgames OAuth login page. then redirect to platform\n               authenticate endpoint after successfully authenticating an Epicgames credential\n               &lt;li&gt;&lt;strong&gt;twitch&lt;/strong&gt;&lt;/li&gt;This endpoint redirects to twitch login page, then redirect back to platform\n               authenticate endpoint after successfully authenticating twitch user.\n               &lt;/ul&gt; action code : 10702&#39;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1{userId}~1platforms~1{platformId}~1link/post/security",
    "value": [
      {
        "HasPermission": [
          "NAMESPACE:{namespace}:USER:{userId} [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1{userId}~1platforms~1{platformId}~1link/post/description",
    "value": "&lt;p&gt;Required permission &#39;NAMESPACE:{namespace}:USER:{userId} [UPDATE]&#39;.&lt;/p&gt;\n\t\t\t&lt;p&gt;&lt;br&gt;&lt;b&gt;Prerequisite:&lt;/b&gt; Platform client configuration need to be added to database for specific platformId. Namespace service URL need to be specified (refer to required environment variables).\n&lt;h2&gt;Supported platforms:&lt;/h2&gt;\n\t\t\t&lt;ul&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;steam&lt;/strong&gt;: The ticket\u2019s value is the authentication code returned by Steam.&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;steamopenid&lt;/strong&gt;: Steam&#39;s user authentication method using OpenID 2.0. The ticket&#39;s value is URL generated by Steam on web authentication&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;facebook&lt;/strong&gt;: The ticket\u2019s value is the authorization code returned by Facebook OAuth&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;google&lt;/strong&gt;: The ticket\u2019s value is the authorization code returned by Google OAuth&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;oculus&lt;/strong&gt;: The ticket\u2019s value is a string composed of Oculus&#39;s user ID and the nonce separated by a colon (:).&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;twitch&lt;/strong&gt;: The ticket\u2019s value is the authorization code returned by Twitch OAuth.&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;android&lt;/strong&gt;: The ticket&#39;s value is the Android\u2019s device ID&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;ios&lt;/strong&gt;: The ticket&#39;s value is the iOS\u2019s device ID.&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;apple&lt;/strong&gt;: The ticket\u2019s value is the authorization code returned by Apple OAuth.&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;device&lt;/strong&gt;: Every device that does\u2019nt run Android and iOS is categorized as a device platform. The ticket&#39;s value is the device\u2019s ID.&lt;/li&gt;\n\t\t\t\t&lt;li&gt;&lt;strong&gt;discord&lt;/strong&gt;: The ticket\u2019s value is the authorization code returned by Discord OAuth.&lt;/li&gt;\n\t\t\t&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1users~1{userId}~1bans~1{banId}/patch/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:BAN:USER:{userId} [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1users~1{userId}~1bans~1{banId}/patch/description",
    "value": "Required permission ADMIN:NAMESPACE:{namespace}:BAN:USER:{userId}\n[UPDATE] &lt;br&gt;Set ban status for a single user for a specific ban. Retrieve\nuser ban and choose the ban ID. Set the form parameter to true/false to enable\nor disable the ban. &lt;br&gt;action code : 10142&#39;\n"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1oauth~1jwks/get/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1oauth~1jwks/get/description",
    "value": "&lt;p&gt;This endpoint serves public keys for verifying JWT access tokens generated by this service.&lt;/p&gt;\n\t\t\t&lt;p&gt;When a client application wants to verify a JWT token, it needs to get the &#39;kid&#39; value found in the JWT token header and use it\n\t\t\tto look up the corresponding public key from a set returned by this endpoint. The client application can then use that public key to verify the JWT.&lt;/p&gt;\n\t\t\t&lt;p&gt;A client application might cache the keys so it doesn&#39;t need to do request every time it needs to verify a JWT token. If a client application\n\t\t\tcaches the keys and a key with the same &#39;kid&#39; cannot be found in the cache, it should then try to refresh the keys by making a request to this\n\t\t\tendpoint again.&lt;/p&gt;\n\t\t\t&lt;p&gt;Please refer to the RFC for more information about JWK (JSON Web Key): https://tools.ietf.org/html/rfc7517&lt;/p&gt;\n\t\t\t&lt;br&gt;action code : 10709"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1clients/post/security",
    "value": [
      {
        "HasPermission": [
          "CLIENT:ADMIN [CREATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1clients/post/description",
    "value": "&lt;h2&gt;The endpoint is going to be deprecated at &lt;strong&gt;16 August, 2018&lt;/strong&gt;. Please use this instead: namespaces/{namespace}/clients&lt;/h2&gt;\n&lt;p&gt;Required permission &#39;CLIENT:ADMIN [CREATE]&#39;&lt;/p&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1clients/get/security",
    "value": [
      {
        "HasPermission": [
          "CLIENT [READ]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1clients/get/description",
    "value": "&lt;h2&gt;The endpoint is going to be deprecated at &lt;strong&gt;10 August, 2018&lt;/strong&gt;. Please use this instead: namespaces/{namespace}/clients&lt;/h2&gt;\n&lt;p&gt;Required permission &#39;CLIENT [READ]&#39;&lt;/p&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1platforms~1{platformId}~1users~1{platformUserId}/get/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1platforms~1{platformId}~1users~1{platformUserId}/get/description",
    "value": "Get User By Platform User ID\n\t\t\nThis endpoint return user information by given platform ID and platform user ID \n\n&lt;strong&gt;nintendo platform user ID&lt;/strong&gt;: NSA ID need to be appended with Environment ID using colon as separator. e.g kmzwa8awaa:dd1\n"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1public~1namespaces~1{namespace}~1requests~1{requestId}~1async~1status/get/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1authenticate/post/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1authenticate/post/responses/302/headers",
    "value": {
      "Location": {
        "description": "The Location header",
        "type": "string"
      }
    }
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1authenticate/post/description",
    "value": "&lt;p&gt;This endpoint is being used to authenticate a user account. \n\t\t\t\t\tIt validates user&#39;s email / username and password. Deactivated or login-banned users are unable to login\n\t\t\t\t\tRedirect URI and Client ID must be specified as a pair and only used to redirect to the specified\n\t\t\t\t\tredirect URI in case the requestId is no longer valid.&lt;/p&gt;\n\t\t\t\t\t&lt;br&gt;action code: 10801"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1{userId}~1upgradeHeadlessAccount/post/security",
    "value": [
      {
        "HasPermission": [
          "NAMESPACE:{namespace}:USER:{userId} [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1{userId}~1upgradeHeadlessAccount/post/description",
    "value": "Required permission &#39;NAMESPACE:{namespace}:USER:{userId} [UPDATE]&#39;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1clients~1{clientId}~1clientpermissions/post/security",
    "value": [
      {
        "HasPermission": [
          "CLIENT:ADMIN [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1clients~1{clientId}~1clientpermissions/post/description",
    "value": "Required permission &#39;CLIENT:ADMIN [UPDATE]&#39;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1public~1namespaces~1{namespace}~1users~1me~1password/put/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1public~1namespaces~1{namespace}~1users~1me~1password/put/description",
    "value": "Required valid user authorization. &lt;br&gt; action code: 10107"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1roles~1{roleId}~1users/get/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:USER [READ]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1roles~1{roleId}~1users/get/description",
    "value": "&lt;p&gt;Required permission &#39;ADMIN:NAMESPACE:{namespace}:USER [READ]&#39;&lt;/p&gt;\n\t\t\t&lt;p&gt;This endpoint search admin users which have the roleId&lt;/p&gt;\n\t\t\t&lt;p&gt;Notes : this endpoint only accept admin role. Admin Role is role which have admin status and members.\n\t\t\tUse endpoint [GET] /roles/{roleId}/admin to check the role status&lt;/p&gt;\n\t\t\t&lt;br&gt;action code : 10140"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1public~1namespaces~1{namespace}~1users~1me/patch/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1public~1namespaces~1{namespace}~1users~1me/patch/description",
    "value": "&lt;p&gt;Requires valid user access token &lt;/p&gt;\n&lt;br&gt;&lt;p&gt;This Endpoint support update user based on given data. &lt;b&gt;Single request can update single field or multi fields.&lt;/b&gt;&lt;/p&gt; \n&lt;p&gt;Supported field {country, displayName, languageTag, dateOfBirth}&lt;/p&gt;\n&lt;p&gt;Country use ISO3166-1 alpha-2 two letter, e.g. US.&lt;/p&gt;\n&lt;p&gt;Date of Birth format : YYYY-MM-DD, e.g. 2019-04-29.&lt;/p&gt;\n&lt;br&gt;&lt;b&gt;Several case of updating email address&lt;/b&gt;\n&lt;ul&gt;&lt;li&gt;User want to update email address of which have been verified, newEmailAddress response field will be filled with new email address.&lt;/li&gt;\n&lt;li&gt;User want to update email address of which have not been verified, { oldEmailAddress, emailAddress} response field will be filled with new email address. &lt;/li&gt;\n&lt;li&gt;User want to update email address of which have been verified and updated before, { oldEmailAddress, emailAddress} response field will be filled with verified email before. newEmailAddress response field will be filled with newest email address. &lt;/li&gt;\n&lt;p&gt;action code : 10103 &lt;/p&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1public~1namespaces~1{namespace}~1users~1me/put/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1public~1namespaces~1{namespace}~1users~1me/put/description",
    "value": "&lt;p&gt;Requires valid user access token &lt;/p&gt;\n&lt;br&gt;&lt;p&gt;This Endpoint support update user based on given data. &lt;b&gt;Single request can update single field or multi fields.&lt;/b&gt;&lt;/p&gt; \n&lt;p&gt;Supported field {country, displayName, languageTag, dateOfBirth}&lt;/p&gt;\n&lt;p&gt;Country use ISO3166-1 alpha-2 two letter, e.g. US.&lt;/p&gt;\n&lt;p&gt;Date of Birth format : YYYY-MM-DD, e.g. 2019-04-29.&lt;/p&gt;\n&lt;br&gt;&lt;b&gt;Several case of updating email address&lt;/b&gt;\n&lt;ul&gt;&lt;li&gt;User want to update email address of which have been verified, newEmailAddress response field will be filled with new email address.&lt;/li&gt;\n&lt;li&gt;User want to update email address of which have not been verified, { oldEmailAddress, emailAddress} response field will be filled with new email address. &lt;/li&gt;\n&lt;li&gt;User want to update email address of which have been verified and updated before, { oldEmailAddress, emailAddress} response field will be filled with verified email before. newEmailAddress response field will be filled with newest email address. &lt;/li&gt;\n&lt;br&gt;&lt;b&gt;Important notes:&lt;/b&gt;\n&lt;br&gt;&lt;p&gt;This endpoint provides support for client that doesn&#39;t have PATCH support, i.e. UE4 before v4.23 released.\n&lt;br&gt;If the client support PATCH method, use [PATCH] /iam/v3/public/namespaces/{namespace}/users/me instead&lt;/p&gt;&lt;br&gt;\n&lt;p&gt;action code : 10103 &lt;/p&gt;"
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1public~1namespaces~1{namespace}~1users~1me/put/operationId",
    "value": "UpdateUserV3"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1{userId}~1information/get/security",
    "value": [
      {
        "HasPermission": [
          "NAMESPACE:{namespace}:INFORMATION:USER:{userId} [READ]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1{userId}~1information/get/description",
    "value": "Required permissions &#39;NAMESPACE:{namespace}:INFORMATION:USER:{userId} [READ]&#39;."
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1{userId}~1information/delete/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:INFORMATION:USER:{userId} [DELETE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1{userId}~1information/delete/description",
    "value": "Required permissions &#39;ADMIN:NAMESPACE:{namespace}:INFORMATION:USER:{userId} [DELETE]&#39;."
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1{userId}~1roles/post/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:ROLE:USER:{userId} [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1{userId}~1roles/post/description",
    "value": "Required permission &#39;ADMIN:NAMESPACE:{namespace}:ROLE:USER:{userId} [UPDATE]&#39;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1agerestrictions~1countries/get/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:AGERESTRICTION [READ]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1agerestrictions~1countries/get/description",
    "value": "Required permission &#39;ADMIN:NAMESPACE:{namespace}:AGERESTRICTION [READ]&lt;br&gt;action code : 10139"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1search/get/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:USER:* [READ]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1search/get/description",
    "value": "&lt;h2&gt;The endpoint is deprecated. Please use this instead: iam/v3/admin/namespaces/{namespace}/users/search&lt;/h2&gt;\n&lt;p&gt;Search all users that match the query on these fields: all login IDs (email address, phone number, and platform user id),\nuserID, display name, and on the specified namespace. If the query is not defined, then it searches all users on the specified namespace.\nRequired permission &#39;ADMIN:NAMESPACE:{namespace}:USER:* [READ]&#39;&lt;/p&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v4~1admin~1namespaces~1{namespace}~1users~1{userId}~1email/put/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:USER:{userId} [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v4~1admin~1namespaces~1{namespace}~1users~1{userId}~1email/put/description",
    "value": "&lt;p&gt;Required permission &lt;pre&gt;&#39;ADMIN:NAMESPACE:{namespace}:USER:{userId} [UPDATE]&#39;&lt;/pre&gt;&lt;/p&gt;\n\n&lt;br&gt;&lt;p&gt;This is the endpoint for an admin to update a user email address.\nThis endpoint need a valid user token from an admin to verify its identity (email) before updating a user.&lt;/p&gt;\n"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1public~1namespaces~1{namespace}~1users~1me~1code~1request/post/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1public~1namespaces~1{namespace}~1users~1me~1code~1request/post/description",
    "value": "Required valid user authorization\n&lt;p&gt;The verification code is sent to email address&lt;/p&gt;\n&lt;p&gt;Available contexts for use : &lt;/p&gt;\n&lt;ol&gt;\n\t&lt;li&gt;\n\t\t&lt;strong&gt;UserAccountRegistration&lt;/strong&gt;\n\t\t&lt;p&gt;a context type used for verifying email address in user account registration. It returns 409 if the email address already verified. \n\t\t&lt;strong&gt;&lt;em&gt;It is the default context if the Context field is empty&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;\n\t&lt;/li&gt;\n\t&lt;li&gt;\n\t\t&lt;strong&gt;UpdateEmailAddress&lt;/strong&gt;\n\t\t&lt;p&gt;a context type used for verify user before updating email address.(Without email address verified checking)&lt;/p&gt;\n\t&lt;/li&gt;\n\t&lt;li&gt;&lt;strong&gt;upgradeHeadlessAccount&lt;/strong&gt;\n\t\t&lt;p&gt;The context is intended to be used whenever the email address wanted to be automatically verified on upgrading a headless account.  \n\t\tIf this context used, IAM rejects the request if the email address is already used by others by returning HTTP Status Code 409.&lt;/p&gt;\n\t&lt;/li&gt;\n&lt;/ol&gt;\n&lt;p&gt;action code: 10116&lt;/p&gt;\n"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1oauth~1namespaces~1{namespace}~1users~1{userId}~1revoke/post/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:USER:{userId} [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1oauth~1namespaces~1{namespace}~1users~1{userId}~1revoke/post/description",
    "value": "&lt;p&gt;This endpoint requires all requests to have authorization header set with bearer token.&lt;/p&gt;\n\t\t\t&lt;p&gt;Required permission &#39;ADMIN:NAMESPACE:{namespace}:USER:{userId} [UPDATE]&#39;&lt;/p&gt;\n\t\t\t&lt;p&gt;The endpoint revokes all access tokens and refresh tokens a user has prior the revocation time. It is a convenient feature for the developer (or admin) who wanted to revokes all user&#39;s access tokens and refresh tokens generated before some period of time.&lt;/p&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1{userId}~1roles~1{roleId}/post/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:ROLE:USER:{userId} [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1{userId}~1roles~1{roleId}/post/description",
    "value": "Required permission &#39;ADMIN:NAMESPACE:{namespace}:ROLE:USER:{userId} [UPDATE]&#39;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1{userId}~1roles~1{roleId}/delete/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:ROLE:USER:{userId} [DELETE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1{userId}~1roles~1{roleId}/delete/description",
    "value": "Required permission &#39;ADMIN:NAMESPACE:{namespace}:ROLE:USER:{userId} [DELETE]&#39;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1users~1search~1bulk/post/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:USER [READ]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1users~1search~1bulk/post/description",
    "value": "&lt;p&gt;Required permission &#39;ADMIN:NAMESPACE:{namespace}:USER [READ]&#39;&lt;/p&gt;\n\t\t\t&lt;p&gt;This endpoint search user by the list of email addresses&lt;/p&gt;\n\t\t\t&lt;br&gt;action code : 10132"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v4~1admin~1users~1me/patch/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v4~1admin~1users~1me/patch/description",
    "value": "&lt;p&gt;Requires valid user access token &lt;/p&gt;\n&lt;br&gt;&lt;p&gt;This Endpoint support update user based on given data. &lt;b&gt;Single request can update single field or multi fields.&lt;/b&gt;&lt;/p&gt; \n&lt;p&gt;Supported field {country, displayName, emailAddress, languageTag, dateOfBirth}&lt;/p&gt;\n&lt;p&gt;Country use ISO3166-1 alpha-2 two letter, e.g. US.&lt;/p&gt;\n&lt;p&gt;Date of Birth format : YYYY-MM-DD, e.g. 2019-04-29.&lt;/p&gt;\n&lt;br&gt;&lt;b&gt;Several case of updating email address&lt;/b&gt;\n&lt;ul&gt;&lt;li&gt;User want to update email address of which have been verified, newEmailAddress response field will be filled with new email address.&lt;/li&gt;\n&lt;li&gt;User want to update email address of which have not been verified, { oldEmailAddress, emailAddress} response field will be filled with new email address. &lt;/li&gt;\n&lt;li&gt;User want to update email address of which have been verified and updated before, { oldEmailAddress, emailAddress} response field will be filled with verified email before. newEmailAddress response field will be filled with newest email address. &lt;/li&gt;\n&lt;p&gt;action code : 10103 &lt;/p&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1admin~1namespaces~1{namespace}~1platforms~1all~1clients/get/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:PLATFORM:*:CLIENT [READ]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1{userId}~1logins~1histories/get/security",
    "value": [
      {
        "HasPermission": [
          "NAMESPACE:{namespace}:HISTORY:LOGIN:USER:{userId} [READ]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1namespaces~1{namespace}~1users~1{userId}~1logins~1histories/get/description",
    "value": "Required permission &#39;NAMESPACE:{namespace}:HISTORY:LOGIN:USER:{userId} [READ]&#39;&lt;p&gt;Notes for this endpoint: &lt;/p&gt; &lt;ul&gt;&lt;li&gt;This endpoint retrieve the first page of the data if `after` and `before` parameters is empty.&lt;/li&gt;&lt;li&gt;The maximum value of the limit is 100 and the minimum value of the limit is 1.&lt;/li&gt;&lt;li&gt;This endpoint retrieve the next page of the data if we provide `after` parameters with valid Unix timestamp.&lt;/li&gt;&lt;li&gt;This endpoint retrieve the previous page of the data if we provide `before` parameter with valid data Unix timestamp.&lt;/li&gt;&lt;ul&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v4~1public~1namespaces~1{namespace}~1test_users/post/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v4~1public~1namespaces~1{namespace}~1test_users/post/description",
    "value": "Create a test user and not send verification code email\n\t\t&lt;p&gt;\n\t\t&lt;b&gt;Required attributes:&lt;/b&gt;\n\t\t- verified: this new user is verified or not\n\t\t- authType: possible value is EMAILPASSWD\n\t\t- emailAddress: 5 to 254 characters\n\t\t- username: 3 to 48 characters, case insensitive, alphanumeric with allowed symbols underscore (_) and dot (.)\n\t\t- password: 8 to 32 characters, satisfy at least 3 out of 4 conditions(uppercase, lowercase letters, numbers and special characters) and should not have more than 2 equal characters in a row.\n\t\t- country: ISO3166-1 alpha-2 two letter, e.g. US.\n\t\t- dateOfBirth: YYYY-MM-DD, e.g. 1990-01-01. valid values are between 1905-01-01 until current date.\n\t\t&lt;br/&gt;\n\t\t&lt;b&gt;Not required attributes:&lt;/b&gt;\t\n\t\t- displayName: 1 to 48 characters\n\t\t&lt;/p&gt;\n\t\t&lt;p&gt;This endpoint support accepting agreements for the created user. Supply the accepted agreements in acceptedPolicies attribute.&lt;/p&gt;\n\t\t"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1oauth~1namespaces~1{namespace}~1platforms~1{platformId}~1token/post/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1oauth~1namespaces~1{namespace}~1platforms~1{platformId}~1token/post/description",
    "value": "&lt;h2&gt;The endpoint is going to be deprecated at 2 July, 2018. Please use this instead: oauth/platforms/{platformId}/token&lt;/h2&gt;\n\t\t\t&lt;p&gt;\n\t\t\t\tThis endpoint requires all requests to have Authorization header set with Basic access authentication\n\t\t\t\tconstructed from client id and client secret. For publisher-game namespace schema : Specify only either platform_token or device_id. Device token grant\n\t\t\t\tshould be requested along with device_id parameter against game namespace. Another 3rd party platform token grant should be requested\n\t\t\t\talong with platform_token parameter against publisher namespace.\n\t\t\t&lt;/p&gt;\n\t\t\t&lt;p&gt;\n\t\t\t\tSupported platforms:\n\t\t\t&lt;/p&gt;\n\t\t\t&lt;ol&gt;&lt;li&gt;&lt;strong&gt;steamopenid&lt;/strong&gt;: Steam&#39;s user authentication method using OpenID 2.0. The expected value of the platform token is the URL generated by Steam on web authentication&lt;/li&gt;&lt;/ol&gt;\n\t\t\t&lt;p&gt;The JWT contains user&#39;s active bans with its expiry date. List of ban types can be obtained from /iam/bans.&lt;/p&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v2~1admin~1namespaces~1{namespace}~1users~1{userId}/patch/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:USER:{userId} [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v2~1admin~1namespaces~1{namespace}~1users~1{userId}/patch/description",
    "value": "&lt;p&gt;Required permission &#39;ADMIN:NAMESPACE:{namespace}:USER:{userId} [UPDATE]&#39;&lt;/p&gt;&lt;br&gt;&lt;p&gt;This Endpoint support update user based on given data. &lt;b&gt;Single request can update single field or multi fields.&lt;/b&gt;&lt;/p&gt; &lt;p&gt;Supported field {Country, DisplayName, LanguageTag}&lt;/p&gt;&lt;p&gt;Country use ISO3166-1 alpha-2 two letter, e.g. US.&lt;/p&gt;&lt;br&gt;&lt;b&gt;Several case of updating email address&lt;/b&gt;&lt;ul&gt;&lt;li&gt;User want to update email address of which have been verified, NewEmailAddress response field will be filled with new email address.&lt;/li&gt;&lt;li&gt;User want to update email address of which have not been verified, {LoginId, OldEmailAddress, EmailAddress} response field will be filled with new email address. &lt;/li&gt;&lt;li&gt;User want to update email address of which have been verified and updated before, {LoginId, OldEmailAddress, EmailAddress} response field will be filled with verified email before. NewEmailAddress response field will be filled with newest email address. &lt;/li&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v2~1admin~1namespaces~1{namespace}~1users~1{userId}/get/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:USER:{userId} [READ]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v2~1admin~1namespaces~1{namespace}~1users~1{userId}/get/description",
    "value": "Required permission &#39;ADMIN:NAMESPACE:{namespace}:USER:{userId} [READ]&#39;"
  },
  {
    "op": "add",
    "path": "/paths/~1iam~1v3~1oauth~1namespaces~1{namespace}~1users~1{userId}~1platforms~1{platformId}~1platformToken/get/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1iam~1v3~1oauth~1namespaces~1{namespace}~1users~1{userId}~1platforms~1{platformId}~1platformToken/get/description",
    "value": "Retrieve User Third Party Platform Token&lt;br/&gt;\n&lt;p&gt;\nThis endpoint used for retrieving third party platform token for user that login using third party.\nPassing platform group name or it&#39;s member will return same access token that can be used across the platform members. \n&lt;/p&gt;\n&lt;p&gt;The third party platform and platform group covered for this is:&lt;/p&gt;\n&lt;ul&gt;\t\t\t\t\n\t&lt;li&gt;(psn) ps4web&lt;/li&gt;\n\t&lt;li&gt;(psn) ps4&lt;/li&gt;\n\t&lt;li&gt;(psn) ps5&lt;/li&gt;\n\t&lt;li&gt;epicgames&lt;/li&gt;\n\t&lt;li&gt;twitch&lt;/li&gt;\n\t&lt;li&gt;awscognito&lt;/li&gt;\n&lt;/ul&gt;"
  },
  {
    "op": "add",
    "path": "/securityDefinitions/HasScope",
    "value": {
      "authorizationUrl": "https://dummy.oauth.net/auth",
      "flow": "accessCode",
      "scopes": {
        "The": "The",
        "of": "of"
      },
      "tokenUrl": "https://dumy.oauth.net/token",
      "type": "oauth2"
    }
  },
  {
    "op": "add",
    "path": "/securityDefinitions/HasPermission",
    "value": {
      "authorizationUrl": "https://dummy.oauth.net/auth",
      "flow": "accessCode",
      "scopes": {
        "ADMIN:BAN [READ]": "ADMIN:BAN [READ]",
        "ADMIN:NAMESPACE:{namespace}:AGERESTRICTION [READ]": "ADMIN:NAMESPACE:{namespace}:AGERESTRICTION [READ]",
        "ADMIN:NAMESPACE:{namespace}:AGERESTRICTION [UPDATE]": "ADMIN:NAMESPACE:{namespace}:AGERESTRICTION [UPDATE]",
        "ADMIN:NAMESPACE:{namespace}:BAN:USER:{userId} [CREATE]": "ADMIN:NAMESPACE:{namespace}:BAN:USER:{userId} [CREATE]",
        "ADMIN:NAMESPACE:{namespace}:BAN:USER:{userId} [READ]": "ADMIN:NAMESPACE:{namespace}:BAN:USER:{userId} [READ]",
        "ADMIN:NAMESPACE:{namespace}:BAN:USER:{userId} [UPDATE]": "ADMIN:NAMESPACE:{namespace}:BAN:USER:{userId} [UPDATE]",
        "ADMIN:NAMESPACE:{namespace}:CLIENT [CREATE]": "ADMIN:NAMESPACE:{namespace}:CLIENT [CREATE]",
        "ADMIN:NAMESPACE:{namespace}:CLIENT [DELETE]": "ADMIN:NAMESPACE:{namespace}:CLIENT [DELETE]",
        "ADMIN:NAMESPACE:{namespace}:CLIENT [READ]": "ADMIN:NAMESPACE:{namespace}:CLIENT [READ]",
        "ADMIN:NAMESPACE:{namespace}:CLIENT [UPDATE]": "ADMIN:NAMESPACE:{namespace}:CLIENT [UPDATE]",
        "ADMIN:NAMESPACE:{namespace}:CLIENT:{clientId} [DELETE]": "ADMIN:NAMESPACE:{namespace}:CLIENT:{clientId} [DELETE]",
        "ADMIN:NAMESPACE:{namespace}:DELETIONSTATUS:USER:{userId} [READ]": "ADMIN:NAMESPACE:{namespace}:DELETIONSTATUS:USER:{userId} [READ]",
        "ADMIN:NAMESPACE:{namespace}:DELETIONSTATUS:USER:{userId} [UPDATE]": "ADMIN:NAMESPACE:{namespace}:DELETIONSTATUS:USER:{userId} [UPDATE]",
        "ADMIN:NAMESPACE:{namespace}:HISTORY:LOGIN:USER:{userId} [READ]": "ADMIN:NAMESPACE:{namespace}:HISTORY:LOGIN:USER:{userId} [READ]",
        "ADMIN:NAMESPACE:{namespace}:INFORMATION:USER:{userId} [DELETE]": "ADMIN:NAMESPACE:{namespace}:INFORMATION:USER:{userId} [DELETE]",
        "ADMIN:NAMESPACE:{namespace}:JUSTICE:USER:{userId} [READ]": "ADMIN:NAMESPACE:{namespace}:JUSTICE:USER:{userId} [READ]",
        "ADMIN:NAMESPACE:{namespace}:JUSTICE:USER:{userId} [UPDATE]": "ADMIN:NAMESPACE:{namespace}:JUSTICE:USER:{userId} [UPDATE]",
        "ADMIN:NAMESPACE:{namespace}:PASSWORD:USER [UPDATE]": "ADMIN:NAMESPACE:{namespace}:PASSWORD:USER [UPDATE]",
        "ADMIN:NAMESPACE:{namespace}:PASSWORD:USER:{userId} [UPDATE]": "ADMIN:NAMESPACE:{namespace}:PASSWORD:USER:{userId} [UPDATE]",
        "ADMIN:NAMESPACE:{namespace}:PERMISSION:USER:{userId} [CREATE]": "ADMIN:NAMESPACE:{namespace}:PERMISSION:USER:{userId} [CREATE]",
        "ADMIN:NAMESPACE:{namespace}:PERMISSION:USER:{userId} [DELETE]": "ADMIN:NAMESPACE:{namespace}:PERMISSION:USER:{userId} [DELETE]",
        "ADMIN:NAMESPACE:{namespace}:PERMISSION:USER:{userId} [UPDATE]": "ADMIN:NAMESPACE:{namespace}:PERMISSION:USER:{userId} [UPDATE]",
        "ADMIN:NAMESPACE:{namespace}:PLATFORM:*:CLIENT [READ]": "ADMIN:NAMESPACE:{namespace}:PLATFORM:*:CLIENT [READ]",
        "ADMIN:NAMESPACE:{namespace}:PLATFORM:*:SSO [READ]": "ADMIN:NAMESPACE:{namespace}:PLATFORM:*:SSO [READ]",
        "ADMIN:NAMESPACE:{namespace}:PLATFORM:{platformId}:CLIENT [CREATE]": "ADMIN:NAMESPACE:{namespace}:PLATFORM:{platformId}:CLIENT [CREATE]",
        "ADMIN:NAMESPACE:{namespace}:PLATFORM:{platformId}:CLIENT [DELETE]": "ADMIN:NAMESPACE:{namespace}:PLATFORM:{platformId}:CLIENT [DELETE]",
        "ADMIN:NAMESPACE:{namespace}:PLATFORM:{platformId}:CLIENT [READ]": "ADMIN:NAMESPACE:{namespace}:PLATFORM:{platformId}:CLIENT [READ]",
        "ADMIN:NAMESPACE:{namespace}:PLATFORM:{platformId}:SSO [CREATE]": "ADMIN:NAMESPACE:{namespace}:PLATFORM:{platformId}:SSO [CREATE]",
        "ADMIN:NAMESPACE:{namespace}:PLATFORM:{platformId}:SSO [DELETE]": "ADMIN:NAMESPACE:{namespace}:PLATFORM:{platformId}:SSO [DELETE]",
        "ADMIN:NAMESPACE:{namespace}:PLATFORM:{platformId}:SSO [READ]": "ADMIN:NAMESPACE:{namespace}:PLATFORM:{platformId}:SSO [READ]",
        "ADMIN:NAMESPACE:{namespace}:PLATFORM:{platformId}:SSO [UPDATE]": "ADMIN:NAMESPACE:{namespace}:PLATFORM:{platformId}:SSO [UPDATE]",
        "ADMIN:NAMESPACE:{namespace}:ROLE:USER:* [Delete]": "ADMIN:NAMESPACE:{namespace}:ROLE:USER:* [Delete]",
        "ADMIN:NAMESPACE:{namespace}:ROLE:USER:* [READ]": "ADMIN:NAMESPACE:{namespace}:ROLE:USER:* [READ]",
        "ADMIN:NAMESPACE:{namespace}:ROLE:USER:* [UPDATE]": "ADMIN:NAMESPACE:{namespace}:ROLE:USER:* [UPDATE]",
        "ADMIN:NAMESPACE:{namespace}:ROLE:USER:{userId} [DELETE]": "ADMIN:NAMESPACE:{namespace}:ROLE:USER:{userId} [DELETE]",
        "ADMIN:NAMESPACE:{namespace}:ROLE:USER:{userId} [UPDATE]": "ADMIN:NAMESPACE:{namespace}:ROLE:USER:{userId} [UPDATE]",
        "ADMIN:NAMESPACE:{namespace}:USER [READ]": "ADMIN:NAMESPACE:{namespace}:USER [READ]",
        "ADMIN:NAMESPACE:{namespace}:USER:* [READ]": "ADMIN:NAMESPACE:{namespace}:USER:* [READ]",
        "ADMIN:NAMESPACE:{namespace}:USER:INVITE [CREATE]": "ADMIN:NAMESPACE:{namespace}:USER:INVITE [CREATE]",
        "ADMIN:NAMESPACE:{namespace}:USER:{userId} [CREATE]": "ADMIN:NAMESPACE:{namespace}:USER:{userId} [CREATE]",
        "ADMIN:NAMESPACE:{namespace}:USER:{userId} [DELETE]": "ADMIN:NAMESPACE:{namespace}:USER:{userId} [DELETE]",
        "ADMIN:NAMESPACE:{namespace}:USER:{userId} [READ]": "ADMIN:NAMESPACE:{namespace}:USER:{userId} [READ]",
        "ADMIN:NAMESPACE:{namespace}:USER:{userId} [UPDATE]": "ADMIN:NAMESPACE:{namespace}:USER:{userId} [UPDATE]",
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:CODE [READ]": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:CODE [READ]",
        "ADMIN:NAMESPACE:{namespace}:USERSTATUS:USER:{userId} [UPDATE]": "ADMIN:NAMESPACE:{namespace}:USERSTATUS:USER:{userId} [UPDATE]",
        "ADMIN:ROLE [CREATE]": "ADMIN:ROLE [CREATE]",
        "ADMIN:ROLE [DELETE]": "ADMIN:ROLE [DELETE]",
        "ADMIN:ROLE [READ]": "ADMIN:ROLE [READ]",
        "ADMIN:ROLE [UPDATE]": "ADMIN:ROLE [UPDATE]",
        "ADMIN:USER:INVITE [CREATE]": "ADMIN:USER:INVITE [CREATE]",
        "BAN:ADMIN [READ]": "BAN:ADMIN [READ]",
        "CLIENT [READ]": "CLIENT [READ]",
        "CLIENT:ADMIN [CREATE]": "CLIENT:ADMIN [CREATE]",
        "CLIENT:ADMIN [DELETE]": "CLIENT:ADMIN [DELETE]",
        "CLIENT:ADMIN [UPDATE]": "CLIENT:ADMIN [UPDATE]",
        "NAMESPACE:{namespace}:CLIENT [READ]": "NAMESPACE:{namespace}:CLIENT [READ]",
        "NAMESPACE:{namespace}:HISTORY:LOGIN:USER:{userId} [READ]": "NAMESPACE:{namespace}:HISTORY:LOGIN:USER:{userId} [READ]",
        "NAMESPACE:{namespace}:INFORMATION:USER:{userId} [READ]": "NAMESPACE:{namespace}:INFORMATION:USER:{userId} [READ]",
        "NAMESPACE:{namespace}:JUSTICE:USER:{userId} [UPDATE]": "NAMESPACE:{namespace}:JUSTICE:USER:{userId} [UPDATE]",
        "NAMESPACE:{namespace}:PASSWORD:USER:{userId} [UPDATE]": "NAMESPACE:{namespace}:PASSWORD:USER:{userId} [UPDATE]",
        "NAMESPACE:{namespace}:PUBLISHER:USER:{userId} [READ]": "NAMESPACE:{namespace}:PUBLISHER:USER:{userId} [READ]",
        "NAMESPACE:{namespace}:USER [CREATE]": "NAMESPACE:{namespace}:USER [CREATE]",
        "NAMESPACE:{namespace}:USER [READ]": "NAMESPACE:{namespace}:USER [READ]",
        "NAMESPACE:{namespace}:USER:{userID}:ADMIN [UPDATE]": "NAMESPACE:{namespace}:USER:{userID}:ADMIN [UPDATE]",
        "NAMESPACE:{namespace}:USER:{userId} [DELETE]": "NAMESPACE:{namespace}:USER:{userId} [DELETE]",
        "NAMESPACE:{namespace}:USER:{userId} [READ]": "NAMESPACE:{namespace}:USER:{userId} [READ]",
        "NAMESPACE:{namespace}:USER:{userId} [UPDATE]": "NAMESPACE:{namespace}:USER:{userId} [UPDATE]",
        "ROLE [READ]": "ROLE [READ]",
        "ROLE:ADMIN [CREATE]": "ROLE:ADMIN [CREATE]",
        "ROLE:ADMIN [DELETE]": "ROLE:ADMIN [DELETE]",
        "ROLE:ADMIN [UPDATE]": "ROLE:ADMIN [UPDATE]"
      },
      "tokenUrl": "https://dumy.oauth.net/token",
      "type": "oauth2"
    }
  },
  {
    "op": "move",
    "from": "/security/0/authorization",
    "path": "/security/0/basic"
  },
  {
    "op": "remove",
    "path": "/security/1"
  }
]

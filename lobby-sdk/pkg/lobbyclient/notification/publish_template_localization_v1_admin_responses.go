// Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// Code generated by go-swagger; DO NOT EDIT.

package notification

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"
	"io/ioutil"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/AccelByte/accelbyte-go-sdk/lobby-sdk/pkg/lobbyclientmodels"
)

// PublishTemplateLocalizationV1AdminReader is a Reader for the PublishTemplateLocalizationV1Admin structure.
type PublishTemplateLocalizationV1AdminReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PublishTemplateLocalizationV1AdminReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewPublishTemplateLocalizationV1AdminNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewPublishTemplateLocalizationV1AdminUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewPublishTemplateLocalizationV1AdminForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewPublishTemplateLocalizationV1AdminNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewPublishTemplateLocalizationV1AdminInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		data, err := ioutil.ReadAll(response.Body())
		if err != nil {
			return nil, err
		}

		return nil, fmt.Errorf("Requested POST /lobby/v1/admin/notification/namespaces/{namespace}/templates/{templateSlug}/languages/{templateLanguage}/publish returns an error %d: %s", response.Code(), string(data))
	}
}

// NewPublishTemplateLocalizationV1AdminNoContent creates a PublishTemplateLocalizationV1AdminNoContent with default headers values
func NewPublishTemplateLocalizationV1AdminNoContent() *PublishTemplateLocalizationV1AdminNoContent {
	return &PublishTemplateLocalizationV1AdminNoContent{}
}

/*PublishTemplateLocalizationV1AdminNoContent handles this case with default header values.

  No Content
*/
type PublishTemplateLocalizationV1AdminNoContent struct {
}

func (o *PublishTemplateLocalizationV1AdminNoContent) Error() string {
	return fmt.Sprintf("[POST /lobby/v1/admin/notification/namespaces/{namespace}/templates/{templateSlug}/languages/{templateLanguage}/publish][%d] publishTemplateLocalizationV1AdminNoContent ", 204)
}

func (o *PublishTemplateLocalizationV1AdminNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPublishTemplateLocalizationV1AdminUnauthorized creates a PublishTemplateLocalizationV1AdminUnauthorized with default headers values
func NewPublishTemplateLocalizationV1AdminUnauthorized() *PublishTemplateLocalizationV1AdminUnauthorized {
	return &PublishTemplateLocalizationV1AdminUnauthorized{}
}

/*PublishTemplateLocalizationV1AdminUnauthorized handles this case with default header values.

  Unauthorized
*/
type PublishTemplateLocalizationV1AdminUnauthorized struct {
	Payload *lobbyclientmodels.RestapiErrorResponseV1
}

func (o *PublishTemplateLocalizationV1AdminUnauthorized) Error() string {
	return fmt.Sprintf("[POST /lobby/v1/admin/notification/namespaces/{namespace}/templates/{templateSlug}/languages/{templateLanguage}/publish][%d] publishTemplateLocalizationV1AdminUnauthorized  %+v", 401, o.ToString())
}

func (o *PublishTemplateLocalizationV1AdminUnauthorized) ToString() string {
	b, err := json.Marshal(o.Payload)
	if err != nil {
		fmt.Println(err)
	}

	return fmt.Sprintf("%+v", string(b))
}

func (o *PublishTemplateLocalizationV1AdminUnauthorized) GetPayload() *lobbyclientmodels.RestapiErrorResponseV1 {
	return o.Payload
}

func (o *PublishTemplateLocalizationV1AdminUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(lobbyclientmodels.RestapiErrorResponseV1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPublishTemplateLocalizationV1AdminForbidden creates a PublishTemplateLocalizationV1AdminForbidden with default headers values
func NewPublishTemplateLocalizationV1AdminForbidden() *PublishTemplateLocalizationV1AdminForbidden {
	return &PublishTemplateLocalizationV1AdminForbidden{}
}

/*PublishTemplateLocalizationV1AdminForbidden handles this case with default header values.

  Forbidden
*/
type PublishTemplateLocalizationV1AdminForbidden struct {
	Payload *lobbyclientmodels.RestapiErrorResponseV1
}

func (o *PublishTemplateLocalizationV1AdminForbidden) Error() string {
	return fmt.Sprintf("[POST /lobby/v1/admin/notification/namespaces/{namespace}/templates/{templateSlug}/languages/{templateLanguage}/publish][%d] publishTemplateLocalizationV1AdminForbidden  %+v", 403, o.ToString())
}

func (o *PublishTemplateLocalizationV1AdminForbidden) ToString() string {
	b, err := json.Marshal(o.Payload)
	if err != nil {
		fmt.Println(err)
	}

	return fmt.Sprintf("%+v", string(b))
}

func (o *PublishTemplateLocalizationV1AdminForbidden) GetPayload() *lobbyclientmodels.RestapiErrorResponseV1 {
	return o.Payload
}

func (o *PublishTemplateLocalizationV1AdminForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(lobbyclientmodels.RestapiErrorResponseV1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPublishTemplateLocalizationV1AdminNotFound creates a PublishTemplateLocalizationV1AdminNotFound with default headers values
func NewPublishTemplateLocalizationV1AdminNotFound() *PublishTemplateLocalizationV1AdminNotFound {
	return &PublishTemplateLocalizationV1AdminNotFound{}
}

/*PublishTemplateLocalizationV1AdminNotFound handles this case with default header values.

  Not Found
*/
type PublishTemplateLocalizationV1AdminNotFound struct {
	Payload *lobbyclientmodels.RestapiErrorResponseV1
}

func (o *PublishTemplateLocalizationV1AdminNotFound) Error() string {
	return fmt.Sprintf("[POST /lobby/v1/admin/notification/namespaces/{namespace}/templates/{templateSlug}/languages/{templateLanguage}/publish][%d] publishTemplateLocalizationV1AdminNotFound  %+v", 404, o.ToString())
}

func (o *PublishTemplateLocalizationV1AdminNotFound) ToString() string {
	b, err := json.Marshal(o.Payload)
	if err != nil {
		fmt.Println(err)
	}

	return fmt.Sprintf("%+v", string(b))
}

func (o *PublishTemplateLocalizationV1AdminNotFound) GetPayload() *lobbyclientmodels.RestapiErrorResponseV1 {
	return o.Payload
}

func (o *PublishTemplateLocalizationV1AdminNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(lobbyclientmodels.RestapiErrorResponseV1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPublishTemplateLocalizationV1AdminInternalServerError creates a PublishTemplateLocalizationV1AdminInternalServerError with default headers values
func NewPublishTemplateLocalizationV1AdminInternalServerError() *PublishTemplateLocalizationV1AdminInternalServerError {
	return &PublishTemplateLocalizationV1AdminInternalServerError{}
}

/*PublishTemplateLocalizationV1AdminInternalServerError handles this case with default header values.

  Internal Server Error
*/
type PublishTemplateLocalizationV1AdminInternalServerError struct {
	Payload *lobbyclientmodels.RestapiErrorResponseV1
}

func (o *PublishTemplateLocalizationV1AdminInternalServerError) Error() string {
	return fmt.Sprintf("[POST /lobby/v1/admin/notification/namespaces/{namespace}/templates/{templateSlug}/languages/{templateLanguage}/publish][%d] publishTemplateLocalizationV1AdminInternalServerError  %+v", 500, o.ToString())
}

func (o *PublishTemplateLocalizationV1AdminInternalServerError) ToString() string {
	b, err := json.Marshal(o.Payload)
	if err != nil {
		fmt.Println(err)
	}

	return fmt.Sprintf("%+v", string(b))
}

func (o *PublishTemplateLocalizationV1AdminInternalServerError) GetPayload() *lobbyclientmodels.RestapiErrorResponseV1 {
	return o.Payload
}

func (o *PublishTemplateLocalizationV1AdminInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(lobbyclientmodels.RestapiErrorResponseV1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

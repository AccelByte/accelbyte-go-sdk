{
  "host": "demo.accelbyte.io",
  "info": {
    "contact": {
      "email": "engineering@accelbyte.io",
      "name": "Engineering Team at AccelByte",
      "url": "https://accelbyte.io"
    },
    "description": "Justice DS Artifact Service",
    "title": "justice-ds-artifact-manager",
    "version": "1.11.5"
  },
  "schemes": [
    "https"
  ],
  "externalDocs": {
    "description": "API Docs",
    "url": "https://stage.accelbyte.io/dsartifact/apidocs"
  },
  "securityDefinitions": {
    "authorization": {
      "in": "header",
      "name": "Authorization",
      "type": "apiKey"
    }
  },
  "swagger": "2.0",
  "paths": {
    "/dsartifact/artifacts/nodes/ipaddresses": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Required permission: ADMIN:DSAM:ARTIFACT:NODES [DELETE]\n\nRequired scope: social\n\nThis endpoint will delete a node by IP",
        "operationId": "deleteNodeByID",
        "parameters": [
          {
            "description": "IP Address of the node doing the upload process",
            "in": "query",
            "name": "nodeIP",
            "required": true,
            "type": "string"
          },
          {
            "description": "Pod Name of the DS who owns the artifact",
            "in": "query",
            "name": "podName",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/x-log"
        ],
        "responses": {
          "204": {
            "description": "delete queue success."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Delete a node that previously held artifact queue by IP address",
        "tags": [
          "Artifact Upload Process Queue"
        ],
        "x-errorCodes": {}
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Required permission: ADMIN:DSAM:ARTIFACT:NODES [READ]\n\nRequired scope: social\n\nThis endpoint will list IP Address of all artifact queue",
        "operationId": "listNodesIPAddress",
        "parameters": [
          {
            "default": 20,
            "description": "limit",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "description": "next",
            "in": "query",
            "name": "next",
            "type": "string"
          },
          {
            "description": "IP Address of the node doing the upload process",
            "in": "query",
            "name": "nodeIP",
            "type": "string"
          },
          {
            "description": "previous",
            "in": "query",
            "name": "previous",
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/x-log"
        ],
        "responses": {
          "200": {
            "description": "get all active queue success.",
            "schema": {
              "$ref": "#/definitions/models.ListNodesIPAddress"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Get IP Address of all nodes that all artifact in queue resides. This IP Address is the IP Address of nomad client",
        "tags": [
          "Artifact Upload Process Queue"
        ],
        "x-errorCodes": {}
      }
    },
    "/dsartifact/artifacts/queues": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "```\nRequired permission: ADMIN:DSAM:ARTIFACT:QUEUE [READ]\n\nThis endpoint is used to get the list of queues on a node\n```",
        "operationId": "listQueue",
        "parameters": [
          {
            "description": "IP Address of the node doing the upload process",
            "in": "query",
            "name": "nodeIP",
            "required": true,
            "type": "string"
          },
          {
            "default": 20,
            "description": "limit",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "description": "next",
            "in": "query",
            "name": "next",
            "type": "string"
          },
          {
            "description": "previous",
            "in": "query",
            "name": "previous",
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/x-log"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.ListQueueResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Get list of queues on a node",
        "tags": [
          "Artifact Upload Process Queue"
        ],
        "x-errorCodes": {}
      }
    },
    "/dsartifact/artifacts/queues/active": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "```\nRequired permission: ADMIN:DSAM:ARTIFACT:QUEUE [DELETE]\n\nThis endpoint is used to delete active queue process on a node\n```",
        "operationId": "deleteActiveQueue",
        "parameters": [
          {
            "description": "IP Address of the node doing the upload process",
            "in": "query",
            "name": "nodeIP",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/x-log"
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Delete active queue process on a node",
        "tags": [
          "Artifact Upload Process Queue"
        ],
        "x-errorCodes": {}
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "```\nRequired permission: ADMIN:DSAM:ARTIFACT:QUEUE [READ]\n\nThis endpoint is used to get an active queue process on a node\n```",
        "operationId": "getActiveQueue",
        "parameters": [
          {
            "description": "IP Address of the node doing the upload process",
            "in": "query",
            "name": "nodeIP",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/x-log"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.Queue"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Get active queue process on a node",
        "tags": [
          "Artifact Upload Process Queue"
        ],
        "x-errorCodes": {}
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "```\nRequired permission: ADMIN:DSAM:ARTIFACT:QUEUE [UPDATE]\n\nThis endpoint is used to set a queue entry as the current active queue\nfor artifact uploading process on a node\n```",
        "operationId": "setActiveQueue",
        "parameters": [
          {
            "description": "IP Address of the node doing the upload process",
            "in": "query",
            "name": "nodeIP",
            "required": true,
            "type": "string"
          },
          {
            "description": "Pod Name of the DS who owns the artifact",
            "in": "query",
            "name": "podName",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/x-log"
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Set a queue as active queue",
        "tags": [
          "Artifact Upload Process Queue"
        ],
        "x-errorCodes": {}
      }
    },
    "/dsartifact/artifacts/queues/failed": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "```\nRequired permission: ADMIN:DSAM:ARTIFACT:QUEUE [UPDATE]\n\nThis endpoint is used to report a failed artifact upload\n```",
        "operationId": "reportFailedUpload",
        "parameters": [
          {
            "description": "Node IP of the ds nomad client that failed the artifact upload",
            "in": "query",
            "name": "nodeIP",
            "required": true,
            "type": "string"
          },
          {
            "description": "Pod Name of the DS who owns the artifact",
            "in": "query",
            "name": "podName",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/x-log"
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Report failed artifact upload",
        "tags": [
          "Artifact Upload Process Queue"
        ],
        "x-errorCodes": {}
      }
    },
    "/dsartifact/namespaces/{namespace}/artifacts/queues": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Required permission: ADMIN:NAMESPACE:{namespace}:DSAM:ARTIFACT:QUEUE [DELETE]\n\nRequired scope: social\n\nThis endpoint will delete a queue entry",
        "operationId": "deleteQueue",
        "parameters": [
          {
            "description": "namespace of the game",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "IP Address of the node doing the upload process",
            "in": "query",
            "name": "nodeIP",
            "required": true,
            "type": "string"
          },
          {
            "description": "Pod Name of the DS who owns the artifact",
            "in": "query",
            "name": "podName",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/x-log"
        ],
        "responses": {
          "204": {
            "description": "delete queue success."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Delete a queue entry",
        "tags": [
          "Artifact Upload Process Queue"
        ],
        "x-errorCodes": {}
      }
    },
    "/dsartifact/namespaces/{namespace}/artifacts/queues/active/all": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Required permission: ADMIN:NAMESPACE:{namespace}:DSAM:ARTIFACT:QUEUE [READ]\n\nRequired scope: social\n\nThis endpoint will list all DSes which artifact is currently in uploading process. ",
        "operationId": "listAllActiveQueue",
        "parameters": [
          {
            "description": "namespace of the game",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "default": 20,
            "description": "limit",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "description": "next",
            "in": "query",
            "name": "next",
            "type": "string"
          },
          {
            "description": "IP Address of the node which the artifact located",
            "in": "query",
            "name": "nodeIP",
            "type": "string"
          },
          {
            "description": "Pod Name of the DS who owns the artifact",
            "in": "query",
            "name": "podName",
            "type": "string"
          },
          {
            "description": "previous",
            "in": "query",
            "name": "previous",
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/x-log"
        ],
        "responses": {
          "200": {
            "description": "get all active queue success.",
            "schema": {
              "$ref": "#/definitions/models.ListAllQueueResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Get all currently uploading artifact queue",
        "tags": [
          "Artifact Upload Process Queue"
        ],
        "x-errorCodes": {}
      }
    },
    "/dsartifact/namespaces/{namespace}/artifacts/queues/all": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Required permission: ADMIN:NAMESPACE:{namespace}:DSAM:ARTIFACT:QUEUE [READ]\n\nRequired scope: social\n\nThis endpoint will list all DSes which has artifact in upload queue.",
        "operationId": "listAllQueue",
        "parameters": [
          {
            "description": "namespace of the game",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "whether the response will exclude the currently uploading DSes or not",
            "in": "query",
            "name": "exclude_uploading",
            "type": "boolean",
            "x-omitempty": false
          },
          {
            "default": 20,
            "description": "limit",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "description": "next",
            "in": "query",
            "name": "next",
            "type": "string"
          },
          {
            "description": "IP Address of the node doing the upload process",
            "in": "query",
            "name": "nodeIP",
            "type": "string"
          },
          {
            "default": "ASC",
            "description": "order",
            "in": "query",
            "name": "order",
            "type": "string"
          },
          {
            "description": "pod name of the server",
            "in": "query",
            "name": "pod_name",
            "type": "string"
          },
          {
            "description": "previous",
            "in": "query",
            "name": "previous",
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/x-log"
        ],
        "responses": {
          "200": {
            "description": "get all queue success.",
            "schema": {
              "$ref": "#/definitions/models.ListAllQueueResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Get all artifact upload process queues",
        "tags": [
          "Artifact Upload Process Queue"
        ],
        "x-errorCodes": {}
      }
    },
    "/dsartifact/namespaces/{namespace}/servers/search": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "```\nRequired permission: ADMIN:NAMESPACE:{namespace}:DSAM:SERVER [READ]\n\nThis endpoint used to retrieve terminated servers in a namespace\n```",
        "operationId": "listTerminatedServersWithNamespace",
        "parameters": [
          {
            "description": "namespace of the game",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "deployment of the game",
            "in": "query",
            "name": "deployment",
            "type": "string"
          },
          {
            "description": "game mode of the game",
            "in": "query",
            "name": "game_mode",
            "type": "string"
          },
          {
            "default": 20,
            "description": "limit",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "description": "next",
            "in": "query",
            "name": "next",
            "type": "string"
          },
          {
            "description": "ID of the party",
            "in": "query",
            "name": "party_id",
            "type": "string"
          },
          {
            "description": "pod name of the server",
            "in": "query",
            "name": "pod_name",
            "type": "string"
          },
          {
            "description": "previous",
            "in": "query",
            "name": "previous",
            "type": "string"
          },
          {
            "description": "provider of the server",
            "in": "query",
            "name": "provider",
            "type": "string"
          },
          {
            "description": "region of the server",
            "in": "query",
            "name": "region",
            "type": "string"
          },
          {
            "description": "session id of the game",
            "in": "query",
            "name": "session_id",
            "type": "string"
          },
          {
            "description": "ID of the user",
            "in": "query",
            "name": "user_id",
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/x-log"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.ListTerminatedServersResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Retrieve All Terminated Servers in a Namespace",
        "tags": [
          "Terminated Servers"
        ],
        "x-errorCodes": {}
      }
    },
    "/dsartifact/namespaces/{namespace}/servers/{podName}/artifacts/download": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Required permission: ADMIN:NAMESPACE:{namespace}:DSAM:ARTIFACT [READ]\n\nRequired scope: social\n\nThis endpoint will download dedicated server\u0026#39;s Artifact file (.zip).",
        "operationId": "downloadServerArtifacts",
        "parameters": [
          {
            "description": "namespace of the game",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the DS pod",
            "in": "path",
            "name": "podName",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/x-log"
        ],
        "responses": {
          "200": {
            "description": "server artifact downloaded."
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Download dedicated server artifact files",
        "tags": [
          "Download Server Artifact"
        ],
        "x-errorCodes": {}
      }
    },
    "/dsartifact/namespaces/{namespace}/servers/{podName}/artifacts/exists": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Required permission: ADMIN:NAMESPACE:{namespace}:DSAM:ARTIFACT [READ]\n\nRequired scope: social\n\nThis endpoint will check artifact file existence before download file.\n\nThis endpoint will return the artifact status.\n\nThe possible status is : \u0026#39;Empty\u0026#39;, \u0026#39;In Queue\u0026#39;, \u0026#39;Uploading\u0026#39;, \u0026#39;Ready\u0026#39;, \u0026#39;Failed\u0026#39;",
        "operationId": "checkServerArtifact",
        "parameters": [
          {
            "description": "namespace of the game",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the DS pod",
            "in": "path",
            "name": "podName",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/x-log"
        ],
        "responses": {
          "200": {
            "description": "artifact exists.",
            "schema": {
              "$ref": "#/definitions/models.ArtifactFileStatus"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Check dedicated server artifacts files existence",
        "tags": [
          "Download Server Artifact"
        ],
        "x-errorCodes": {}
      }
    },
    "/dsartifact/servers/search": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "```\nRequired permission: ADMIN:NAMESPACE:{namespace}:DSAM:SERVER [READ]\n\nThis endpoint used to retrieve terminated servers in all namespace\n```",
        "operationId": "listTerminatedServers",
        "parameters": [
          {
            "description": "deployment of the game",
            "in": "query",
            "name": "deployment",
            "type": "string"
          },
          {
            "description": "game mode of the game",
            "in": "query",
            "name": "game_mode",
            "type": "string"
          },
          {
            "default": 20,
            "description": "limit",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "description": "next",
            "in": "query",
            "name": "next",
            "type": "string"
          },
          {
            "description": "ID of the party",
            "in": "query",
            "name": "party_id",
            "type": "string"
          },
          {
            "description": "pod name of the server",
            "in": "query",
            "name": "pod_name",
            "type": "string"
          },
          {
            "description": "previous",
            "in": "query",
            "name": "previous",
            "type": "string"
          },
          {
            "description": "provider of the server",
            "in": "query",
            "name": "provider",
            "type": "string"
          },
          {
            "description": "region of the server",
            "in": "query",
            "name": "region",
            "type": "string"
          },
          {
            "description": "session id of the game",
            "in": "query",
            "name": "session_id",
            "type": "string"
          },
          {
            "description": "ID of the user",
            "in": "query",
            "name": "user_id",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.ListTerminatedServersResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Retrieve All Terminated Servers",
        "tags": [
          "All Terminated Servers"
        ],
        "x-errorCodes": {}
      }
    },
    "/dsartifact/v1/messages": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "get the list of messages.",
        "operationId": "publicGetMessages",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "items": {
                "$ref": "#/definitions/log.AppMessageDeclaration"
              },
              "type": "array"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "get service messages",
        "x-errorCodes": {}
      }
    }
  },
  "definitions": {
    "log.AppMessageDeclaration": {
      "properties": {
        "Attributes": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "Code": {
          "type": "string"
        },
        "CodeName": {
          "type": "string"
        },
        "Section": {
          "type": "string"
        },
        "Service": {
          "type": "string"
        },
        "Text": {
          "type": "string"
        }
      },
      "required": [
        "Attributes",
        "Code",
        "CodeName",
        "Section",
        "Service",
        "Text"
      ]
    },
    "models.AllQueueResult": {
      "properties": {
        "allocation_id": {
          "type": "string"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-nullable": false
        },
        "failed": {
          "type": "boolean",
          "x-omitempty": false
        },
        "failed_reason": {
          "type": "string"
        },
        "node_ip": {
          "type": "string"
        },
        "pod_name": {
          "type": "string"
        },
        "uploading": {
          "type": "boolean",
          "x-omitempty": false
        }
      },
      "required": [
        "allocation_id",
        "created_at",
        "failed",
        "failed_reason",
        "node_ip",
        "pod_name",
        "uploading"
      ]
    },
    "models.ArtifactFileStatus": {
      "properties": {
        "artifact_existence": {
          "type": "boolean",
          "x-omitempty": false
        },
        "artifact_status": {
          "type": "string"
        }
      },
      "required": [
        "artifact_existence"
      ]
    },
    "models.ListAllQueueResponse": {
      "properties": {
        "data": {
          "items": {
            "$ref": "#/definitions/models.AllQueueResult"
          },
          "type": "array"
        },
        "paging": {
          "$ref": "#/definitions/models.PagingCursor"
        }
      },
      "required": [
        "data",
        "paging"
      ]
    },
    "models.ListNodesIPAddress": {
      "properties": {
        "ip_addresses": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "paging": {
          "$ref": "#/definitions/models.PagingCursor"
        }
      },
      "required": [
        "ip_addresses",
        "paging"
      ]
    },
    "models.ListQueueResponse": {
      "properties": {
        "data": {
          "items": {
            "$ref": "#/definitions/models.QueueResult"
          },
          "type": "array"
        },
        "paging": {
          "$ref": "#/definitions/models.PagingCursor"
        }
      },
      "required": [
        "data",
        "paging"
      ]
    },
    "models.ListTerminatedServersResponse": {
      "properties": {
        "data": {
          "items": {
            "$ref": "#/definitions/models.NotifPayloadServerStatusChange"
          },
          "type": "array"
        },
        "paging": {
          "$ref": "#/definitions/models.PagingCursor"
        }
      },
      "required": [
        "data",
        "paging"
      ]
    },
    "models.MatchResult": {
      "properties": {
        "game_mode": {
          "type": "string"
        },
        "matching_allies": {
          "items": {
            "$ref": "#/definitions/models.RequestMatchingAlly"
          },
          "type": "array"
        },
        "namespace": {
          "type": "string"
        },
        "session_id": {
          "type": "string"
        }
      },
      "required": [
        "game_mode",
        "matching_allies",
        "namespace",
        "session_id"
      ]
    },
    "models.NotifPayloadServerStatusChange": {
      "properties": {
        "match": {
          "$ref": "#/definitions/models.MatchResult"
        },
        "server": {
          "$ref": "#/definitions/models.Server"
        },
        "source": {
          "type": "string"
        }
      },
      "required": [
        "match",
        "server",
        "source"
      ]
    },
    "models.PagingCursor": {
      "properties": {
        "first": {
          "type": "string"
        },
        "last": {
          "type": "string"
        },
        "next": {
          "type": "string"
        },
        "previous": {
          "type": "string"
        }
      },
      "required": [
        "first",
        "last",
        "next",
        "previous"
      ]
    },
    "models.Queue": {
      "properties": {
        "AllocationID": {
          "type": "string"
        },
        "CreatedAt": {
          "format": "date-time",
          "type": "string",
          "x-nullable": false
        },
        "Failed": {
          "type": "boolean",
          "x-omitempty": false
        },
        "FailedReason": {
          "type": "string"
        },
        "Namespace": {
          "type": "string"
        },
        "NodeIP": {
          "type": "string"
        },
        "PodName": {
          "type": "string"
        },
        "Uploading": {
          "type": "boolean",
          "x-omitempty": false
        }
      },
      "required": [
        "AllocationID",
        "CreatedAt",
        "Failed",
        "FailedReason",
        "Namespace",
        "NodeIP",
        "PodName",
        "Uploading"
      ]
    },
    "models.QueueResult": {
      "properties": {
        "allocation_id": {
          "type": "string"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-nullable": false
        },
        "pod_name": {
          "type": "string"
        }
      },
      "required": [
        "allocation_id",
        "created_at",
        "pod_name"
      ]
    },
    "models.RequestMatchMember": {
      "properties": {
        "user_id": {
          "type": "string"
        }
      },
      "required": [
        "user_id"
      ]
    },
    "models.RequestMatchParty": {
      "properties": {
        "party_attributes": {
          "type": "object"
        },
        "party_id": {
          "type": "string"
        },
        "party_members": {
          "items": {
            "$ref": "#/definitions/models.RequestMatchMember"
          },
          "type": "array"
        }
      },
      "required": [
        "party_attributes",
        "party_id",
        "party_members"
      ]
    },
    "models.RequestMatchingAlly": {
      "properties": {
        "matching_parties": {
          "items": {
            "$ref": "#/definitions/models.RequestMatchParty"
          },
          "type": "array"
        }
      },
      "required": [
        "matching_parties"
      ]
    },
    "models.Server": {
      "properties": {
        "allocation_id": {
          "type": "string"
        },
        "alternate_ips": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "artifact_path": {
          "type": "string"
        },
        "cpu_limit": {
          "format": "int32",
          "type": "integer"
        },
        "deployment": {
          "type": "string"
        },
        "game_version": {
          "type": "string"
        },
        "image_version": {
          "type": "string"
        },
        "ip": {
          "type": "string"
        },
        "is_core_dump_enabled": {
          "type": "boolean",
          "x-omitempty": false
        },
        "last_update": {
          "format": "date-time",
          "type": "string",
          "x-nullable": false
        },
        "mem_limit": {
          "format": "int32",
          "type": "integer"
        },
        "namespace": {
          "type": "string"
        },
        "params": {
          "type": "string"
        },
        "pod_name": {
          "type": "string"
        },
        "port": {
          "format": "int32",
          "type": "integer"
        },
        "ports": {
          "additionalProperties": {
            "type": "integer"
          },
          "type": "object"
        },
        "provider": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "session_id": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "status_history": {
          "items": {
            "$ref": "#/definitions/models.StatusHistory"
          },
          "type": "array"
        }
      },
      "required": [
        "allocation_id",
        "alternate_ips",
        "artifact_path",
        "cpu_limit",
        "deployment",
        "game_version",
        "image_version",
        "ip",
        "is_core_dump_enabled",
        "last_update",
        "mem_limit",
        "namespace",
        "params",
        "pod_name",
        "port",
        "ports",
        "provider",
        "region",
        "session_id",
        "status",
        "status_history"
      ]
    },
    "models.StatusHistory": {
      "properties": {
        "status": {
          "type": "string"
        },
        "time_stamp": {
          "format": "date-time",
          "type": "string",
          "x-nullable": false
        }
      },
      "required": [
        "status",
        "time_stamp"
      ]
    },
    "response.Error": {
      "properties": {
        "errorCode": {
          "format": "int32",
          "type": "integer"
        },
        "errorMessage": {
          "type": "string"
        }
      },
      "required": [
        "errorCode",
        "errorMessage"
      ]
    }
  },
  "x-docs": {
    "alias": "dsartifact",
    "host": "https://stage.accelbyte.io",
    "path": "/dsartifact/apidocs/api.json"
  },
  "x-messages": [
    {
      "Attributes": [
        "message"
      ],
      "Code": "20000",
      "CodeName": "InternalServerError",
      "Section": "general",
      "Service": "general",
      "Text": "{{message}}"
    },
    {
      "Attributes": [
        "action",
        "details",
        "reason",
        "userID"
      ],
      "Code": "20000",
      "CodeName": "InternalServerErrorV1",
      "Section": "general",
      "Service": "general",
      "Text": "unable to {{action}}: {{reason}}, userID: {{userID}}, details: {{details}}"
    },
    {
      "Attributes": [],
      "Code": "20001",
      "CodeName": "UnauthorizedAccess",
      "Section": "general",
      "Service": "general",
      "Text": "unauthorized access"
    },
    {
      "Attributes": [
        "action",
        "details",
        "reason",
        "userID"
      ],
      "Code": "20002",
      "CodeName": "ValidationError",
      "Section": "general",
      "Service": "general",
      "Text": "unable to {{action}}: {{reason}}, userID: {{userID}}, details: {{details}}"
    },
    {
      "Attributes": [
        "message"
      ],
      "Code": "20002",
      "CodeName": "ValidationErrorV1",
      "Section": "general",
      "Service": "general",
      "Text": "{{message}}"
    },
    {
      "Attributes": [],
      "Code": "20003",
      "CodeName": "ForbiddenAccess",
      "Section": "general",
      "Service": "general",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "20007",
      "CodeName": "TooManyRequests",
      "Section": "general",
      "Service": "general",
      "Text": ""
    },
    {
      "Attributes": [
        "message"
      ],
      "Code": "20008",
      "CodeName": "UserNotFound",
      "Section": "general",
      "Service": "general",
      "Text": "{{message}}"
    },
    {
      "Attributes": [],
      "Code": "20013",
      "CodeName": "InsufficientPermissions",
      "Section": "general",
      "Service": "general",
      "Text": ""
    },
    {
      "Attributes": [
        "action",
        "details",
        "reason",
        "userID"
      ],
      "Code": "20019",
      "CodeName": "UnableToParseRequestBody",
      "Section": "general",
      "Service": "general",
      "Text": "unable to {{action}}: {{reason}}, userID: {{userID}}, details: {{details}}"
    },
    {
      "Attributes": [
        "message"
      ],
      "Code": "20021",
      "CodeName": "InvalidPaginationParameters",
      "Section": "general",
      "Service": "general",
      "Text": "{{message}}"
    },
    {
      "Attributes": [],
      "Code": "20022",
      "CodeName": "TokenIsNotUserToken",
      "Section": "general",
      "Service": "general",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "810101",
      "CodeName": "ListTerminatedServerSuccess",
      "Section": "list terminated server",
      "Service": "dsam",
      "Text": ""
    },
    {
      "Attributes": [
        "action",
        "error"
      ],
      "Code": "810102",
      "CodeName": "ListTerminatedServerDBError",
      "Section": "list terminated server",
      "Service": "dsam",
      "Text": "unable to {{ action }} : {{ error }}"
    },
    {
      "Attributes": [],
      "Code": "810201",
      "CodeName": "DownloadServerArtifactSuccess",
      "Section": "download server artifact",
      "Service": "dsam",
      "Text": ""
    },
    {
      "Attributes": [
        "action",
        "error"
      ],
      "Code": "810202",
      "CodeName": "DownloadServerArtifactDBError",
      "Section": "download server artifact",
      "Service": "dsam",
      "Text": "unable to {{ action }} : {{ error }}"
    },
    {
      "Attributes": [
        "action",
        "error"
      ],
      "Code": "810203",
      "CodeName": "DownloadServerArtifactMalformedRequest",
      "Section": "download server artifact",
      "Service": "dsam",
      "Text": "unable to {{ action }}: {{ error }}"
    },
    {
      "Attributes": [
        "action",
        "error"
      ],
      "Code": "810204",
      "CodeName": "DownloadServerArtifactNotFound",
      "Section": "download server artifact",
      "Service": "dsam",
      "Text": "unable to {{ action }}: {{ error }}"
    },
    {
      "Attributes": [],
      "Code": "810301",
      "CodeName": "CheckServerArtifactExistenceSuccess",
      "Section": "check server artifact",
      "Service": "dsam",
      "Text": ""
    },
    {
      "Attributes": [
        "action",
        "error"
      ],
      "Code": "810302",
      "CodeName": "CheckServerArtifactExistenceDBError",
      "Section": "check server artifact",
      "Service": "dsam",
      "Text": "unable to {{ action }} : {{ error }}"
    },
    {
      "Attributes": [
        "action",
        "error"
      ],
      "Code": "810303",
      "CodeName": "CheckServerArtifactExistenceMalformedRequest",
      "Section": "check server artifact",
      "Service": "dsam",
      "Text": "unable to {{ action }}: {{ error }}"
    },
    {
      "Attributes": [
        "action",
        "error"
      ],
      "Code": "810304",
      "CodeName": "CheckServerArtifactExistenceNotFound",
      "Section": "check server artifact",
      "Service": "dsam",
      "Text": "unable to {{ action }}: {{ error }}"
    },
    {
      "Attributes": [],
      "Code": "810401",
      "CodeName": "SetActiveQueueSuccess",
      "Section": "set active queue",
      "Service": "dsam",
      "Text": ""
    },
    {
      "Attributes": [
        "action",
        "error"
      ],
      "Code": "810402",
      "CodeName": "SetActiveQueueMalformedRequest",
      "Section": "set active queue",
      "Service": "dsam",
      "Text": "unable to {{ action }}: {{ error }}"
    },
    {
      "Attributes": [],
      "Code": "810501",
      "CodeName": "GetActiveQueueSuccess",
      "Section": "get active queue",
      "Service": "dsam",
      "Text": ""
    },
    {
      "Attributes": [
        "action",
        "error"
      ],
      "Code": "810502",
      "CodeName": "GetActiveQueueMalformedRequest",
      "Section": "get active queue",
      "Service": "dsam",
      "Text": "unable to {{ action }}: {{ error }}"
    },
    {
      "Attributes": [
        "action",
        "error"
      ],
      "Code": "810503",
      "CodeName": "GetActiveQueueNotFound",
      "Section": "get active queue",
      "Service": "dsam",
      "Text": "unable to {{ action }}: {{ error }}"
    },
    {
      "Attributes": [],
      "Code": "810601",
      "CodeName": "DeleteActiveQueueSuccess",
      "Section": "delete active queue",
      "Service": "dsam",
      "Text": ""
    },
    {
      "Attributes": [
        "action",
        "error"
      ],
      "Code": "810602",
      "CodeName": "DeleteActiveQueueMalformedRequest",
      "Section": "delete active queue",
      "Service": "dsam",
      "Text": "unable to {{ action }}: {{ error }}"
    },
    {
      "Attributes": [
        "action",
        "error"
      ],
      "Code": "810603",
      "CodeName": "DeleteActiveQueueNotFound",
      "Section": "delete active queue",
      "Service": "dsam",
      "Text": "unable to {{ action }}: {{ error }}"
    },
    {
      "Attributes": [],
      "Code": "810701",
      "CodeName": "ListQueueSuccess",
      "Section": "list queue",
      "Service": "dsam",
      "Text": ""
    },
    {
      "Attributes": [
        "action",
        "error"
      ],
      "Code": "810702",
      "CodeName": "ListQueueMalformedRequest",
      "Section": "list queue",
      "Service": "dsam",
      "Text": "unable to {{ action }}: {{ error }}"
    },
    {
      "Attributes": [
        "action",
        "error"
      ],
      "Code": "810703",
      "CodeName": "ListQueueNotFound",
      "Section": "list queue",
      "Service": "dsam",
      "Text": "unable to {{ action }}: {{ error }}"
    },
    {
      "Attributes": [],
      "Code": "810801",
      "CodeName": "ListAllQueueSuccess",
      "Section": "list all pending queue",
      "Service": "dsam",
      "Text": ""
    },
    {
      "Attributes": [
        "action",
        "error"
      ],
      "Code": "810802",
      "CodeName": "ListAllQueueMalformedRequest",
      "Section": "list all pending queue",
      "Service": "dsam",
      "Text": "unable to {{ action }}: {{ error }}"
    },
    {
      "Attributes": [],
      "Code": "810901",
      "CodeName": "ListAllActiveQueueSuccess",
      "Section": "list all active queue",
      "Service": "dsam",
      "Text": ""
    },
    {
      "Attributes": [
        "action",
        "error"
      ],
      "Code": "810902",
      "CodeName": "ListAllActiveQueueMalformedRequest",
      "Section": "list all active queue",
      "Service": "dsam",
      "Text": "unable to {{ action }}: {{ error }}"
    },
    {
      "Attributes": [],
      "Code": "811001",
      "CodeName": "DeleteQueueSuccess",
      "Section": "delete queue",
      "Service": "dsam",
      "Text": ""
    },
    {
      "Attributes": [
        "action",
        "error"
      ],
      "Code": "811002",
      "CodeName": "DeleteQueueNotFound",
      "Section": "delete queue",
      "Service": "dsam",
      "Text": "unable to {{ action }}: {{ error }}"
    },
    {
      "Attributes": [
        "action",
        "error"
      ],
      "Code": "811003",
      "CodeName": "DeleteQueueMalformedRequest",
      "Section": "delete queue",
      "Service": "dsam",
      "Text": "unable to {{ action }}: {{ error }}"
    },
    {
      "Attributes": [],
      "Code": "811101",
      "CodeName": "ReportFailedUploadSuccess",
      "Section": "report failed upload",
      "Service": "dsam",
      "Text": ""
    },
    {
      "Attributes": [
        "action",
        "error"
      ],
      "Code": "811102",
      "CodeName": "ReportFailedUploadQueueNotFound",
      "Section": "report failed upload",
      "Service": "dsam",
      "Text": "unable to {{ action }}: {{ error }}"
    },
    {
      "Attributes": [
        "action",
        "error"
      ],
      "Code": "811103",
      "CodeName": "ReportFailedUploadMalformedRequest",
      "Section": "report failed upload",
      "Service": "dsam",
      "Text": "unable to {{ action }}: {{ error }}"
    }
  ],
  "x-version": {
    "buildDate": "2024-07-05T02:58:20+00:00",
    "gitHash": "3a82ad9f573bc24076f8f7505aa99946ee273760",
    "name": "justice-ds-artifact-manager",
    "revisionID": "1.11.5",
    "version": "1.11.5",
    "version-roles-seeding": "0.0.3"
  }
}
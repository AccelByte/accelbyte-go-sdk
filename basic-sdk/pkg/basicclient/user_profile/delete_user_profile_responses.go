// Code generated by go-swagger; DO NOT EDIT.

package user_profile

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"io/ioutil"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/AccelByte/accelbyte-go-sdk/basic-sdk/pkg/basicclientmodels"
)

// DeleteUserProfileReader is a Reader for the DeleteUserProfile structure.
type DeleteUserProfileReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteUserProfileReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteUserProfileOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteUserProfileBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteUserProfileUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewDeleteUserProfileForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewDeleteUserProfileNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		data, err := ioutil.ReadAll(response.Body())
		if err != nil {
			return nil, err
		}

		return nil, fmt.Errorf("Requested DELETE /v1/admin/namespaces/{namespace}/users/{userId}/profiles returns an error %d: %s", response.Code(), string(data))
	}
}

// NewDeleteUserProfileOK creates a DeleteUserProfileOK with default headers values
func NewDeleteUserProfileOK() *DeleteUserProfileOK {
	return &DeleteUserProfileOK{}
}

/*DeleteUserProfileOK handles this case with default header values.

  successful operation
*/
type DeleteUserProfileOK struct {
	Payload *basicclientmodels.UserProfilePrivateInfo
}

func (o *DeleteUserProfileOK) Error() string {
	return fmt.Sprintf("[DELETE /v1/admin/namespaces/{namespace}/users/{userId}/profiles][%d] deleteUserProfileOK  %+v", 200, o.Payload)
}

func (o *DeleteUserProfileOK) GetPayload() *basicclientmodels.UserProfilePrivateInfo {
	return o.Payload
}

func (o *DeleteUserProfileOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(basicclientmodels.UserProfilePrivateInfo)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteUserProfileBadRequest creates a DeleteUserProfileBadRequest with default headers values
func NewDeleteUserProfileBadRequest() *DeleteUserProfileBadRequest {
	return &DeleteUserProfileBadRequest{}
}

/*DeleteUserProfileBadRequest handles this case with default header values.

  <table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>
*/
type DeleteUserProfileBadRequest struct {
	Payload *basicclientmodels.ValidationErrorEntity
}

func (o *DeleteUserProfileBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /v1/admin/namespaces/{namespace}/users/{userId}/profiles][%d] deleteUserProfileBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteUserProfileBadRequest) GetPayload() *basicclientmodels.ValidationErrorEntity {
	return o.Payload
}

func (o *DeleteUserProfileBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(basicclientmodels.ValidationErrorEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteUserProfileUnauthorized creates a DeleteUserProfileUnauthorized with default headers values
func NewDeleteUserProfileUnauthorized() *DeleteUserProfileUnauthorized {
	return &DeleteUserProfileUnauthorized{}
}

/*DeleteUserProfileUnauthorized handles this case with default header values.

  <table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>20001</td><td>unauthorized</td></tr></table>
*/
type DeleteUserProfileUnauthorized struct {
	Payload *basicclientmodels.ErrorEntity
}

func (o *DeleteUserProfileUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /v1/admin/namespaces/{namespace}/users/{userId}/profiles][%d] deleteUserProfileUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteUserProfileUnauthorized) GetPayload() *basicclientmodels.ErrorEntity {
	return o.Payload
}

func (o *DeleteUserProfileUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(basicclientmodels.ErrorEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteUserProfileForbidden creates a DeleteUserProfileForbidden with default headers values
func NewDeleteUserProfileForbidden() *DeleteUserProfileForbidden {
	return &DeleteUserProfileForbidden{}
}

/*DeleteUserProfileForbidden handles this case with default header values.

  <table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>
*/
type DeleteUserProfileForbidden struct {
	Payload *basicclientmodels.ErrorEntity
}

func (o *DeleteUserProfileForbidden) Error() string {
	return fmt.Sprintf("[DELETE /v1/admin/namespaces/{namespace}/users/{userId}/profiles][%d] deleteUserProfileForbidden  %+v", 403, o.Payload)
}

func (o *DeleteUserProfileForbidden) GetPayload() *basicclientmodels.ErrorEntity {
	return o.Payload
}

func (o *DeleteUserProfileForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(basicclientmodels.ErrorEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteUserProfileNotFound creates a DeleteUserProfileNotFound with default headers values
func NewDeleteUserProfileNotFound() *DeleteUserProfileNotFound {
	return &DeleteUserProfileNotFound{}
}

/*DeleteUserProfileNotFound handles this case with default header values.

  <table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>11440</td><td>user profile not found</td></tr></table>
*/
type DeleteUserProfileNotFound struct {
	Payload *basicclientmodels.ErrorEntity
}

func (o *DeleteUserProfileNotFound) Error() string {
	return fmt.Sprintf("[DELETE /v1/admin/namespaces/{namespace}/users/{userId}/profiles][%d] deleteUserProfileNotFound  %+v", 404, o.Payload)
}

func (o *DeleteUserProfileNotFound) GetPayload() *basicclientmodels.ErrorEntity {
	return o.Payload
}

func (o *DeleteUserProfileNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(basicclientmodels.ErrorEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

[
  {
    "op": "add",
    "path": "/schemes",
    "value": [
      "https"
    ]
  },
  {
    "op": "add",
    "path": "/host",
    "value": "demo.accelbyte.io"
  },
  {
    "op": "add",
    "path": "/securityDefinitions/HasPermission",
    "value": {
      "authorizationUrl": "https://dummy.oauth.net/auth",
      "flow": "accessCode",
      "scopes": {
        "ADMIN:NAMESPACE:{namespace}:MATCHMAKING:CHANNEL [Create]": "ADMIN:NAMESPACE:{namespace}:MATCHMAKING:CHANNEL [Create]",
        "ADMIN:NAMESPACE:{namespace}:MATCHMAKING:CHANNEL [Delete]": "ADMIN:NAMESPACE:{namespace}:MATCHMAKING:CHANNEL [Delete]",
        "ADMIN:NAMESPACE:{namespace}:MATCHMAKING:CHANNEL [READ]": "ADMIN:NAMESPACE:{namespace}:MATCHMAKING:CHANNEL [READ]",
        "ADMIN:NAMESPACE:{namespace}:MATCHMAKING:CHANNEL [Read]": "ADMIN:NAMESPACE:{namespace}:MATCHMAKING:CHANNEL [Read]",
        "ADMIN:NAMESPACE:{namespace}:MATCHMAKING:CHANNEL [Update]": "ADMIN:NAMESPACE:{namespace}:MATCHMAKING:CHANNEL [Update]",
        "NAMESPACE:{namespace}:MATCHMAKING:CHANNEL [CREATE]": "NAMESPACE:{namespace}:MATCHMAKING:CHANNEL [CREATE]",
        "NAMESPACE:{namespace}:MATCHMAKING:CHANNEL [Delete]": "NAMESPACE:{namespace}:MATCHMAKING:CHANNEL [Delete]",
        "NAMESPACE:{namespace}:MATCHMAKING:CHANNEL [READ]": "NAMESPACE:{namespace}:MATCHMAKING:CHANNEL [READ]",
        "NAMESPACE:{namespace}:MATCHMAKING:CHANNEL [UPDATE]": "NAMESPACE:{namespace}:MATCHMAKING:CHANNEL [UPDATE]",
        "NAMESPACE:{namespace}:MATCHRESULT [CREATE]": "NAMESPACE:{namespace}:MATCHRESULT [CREATE]",
        "NAMESPACE:{namespace}:SESSION [CREATE]": "NAMESPACE:{namespace}:SESSION [CREATE]",
        "NAMESPACE:{namespace}:SESSION [READ]": "NAMESPACE:{namespace}:SESSION [READ]",
        "NAMESPACE:{namespace}:SESSION [UPDATE]": "NAMESPACE:{namespace}:SESSION [UPDATE]"
      },
      "tokenUrl": "https://dumy.oauth.net/token",
      "type": "oauth2"
    }
  },
  {
    "op": "add",
    "path": "/securityDefinitions/HasScope",
    "value": {
      "authorizationUrl": "https://dummy.oauth.net/auth",
      "flow": "accessCode",
      "scopes": {
        "social": "social"
      },
      "tokenUrl": "https://dumy.oauth.net/token",
      "type": "oauth2"
    }
  },
  {
    "op": "remove",
    "path": "/definitions/models.ChannelMetadataV1"
  },
  {
    "op": "remove",
    "path": "/definitions/models.MatchAttributes"
  },
  {
    "op": "remove",
    "path": "/definitions/map[string]||models.MatchingParty"
  },
  {
    "op": "remove",
    "path": "/definitions/models.ChannelMetadata"
  },
  {
    "op": "add",
    "path": "/paths/~1matchmaking~1v1~1admin~1namespaces~1{namespace}~1channels~1import/post/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:MATCHMAKING:CHANNEL [Update]"
        ],
        "HasScope": [
          "social"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "add",
    "path": "/paths/~1matchmaking~1v1~1admin~1namespaces~1{namespace}~1sessions~1history~1search/get/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:MATCHMAKING:CHANNEL [Read]"
        ],
        "HasScope": [
          "social"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "add",
    "path": "/paths/~1matchmaking~1v1~1admin~1namespaces~1{namespace}~1channels~1{channelName}/patch/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:MATCHMAKING:CHANNEL [Update]"
        ],
        "HasScope": [
          "social"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "add",
    "path": "/paths/~1matchmaking~1v1~1admin~1namespaces~1{namespace}~1channels~1{channelName}/get/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:MATCHMAKING:CHANNEL [READ]"
        ],
        "HasScope": [
          "social"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "add",
    "path": "/paths/~1matchmaking~1namespaces~1{namespace}~1sessions~1dequeue/post/security",
    "value": [
      {
        "HasPermission": [
          "NAMESPACE:{namespace}:SESSION [UPDATE]"
        ],
        "HasScope": [
          "social"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1matchmaking~1namespaces~1{namespace}~1sessions~1dequeue/post/description",
    "value": "Required Permission: NAMESPACE:{namespace}:SESSION [UPDATE]\n\nRequired Scope: social\n\nDequeues joinable session so that it will not be matched with player&#39;s match request tickets. \n\nThis endpoint is intended to be called by game server to let matchmaker know that \nthe game server does not want more players to its session, even though it is not full. \n"
  },
  {
    "op": "move",
    "from": "/security",
    "path": "/paths/~1matchmaking~1healthz/get/security"
  },
  {
    "op": "replace",
    "path": "/paths/~1matchmaking~1healthz/get/operationId",
    "value": "handlerV3Healthz"
  },
  {
    "op": "add",
    "path": "/paths/~1matchmaking~1namespaces~1{namespace}~1channels/post/security",
    "value": [
      {
        "HasPermission": [
          "NAMESPACE:{namespace}:MATCHMAKING:CHANNEL [CREATE]"
        ],
        "HasScope": [
          "social"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1matchmaking~1namespaces~1{namespace}~1channels/post/description",
    "value": "Required Permission: NAMESPACE:{namespace}:MATCHMAKING:CHANNEL [CREATE]\n\nRequired Scope: social\n\nCreates a new matchmaking channel.\n\nMatchmaking channels is a list of pool name that is eligible for matchmaking processes. \nGameMode isolates each matchmaking pools.\n\nIf match timeout is set to 0, by default, incoming matchmaking requests will be timed out after 1 hour.\n\nIf max worker delay is set to 0, by default, it will wait for at max ~8 seconds during low volume.\n\nRule Set\n\nMatching Rule used to classify the player. Player that has matched criteria will be grouped together within an ally.\n\nValid value for criteria is &#34;distance&#34;\n"
  },
  {
    "op": "add",
    "path": "/paths/~1matchmaking~1namespaces~1{namespace}~1channels/get/security",
    "value": [
      {
        "HasPermission": [
          "NAMESPACE:{namespace}:MATCHMAKING:CHANNEL [READ]"
        ],
        "HasScope": [
          "social"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "add",
    "path": "/paths/~1matchmaking~1v1~1public~1namespaces~1{namespace}~1channels~1{channelName}/get/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "add",
    "path": "/paths/~1matchmaking~1v1~1admin~1namespaces~1{namespace}~1channels~1{channelName}~1sessions~1{matchID}/delete/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:MATCHMAKING:CHANNEL [Delete]"
        ],
        "HasScope": [
          "social"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "add",
    "path": "/paths/~1matchmaking~1v1~1admin~1namespaces~1{namespace}~1channels~1{channelName}~1sessions~1{matchID}/post/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:MATCHMAKING:CHANNEL [Create]"
        ],
        "HasScope": [
          "social"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "add",
    "path": "/paths/~1matchmaking~1social~1playtime~1namespaces~1{namespace}~1weight/patch/security",
    "value": [
      {
        "HasPermission": [
          "NAMESPACE:{namespace}:MATCHMAKING:CHANNEL [UPDATE]"
        ],
        "HasScope": [
          "social"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "add",
    "path": "/paths/~1matchmaking~1v1~1public~1namespaces~1{namespace}~1channels/get/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "add",
    "path": "/paths/~1matchmaking~1v1~1admin~1namespaces~1{namespace}~1channels~1{channelName}~1sessions/get/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:MATCHMAKING:CHANNEL [Read]"
        ],
        "HasScope": [
          "social"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "add",
    "path": "/paths/~1matchmaking~1v1~1admin~1namespaces~1{namespace}~1sessions~1{matchID}~1history~1detailed/get/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:MATCHMAKING:CHANNEL [Read]"
        ],
        "HasScope": [
          "social"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "add",
    "path": "/paths/~1matchmaking~1v1~1admin~1namespaces~1{namespace}~1channels~1{channelName}~1parties/get/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:MATCHMAKING:CHANNEL [Read]"
        ],
        "HasScope": [
          "social"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "add",
    "path": "/paths/~1matchmaking~1version/get/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "add",
    "path": "/paths/~1matchmaking~1v1~1admin~1namespaces~1{namespace}~1channels~1{channelName}~1sessions~1{matchID}~1users~1{userID}/delete/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:MATCHMAKING:CHANNEL [Delete]"
        ],
        "HasScope": [
          "social"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "add",
    "path": "/paths/~1matchmaking~1namespaces~1{namespace}~1sessions/post/security",
    "value": [
      {
        "HasPermission": [
          "NAMESPACE:{namespace}:SESSION [CREATE]"
        ],
        "HasScope": [
          "social"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1matchmaking~1namespaces~1{namespace}~1sessions/post/description",
    "value": "Required Permission: NAMESPACE:{namespace}:SESSION [CREATE]\n\nRequired Scope: social\n\nQueues joinable session so that it will be matched with player&#39;s match request tickets. \nThe session queued must be in a channel/game mode that is set to have joinable flag. \nThe session will be in queue until it is full or expired. \nBoth the number of players and session queue timeout can be set in the channel&#39;s config.\n\nThis endpoint is intended to be called by game server to let matchmaker know that \nthe game server is ready for receiving more players through matchmaking tickets to its session.\n\nIf a session is already queued, and game server wants to modify the data or \nrenew the queue timeout (e.g. some player left and more empty slot opened up), \nsimply call this endpoint with the updated session data. \n"
  },
  {
    "op": "add",
    "path": "/paths/~1matchmaking~1namespaces~1{namespace}~1sessions~1{matchID}~1status/get/security",
    "value": [
      {
        "HasPermission": [
          "NAMESPACE:{namespace}:SESSION [READ]"
        ],
        "HasScope": [
          "social"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1matchmaking~1namespaces~1{namespace}~1sessions~1{matchID}~1status/get/description",
    "value": "Required Permission: NAMESPACE:{namespace}:SESSION [READ]\n\nRequired Scope: social\n\nQueries the specified session&#39;s status. Game servers are expected to \ncall this periodically as long as it has a session in queue to see \nif there are new players being matched to the session.\n\nPossible session statuses are &#34;sessionInQueue&#34;, &#34;sessionFull&#34;, and &#34;sessionTimeout&#34;.\n"
  },
  {
    "op": "add",
    "path": "/paths/~1matchmaking~1v1~1messages/get/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "add",
    "path": "/paths/~1matchmaking~1namespaces~1{namespace}~1matchresult/post/security",
    "value": [
      {
        "HasPermission": [
          "NAMESPACE:{namespace}:MATCHRESULT [CREATE]"
        ],
        "HasScope": [
          "social"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "add",
    "path": "/paths/~1matchmaking~1v1~1admin~1namespaces~1{namespace}~1channels~1all~1parties/get/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:MATCHMAKING:CHANNEL [Read]"
        ],
        "HasScope": [
          "social"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "remove",
    "path": "/paths/~1matchmaking~1v1~1admin~1namespaces~1{namespace}~1channels~1all~1parties/get/responses/200/schema/$ref"
  },
  {
    "op": "add",
    "path": "/paths/~1matchmaking~1v1~1admin~1namespaces~1{namespace}~1channels~1all~1parties/get/responses/200/schema/additionalProperties",
    "value": {
      "items": {
        "$ref": "#/definitions/models.MatchingParty"
      },
      "type": "array"
    }
  },
  {
    "op": "add",
    "path": "/paths/~1matchmaking~1v1~1admin~1namespaces~1{namespace}~1channels~1all~1parties/get/responses/200/schema/type",
    "value": "object"
  },
  {
    "op": "add",
    "path": "/paths/~1matchmaking~1v1~1admin~1namespaces~1{namespace}~1channels~1all~1sessions~1bulk/get/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:MATCHMAKING:CHANNEL [Read]"
        ],
        "HasScope": [
          "social"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "add",
    "path": "/paths/~1matchmaking~1namespaces~1{namespace}~1channels~1{channel}/delete/security",
    "value": [
      {
        "HasPermission": [
          "NAMESPACE:{namespace}:MATCHMAKING:CHANNEL [Delete]"
        ],
        "HasScope": [
          "social"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "add",
    "path": "/paths/~1matchmaking~1v1~1admin~1namespaces~1{namespace}~1channels~1export/get/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:MATCHMAKING:CHANNEL [Read]"
        ],
        "HasScope": [
          "social"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "add",
    "path": "/paths/~1healthz/get/security",
    "value": [
      {
        "authorization": []
      }
    ]
  }
]

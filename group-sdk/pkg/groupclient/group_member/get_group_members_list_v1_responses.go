// Code generated by go-swagger; DO NOT EDIT.

package group_member

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"io/ioutil"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/AccelByte/accelbyte-go-sdk/group-sdk/pkg/groupclientmodels"
)

// GetGroupMembersListV1Reader is a Reader for the GetGroupMembersListV1 structure.
type GetGroupMembersListV1Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetGroupMembersListV1Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetGroupMembersListV1OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetGroupMembersListV1BadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetGroupMembersListV1Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGetGroupMembersListV1Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetGroupMembersListV1NotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewGetGroupMembersListV1InternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		data, err := ioutil.ReadAll(response.Body())
		if err != nil {
			return nil, err
		}

		return nil, fmt.Errorf("Requested GET /group/v1/admin/namespaces/{namespace}/groups/{groupId}/members returns an error %d: %s", response.Code(), string(data))
	}
}

// NewGetGroupMembersListV1OK creates a GetGroupMembersListV1OK with default headers values
func NewGetGroupMembersListV1OK() *GetGroupMembersListV1OK {
	return &GetGroupMembersListV1OK{}
}

/*GetGroupMembersListV1OK handles this case with default header values.

  OK
*/
type GetGroupMembersListV1OK struct {
	Payload *groupclientmodels.ModelsGetGroupMemberListResponseV1
}

func (o *GetGroupMembersListV1OK) Error() string {
	return fmt.Sprintf("[GET /group/v1/admin/namespaces/{namespace}/groups/{groupId}/members][%d] getGroupMembersListV1OK  %+v", 200, o.Payload)
}

func (o *GetGroupMembersListV1OK) GetPayload() *groupclientmodels.ModelsGetGroupMemberListResponseV1 {
	return o.Payload
}

func (o *GetGroupMembersListV1OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(groupclientmodels.ModelsGetGroupMemberListResponseV1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGroupMembersListV1BadRequest creates a GetGroupMembersListV1BadRequest with default headers values
func NewGetGroupMembersListV1BadRequest() *GetGroupMembersListV1BadRequest {
	return &GetGroupMembersListV1BadRequest{}
}

/*GetGroupMembersListV1BadRequest handles this case with default header values.

  <table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>
*/
type GetGroupMembersListV1BadRequest struct {
	Payload *groupclientmodels.ResponseErrorResponse
}

func (o *GetGroupMembersListV1BadRequest) Error() string {
	return fmt.Sprintf("[GET /group/v1/admin/namespaces/{namespace}/groups/{groupId}/members][%d] getGroupMembersListV1BadRequest  %+v", 400, o.Payload)
}

func (o *GetGroupMembersListV1BadRequest) GetPayload() *groupclientmodels.ResponseErrorResponse {
	return o.Payload
}

func (o *GetGroupMembersListV1BadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(groupclientmodels.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGroupMembersListV1Unauthorized creates a GetGroupMembersListV1Unauthorized with default headers values
func NewGetGroupMembersListV1Unauthorized() *GetGroupMembersListV1Unauthorized {
	return &GetGroupMembersListV1Unauthorized{}
}

/*GetGroupMembersListV1Unauthorized handles this case with default header values.

  <table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>20001</td><td>unauthorized access</td></tr></table>
*/
type GetGroupMembersListV1Unauthorized struct {
	Payload *groupclientmodels.ResponseErrorResponse
}

func (o *GetGroupMembersListV1Unauthorized) Error() string {
	return fmt.Sprintf("[GET /group/v1/admin/namespaces/{namespace}/groups/{groupId}/members][%d] getGroupMembersListV1Unauthorized  %+v", 401, o.Payload)
}

func (o *GetGroupMembersListV1Unauthorized) GetPayload() *groupclientmodels.ResponseErrorResponse {
	return o.Payload
}

func (o *GetGroupMembersListV1Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(groupclientmodels.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGroupMembersListV1Forbidden creates a GetGroupMembersListV1Forbidden with default headers values
func NewGetGroupMembersListV1Forbidden() *GetGroupMembersListV1Forbidden {
	return &GetGroupMembersListV1Forbidden{}
}

/*GetGroupMembersListV1Forbidden handles this case with default header values.

  <table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>20022</td><td>token is not user token</td></tr></table>
*/
type GetGroupMembersListV1Forbidden struct {
	Payload *groupclientmodels.ResponseErrorResponse
}

func (o *GetGroupMembersListV1Forbidden) Error() string {
	return fmt.Sprintf("[GET /group/v1/admin/namespaces/{namespace}/groups/{groupId}/members][%d] getGroupMembersListV1Forbidden  %+v", 403, o.Payload)
}

func (o *GetGroupMembersListV1Forbidden) GetPayload() *groupclientmodels.ResponseErrorResponse {
	return o.Payload
}

func (o *GetGroupMembersListV1Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(groupclientmodels.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGroupMembersListV1NotFound creates a GetGroupMembersListV1NotFound with default headers values
func NewGetGroupMembersListV1NotFound() *GetGroupMembersListV1NotFound {
	return &GetGroupMembersListV1NotFound{}
}

/*GetGroupMembersListV1NotFound handles this case with default header values.

  <table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>73433</td><td>member group not found</td></tr></table>
*/
type GetGroupMembersListV1NotFound struct {
	Payload *groupclientmodels.ResponseErrorResponse
}

func (o *GetGroupMembersListV1NotFound) Error() string {
	return fmt.Sprintf("[GET /group/v1/admin/namespaces/{namespace}/groups/{groupId}/members][%d] getGroupMembersListV1NotFound  %+v", 404, o.Payload)
}

func (o *GetGroupMembersListV1NotFound) GetPayload() *groupclientmodels.ResponseErrorResponse {
	return o.Payload
}

func (o *GetGroupMembersListV1NotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(groupclientmodels.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGroupMembersListV1InternalServerError creates a GetGroupMembersListV1InternalServerError with default headers values
func NewGetGroupMembersListV1InternalServerError() *GetGroupMembersListV1InternalServerError {
	return &GetGroupMembersListV1InternalServerError{}
}

/*GetGroupMembersListV1InternalServerError handles this case with default header values.

  Internal Server Error
*/
type GetGroupMembersListV1InternalServerError struct {
	Payload *groupclientmodels.ResponseErrorResponse
}

func (o *GetGroupMembersListV1InternalServerError) Error() string {
	return fmt.Sprintf("[GET /group/v1/admin/namespaces/{namespace}/groups/{groupId}/members][%d] getGroupMembersListV1InternalServerError  %+v", 500, o.Payload)
}

func (o *GetGroupMembersListV1InternalServerError) GetPayload() *groupclientmodels.ResponseErrorResponse {
	return o.Payload
}

func (o *GetGroupMembersListV1InternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(groupclientmodels.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

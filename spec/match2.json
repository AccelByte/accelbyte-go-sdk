{
  "host": "demo.accelbyte.io",
  "info": {
    "description": "Justice Matchmaking Service",
    "title": "Justice Match Service v2",
    "version": "1.4.1"
  },
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "HasPermission": {
      "authorizationUrl": "https://dummy.oauth.net/auth",
      "flow": "accessCode",
      "scopes": {
        "NAMESPACE:{namespace}:MATCHMAKING:BACKFILL [CREATE]": "NAMESPACE:{namespace}:MATCHMAKING:BACKFILL [CREATE]",
        "NAMESPACE:{namespace}:MATCHMAKING:BACKFILL [UPDATE]": "NAMESPACE:{namespace}:MATCHMAKING:BACKFILL [UPDATE]",
        "NAMESPACE:{namespace}:MATCHMAKING:FUNCTIONS [CREATE]": "NAMESPACE:{namespace}:MATCHMAKING:FUNCTIONS [CREATE]",
        "NAMESPACE:{namespace}:MATCHMAKING:FUNCTIONS [DELETE]": "NAMESPACE:{namespace}:MATCHMAKING:FUNCTIONS [DELETE]",
        "NAMESPACE:{namespace}:MATCHMAKING:FUNCTIONS [READ]": "NAMESPACE:{namespace}:MATCHMAKING:FUNCTIONS [READ]",
        "NAMESPACE:{namespace}:MATCHMAKING:POOL [CREATE]": "NAMESPACE:{namespace}:MATCHMAKING:POOL [CREATE]",
        "NAMESPACE:{namespace}:MATCHMAKING:POOL [DELETE]": "NAMESPACE:{namespace}:MATCHMAKING:POOL [DELETE]",
        "NAMESPACE:{namespace}:MATCHMAKING:POOL [READ]": "NAMESPACE:{namespace}:MATCHMAKING:POOL [READ]",
        "NAMESPACE:{namespace}:MATCHMAKING:POOL [UPDATE]": "NAMESPACE:{namespace}:MATCHMAKING:POOL [UPDATE]",
        "NAMESPACE:{namespace}:MATCHMAKING:RULES [CREATE]": "NAMESPACE:{namespace}:MATCHMAKING:RULES [CREATE]",
        "NAMESPACE:{namespace}:MATCHMAKING:RULES [DELETE]": "NAMESPACE:{namespace}:MATCHMAKING:RULES [DELETE]",
        "NAMESPACE:{namespace}:MATCHMAKING:RULES [READ]": "NAMESPACE:{namespace}:MATCHMAKING:RULES [READ]",
        "NAMESPACE:{namespace}:MATCHMAKING:RULES [UPDATE]": "NAMESPACE:{namespace}:MATCHMAKING:RULES [UPDATE]",
        "NAMESPACE:{namespace}:MATCHMAKING:TICKET [CREATE]": "NAMESPACE:{namespace}:MATCHMAKING:TICKET [CREATE]",
        "NAMESPACE:{namespace}:MATCHMAKING:TICKET [DELETE]": "NAMESPACE:{namespace}:MATCHMAKING:TICKET [DELETE]",
        "NAMESPACE:{namespace}:MATCHMAKING:TICKET [READ]": "NAMESPACE:{namespace}:MATCHMAKING:TICKET [READ]"
      },
      "tokenUrl": "https://dumy.oauth.net/token",
      "type": "oauth2"
    },
    "HasScope": {
      "authorizationUrl": "https://dummy.oauth.net/auth",
      "flow": "accessCode",
      "scopes": {
        "social": "social"
      },
      "tokenUrl": "https://dumy.oauth.net/token",
      "type": "oauth2"
    },
    "authorization": {
      "in": "header",
      "name": "Authorization",
      "type": "apiKey"
    }
  },
  "swagger": "2.0",
  "paths": {
    "/healthz": {
      "get": {
        "operationId": "GetHealthcheckInfo",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "authorization": []
          }
        ]
      }
    },
    "/match2/healthz": {
      "get": {
        "operationId": "GetHealthcheckInfoV1",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "authorization": []
          }
        ]
      }
    },
    "/match2/v1/namespaces/{namespace}/backfill": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": " Required Permission: NAMESPACE:{namespace}:MATCHMAKING:BACKFILL [CREATE]\n\nRequired Scope: social\n\nCreate backfill ticket\n",
        "operationId": "CreateBackfill",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.BackFillCreateRequest"
            }
          },
          {
            "description": "namespace of the game",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        },
        "security": [
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:MATCHMAKING:BACKFILL [CREATE]"
            ],
            "HasScope": [
              "social"
            ],
            "authorization": []
          }
        ],
        "summary": "Create a backfill ticket",
        "tags": [
          "Backfill"
        ]
      }
    },
    "/match2/v1/namespaces/{namespace}/backfill/{backfillID}/proposal/accept": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": " Required Permission: NAMESPACE:{namespace}:MATCHMAKING:BACKFILL [UPDATE]\n\nRequired Scope: social\n\nAccept backfill proposal\n",
        "operationId": "AcceptBackfill",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.BackFillAcceptRequest"
            }
          },
          {
            "description": "namespace of the game",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "backfill id",
            "in": "path",
            "name": "backfillID",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        },
        "security": [
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:MATCHMAKING:BACKFILL [UPDATE]"
            ],
            "HasScope": [
              "social"
            ],
            "authorization": []
          }
        ],
        "summary": "Accept a backfill proposal",
        "tags": [
          "Backfill"
        ]
      }
    },
    "/match2/v1/namespaces/{namespace}/backfill/{backfillID}/proposal/reject": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": " Required Permission: NAMESPACE:{namespace}:MATCHMAKING:BACKFILL [UPDATE]\n\nRequired Scope: social\n\nReject backfill proposal\n",
        "operationId": "RejectBackfill",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.backFillRejectRequest"
            }
          },
          {
            "description": "namespace of the game",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "backfill id",
            "in": "path",
            "name": "backfillID",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        },
        "security": [
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:MATCHMAKING:BACKFILL [UPDATE]"
            ],
            "HasScope": [
              "social"
            ],
            "authorization": []
          }
        ],
        "summary": "Reject a backfill proposal",
        "tags": [
          "Backfill"
        ]
      }
    },
    "/match2/v1/namespaces/{namespace}/match-functions": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Required Permission: NAMESPACE:{namespace}:MATCHMAKING:FUNCTIONS [READ]\n\nRequired Scope: social\n\nList existing match functions.\n",
        "operationId": "MatchFunctionList",
        "parameters": [
          {
            "description": "namespace of the game",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "default": 20,
            "description": "Pagination limit",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "default": 0,
            "description": "Pagination offset",
            "in": "query",
            "name": "offset",
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/api.ListMatchFunctionsResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        },
        "security": [
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:MATCHMAKING:FUNCTIONS [READ]"
            ],
            "HasScope": [
              "social"
            ],
            "authorization": []
          }
        ],
        "summary": "List existing match functions",
        "tags": [
          "Match-Functions"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": " Required Permission: NAMESPACE:{namespace}:MATCHMAKING:FUNCTIONS [CREATE]\n\nRequired Scope: social\n\nCreates a new matchmaking function.\n",
        "operationId": "CreateMatchFunction",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.MatchFunctionRequest"
            }
          },
          {
            "description": "namespace of the game",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        },
        "security": [
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:MATCHMAKING:FUNCTIONS [CREATE]"
            ],
            "HasScope": [
              "social"
            ],
            "authorization": []
          }
        ],
        "summary": "Create a match function",
        "tags": [
          "Match-Functions"
        ]
      }
    },
    "/match2/v1/namespaces/{namespace}/match-functions/{name}": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Required Permission: NAMESPACE:{namespace}:MATCHMAKING:FUNCTIONS [DELETE]\n\nRequired Scope: social\n\nDeletes an existing match function.\n",
        "operationId": "DeleteMatchFunction",
        "parameters": [
          {
            "description": "name of the match function",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "namespace of the game",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        },
        "security": [
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:MATCHMAKING:FUNCTIONS [DELETE]"
            ],
            "HasScope": [
              "social"
            ],
            "authorization": []
          }
        ],
        "summary": "Delete a match function",
        "tags": [
          "Match-Functions"
        ]
      }
    },
    "/match2/v1/namespaces/{namespace}/match-pools": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Required Permission: NAMESPACE:{namespace}:MATCHMAKING:POOL [READ]\n\nRequired Scope: social\n\nList matchmaking pools.\n",
        "operationId": "MatchPoolList",
        "parameters": [
          {
            "description": "namespace of the game",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "default": 20,
            "description": "Pagination limit",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "default": 0,
            "description": "Pagination offset",
            "in": "query",
            "name": "offset",
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/api.ListMatchPoolsResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        },
        "security": [
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:MATCHMAKING:POOL [READ]"
            ],
            "HasScope": [
              "social"
            ],
            "authorization": []
          }
        ],
        "summary": "List match pools",
        "tags": [
          "Match-Pools"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Required Permission: NAMESPACE:{namespace}:MATCHMAKING:POOL [CREATE]\n\nRequired Scope: social\n\nCreates a new matchmaking pool.\n\nA pool is isolated from other pools (i.e. tickets may be matched with other tickets in the same pool, but not with tickets in other pools).\nEach pool has its own matchmaking rules and/or logic.\n\nticket_expiration_seconds and backfill_ticket_expiration_seconds will be set to 300 seconds (5 minutes) by default if not filled.\n",
        "operationId": "CreateMatchPool",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.MatchPool"
            }
          },
          {
            "description": "namespace of the game",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        },
        "security": [
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:MATCHMAKING:POOL [CREATE]"
            ],
            "HasScope": [
              "social"
            ],
            "authorization": []
          }
        ],
        "summary": "Create a match pool",
        "tags": [
          "Match-Pools"
        ]
      }
    },
    "/match2/v1/namespaces/{namespace}/match-pools/{pool}": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Required Permission: NAMESPACE:{namespace}:MATCHMAKING:POOL [DELETE]\n\nRequired Scope: social\n\nDeletes an existing matchmaking pool.\n",
        "operationId": "DeleteMatchPool",
        "parameters": [
          {
            "description": "namespace of the game",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "Name of the match pool",
            "in": "path",
            "name": "pool",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        },
        "security": [
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:MATCHMAKING:POOL [DELETE]"
            ],
            "HasScope": [
              "social"
            ],
            "authorization": []
          }
        ],
        "summary": "Delete a match pool",
        "tags": [
          "Match-Pools"
        ]
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Required Permission: NAMESPACE:{namespace}:MATCHMAKING:POOL [READ]\n\nRequired Scope: social\n\nGet details for a specific match pool\n",
        "operationId": "MatchPoolDetails",
        "parameters": [
          {
            "description": "namespace of the game",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "Name of the match pool",
            "in": "path",
            "name": "pool",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/api.MatchPool"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        },
        "security": [
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:MATCHMAKING:POOL [READ]"
            ],
            "HasScope": [
              "social"
            ],
            "authorization": []
          }
        ],
        "summary": "Get details for a specific match pool",
        "tags": [
          "Match-Pools"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Required Permission: NAMESPACE:{namespace}:MATCHMAKING:POOL [UPDATE]\n\nRequired Scope: social\n\nUpdates an existing matchmaking pool.\n\nticket_expiration_seconds and backfill_ticket_expiration_seconds will be set to 300 seconds (5 minutes) by default if not filled.\n",
        "operationId": "UpdateMatchPool",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.MatchPoolConfig"
            }
          },
          {
            "description": "namespace of the game",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "Name of the match pool",
            "in": "path",
            "name": "pool",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.MatchPool"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        },
        "security": [
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:MATCHMAKING:POOL [UPDATE]"
            ],
            "HasScope": [
              "social"
            ],
            "authorization": []
          }
        ],
        "summary": "Update a match pool",
        "tags": [
          "Match-Pools"
        ]
      }
    },
    "/match2/v1/namespaces/{namespace}/match-tickets": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Required Permission: NAMESPACE:{namespace}:MATCHMAKING:TICKET [CREATE]\n\nRequired Scope: social\n\nCreates a new request for matchmaking\n",
        "operationId": "CreateMatchTicket",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.MatchTicketRequest"
            }
          },
          {
            "description": "namespace of the game",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/api.MatchTicketResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found when the specified match pool does not exist",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        },
        "security": [
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:MATCHMAKING:TICKET [CREATE]"
            ],
            "HasScope": [
              "social"
            ],
            "authorization": []
          }
        ],
        "summary": "Create a matchmaking ticket",
        "tags": [
          "Match-Tickets"
        ]
      }
    },
    "/match2/v1/namespaces/{namespace}/match-tickets/{ticketid}": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Required Permission: NAMESPACE:{namespace}:MATCHMAKING:TICKET [DELETE]\n\nRequired Scope: social\n\nDeletes an existing matchmaking ticket.\n",
        "operationId": "DeleteMatchTicket",
        "parameters": [
          {
            "description": "namespace of the game",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "ID of the match ticket",
            "in": "path",
            "name": "ticketid",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        },
        "security": [
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:MATCHMAKING:TICKET [DELETE]"
            ],
            "HasScope": [
              "social"
            ],
            "authorization": []
          }
        ],
        "summary": "Delete a match ticket",
        "tags": [
          "Match-Tickets"
        ]
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Required Permission: NAMESPACE:{namespace}:MATCHMAKING:TICKET [READ]\n\nRequired Scope: social\n\nGet details for a specific match ticket\n",
        "operationId": "MatchTicketDetails",
        "parameters": [
          {
            "description": "namespace of the game",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "id of the ticket to get the status of",
            "in": "path",
            "name": "ticketid",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/api.MatchTicketStatus"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        },
        "security": [
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:MATCHMAKING:TICKET [READ]"
            ],
            "HasScope": [
              "social"
            ],
            "authorization": []
          }
        ],
        "summary": "Get details for a specific match ticket",
        "tags": [
          "Match-Tickets"
        ]
      }
    },
    "/match2/v1/namespaces/{namespace}/rulesets": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Required Permission: NAMESPACE:{namespace}:MATCHMAKING:RULES [READ]\n\nRequired Scope: social\n\nList rule sets.\n",
        "operationId": "RuleSetList",
        "parameters": [
          {
            "description": "namespace of the game",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "default": 20,
            "description": "Pagination limit",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "default": 0,
            "description": "Pagination offset",
            "in": "query",
            "name": "offset",
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/api.ListRuleSetsResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        },
        "security": [
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:MATCHMAKING:RULES [READ]"
            ],
            "HasScope": [
              "social"
            ],
            "authorization": []
          }
        ],
        "summary": "List existing rule sets",
        "tags": [
          "Rule-Sets"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Required Permission: NAMESPACE:{namespace}:MATCHMAKING:RULES [CREATE]\n\nRequired Scope: social\n\nCreates a new rules set.\n\nA rule set has a name and contains arbitrary data which is meaningful to some particular match function(s)\nThe name is used for a match pool to select the ruleset data that should be sent to the match function when matchmaking in that pool.\n",
        "operationId": "CreateRuleSet",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.MatchRuleSet"
            }
          },
          {
            "description": "namespace of the game",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        },
        "security": [
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:MATCHMAKING:RULES [CREATE]"
            ],
            "HasScope": [
              "social"
            ],
            "authorization": []
          }
        ],
        "summary": "Create a match rule set",
        "tags": [
          "Rule-Sets"
        ]
      }
    },
    "/match2/v1/namespaces/{namespace}/rulesets/{ruleset}": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Required Permission: NAMESPACE:{namespace}:MATCHMAKING:RULES [DELETE]\n\nRequired Scope: social\n\nDeletes an existing rule set.\n",
        "operationId": "DeleteRuleSet",
        "parameters": [
          {
            "description": "namespace of the game",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "Name of the rule set",
            "in": "path",
            "name": "ruleset",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        },
        "security": [
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:MATCHMAKING:RULES [DELETE]"
            ],
            "HasScope": [
              "social"
            ],
            "authorization": []
          }
        ],
        "summary": "Delete a rule set",
        "tags": [
          "Rule-Sets"
        ]
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Required Permission: NAMESPACE:{namespace}:MATCHMAKING:RULES [READ]\n\nRequired Scope: social\n\nGet details for a specific rule set\n",
        "operationId": "RuleSetDetails",
        "parameters": [
          {
            "description": "namespace of the game",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "Name of the rule set",
            "in": "path",
            "name": "ruleset",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/api.MatchRuleSet"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        },
        "security": [
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:MATCHMAKING:RULES [READ]"
            ],
            "HasScope": [
              "social"
            ],
            "authorization": []
          }
        ],
        "summary": "Get details for a specific rule set",
        "tags": [
          "Rule-Sets"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Required Permission: NAMESPACE:{namespace}:MATCHMAKING:RULES [UPDATE]\n\nRequired Scope: social\n\nUpdates an existing matchmaking rule set.\n",
        "operationId": "UpdateRuleSet",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.MatchRuleSetData"
            }
          },
          {
            "description": "namespace of the game",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "Name of the match rule set",
            "in": "path",
            "name": "ruleset",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.MatchRuleSet"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        },
        "security": [
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:MATCHMAKING:RULES [UPDATE]"
            ],
            "HasScope": [
              "social"
            ],
            "authorization": []
          }
        ],
        "summary": "Update a match rule set",
        "tags": [
          "Rule-Sets"
        ]
      }
    },
    "/match2/version": {
      "get": {
        "operationId": "versionCheckHandler",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "authorization": []
          }
        ]
      }
    }
  },
  "definitions": {
    "api.BackFillAcceptRequest": {
      "properties": {
        "proposalId": {
          "type": "string"
        },
        "stop": {
          "type": "boolean",
          "x-omitempty": false
        }
      },
      "required": [
        "proposalId",
        "stop"
      ]
    },
    "api.BackFillCreateRequest": {
      "properties": {
        "matchPool": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        }
      },
      "required": [
        "matchPool",
        "sessionId"
      ]
    },
    "api.ListMatchFunctionsResponse": {
      "properties": {
        "configs": {
          "items": {
            "$ref": "#/definitions/api.MatchFunctionConfig"
          },
          "type": "array"
        },
        "functions": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "pagination": {
          "$ref": "#/definitions/models.Pagination"
        }
      },
      "required": [
        "configs",
        "functions",
        "pagination"
      ]
    },
    "api.ListMatchPoolsResponse": {
      "properties": {
        "data": {
          "items": {
            "$ref": "#/definitions/api.MatchPool"
          },
          "type": "array"
        },
        "pagination": {
          "$ref": "#/definitions/models.Pagination"
        }
      },
      "required": [
        "data",
        "pagination"
      ]
    },
    "api.ListRuleSetsResponse": {
      "properties": {
        "data": {
          "items": {
            "$ref": "#/definitions/api.MatchRuleSetNameData"
          },
          "type": "array"
        },
        "pagination": {
          "$ref": "#/definitions/models.Pagination"
        }
      },
      "required": [
        "data",
        "pagination"
      ]
    },
    "api.MatchFunctionConfig": {
      "properties": {
        "match_function": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "required": [
        "match_function",
        "url"
      ]
    },
    "api.MatchFunctionRequest": {
      "properties": {
        "match_function": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "required": [
        "match_function",
        "url"
      ]
    },
    "api.MatchPool": {
      "properties": {
        "backfill_ticket_expiration_seconds": {
          "format": "int32",
          "type": "integer"
        },
        "match_function": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "rule_set": {
          "type": "string"
        },
        "session_template": {
          "type": "string"
        },
        "ticket_expiration_seconds": {
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [
        "backfill_ticket_expiration_seconds",
        "match_function",
        "name",
        "rule_set",
        "session_template",
        "ticket_expiration_seconds"
      ]
    },
    "api.MatchPoolConfig": {
      "properties": {
        "backfill_ticket_expiration_seconds": {
          "format": "int32",
          "type": "integer"
        },
        "match_function": {
          "type": "string"
        },
        "rule_set": {
          "type": "string"
        },
        "session_template": {
          "type": "string"
        },
        "ticket_expiration_seconds": {
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [
        "backfill_ticket_expiration_seconds",
        "match_function",
        "rule_set",
        "session_template",
        "ticket_expiration_seconds"
      ]
    },
    "api.MatchRuleSet": {
      "properties": {
        "data": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "data",
        "name"
      ]
    },
    "api.MatchRuleSetData": {
      "properties": {
        "data": {
          "type": "string"
        }
      },
      "required": [
        "data"
      ]
    },
    "api.MatchRuleSetNameData": {
      "properties": {
        "name": {
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "api.MatchTicketRequest": {
      "properties": {
        "attributes": {
          "type": "object"
        },
        "latencies": {
          "additionalProperties": {
            "type": "integer"
          },
          "type": "object"
        },
        "matchPool": {
          "type": "string"
        },
        "sessionID": {
          "type": "string"
        }
      },
      "required": [
        "attributes",
        "latencies",
        "matchPool",
        "sessionID"
      ]
    },
    "api.MatchTicketResponse": {
      "properties": {
        "matchTicketID": {
          "type": "string"
        }
      },
      "required": [
        "matchTicketID"
      ]
    },
    "api.MatchTicketStatus": {
      "properties": {
        "matchFound": {
          "type": "boolean",
          "x-omitempty": false
        },
        "sessionID": {
          "type": "string"
        }
      },
      "required": [
        "matchFound",
        "sessionID"
      ]
    },
    "api.backFillRejectRequest": {
      "properties": {
        "proposalId": {
          "type": "string"
        },
        "stop": {
          "type": "boolean",
          "x-omitempty": false
        }
      },
      "required": [
        "proposalId",
        "stop"
      ]
    },
    "models.Pagination": {
      "properties": {
        "first": {
          "type": "string"
        },
        "last": {
          "type": "string"
        },
        "next": {
          "type": "string"
        },
        "previous": {
          "type": "string"
        }
      },
      "required": [
        "first",
        "last",
        "next",
        "previous"
      ]
    },
    "response.Error": {
      "properties": {
        "ErrorCode": {
          "format": "int32",
          "type": "integer",
          "x-nullable": false
        },
        "ErrorMessage": {
          "type": "string",
          "x-nullable": false
        }
      },
      "required": [
        "ErrorCode",
        "ErrorMessage"
      ]
    }
  }
}
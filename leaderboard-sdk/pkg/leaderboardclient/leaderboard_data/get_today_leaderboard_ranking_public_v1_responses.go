// Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// Code generated by go-swagger; DO NOT EDIT.

package leaderboard_data

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"io/ioutil"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/AccelByte/accelbyte-go-sdk/leaderboard-sdk/pkg/leaderboardclientmodels"
)

// GetTodayLeaderboardRankingPublicV1Reader is a Reader for the GetTodayLeaderboardRankingPublicV1 structure.
type GetTodayLeaderboardRankingPublicV1Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTodayLeaderboardRankingPublicV1Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTodayLeaderboardRankingPublicV1OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetTodayLeaderboardRankingPublicV1BadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetTodayLeaderboardRankingPublicV1NotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewGetTodayLeaderboardRankingPublicV1InternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		data, err := ioutil.ReadAll(response.Body())
		if err != nil {
			return nil, err
		}

		return nil, fmt.Errorf("Requested GET /leaderboard/v1/public/namespaces/{namespace}/leaderboards/{leaderboardCode}/today returns an error %d: %s", response.Code(), string(data))
	}
}

// NewGetTodayLeaderboardRankingPublicV1OK creates a GetTodayLeaderboardRankingPublicV1OK with default headers values
func NewGetTodayLeaderboardRankingPublicV1OK() *GetTodayLeaderboardRankingPublicV1OK {
	return &GetTodayLeaderboardRankingPublicV1OK{}
}

/*GetTodayLeaderboardRankingPublicV1OK handles this case with default header values.

  OK
*/
type GetTodayLeaderboardRankingPublicV1OK struct {
	Payload *leaderboardclientmodels.ModelsGetLeaderboardRankingResp
}

func (o *GetTodayLeaderboardRankingPublicV1OK) Error() string {
	return fmt.Sprintf("[GET /leaderboard/v1/public/namespaces/{namespace}/leaderboards/{leaderboardCode}/today][%d] getTodayLeaderboardRankingPublicV1OK  %+v", 200, o.Payload)
}

func (o *GetTodayLeaderboardRankingPublicV1OK) GetPayload() *leaderboardclientmodels.ModelsGetLeaderboardRankingResp {
	return o.Payload
}

func (o *GetTodayLeaderboardRankingPublicV1OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(leaderboardclientmodels.ModelsGetLeaderboardRankingResp)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTodayLeaderboardRankingPublicV1BadRequest creates a GetTodayLeaderboardRankingPublicV1BadRequest with default headers values
func NewGetTodayLeaderboardRankingPublicV1BadRequest() *GetTodayLeaderboardRankingPublicV1BadRequest {
	return &GetTodayLeaderboardRankingPublicV1BadRequest{}
}

/*GetTodayLeaderboardRankingPublicV1BadRequest handles this case with default header values.

  Bad Request
*/
type GetTodayLeaderboardRankingPublicV1BadRequest struct {
	Payload *leaderboardclientmodels.ResponseErrorResponse
}

func (o *GetTodayLeaderboardRankingPublicV1BadRequest) Error() string {
	return fmt.Sprintf("[GET /leaderboard/v1/public/namespaces/{namespace}/leaderboards/{leaderboardCode}/today][%d] getTodayLeaderboardRankingPublicV1BadRequest  %+v", 400, o.Payload)
}

func (o *GetTodayLeaderboardRankingPublicV1BadRequest) GetPayload() *leaderboardclientmodels.ResponseErrorResponse {
	return o.Payload
}

func (o *GetTodayLeaderboardRankingPublicV1BadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(leaderboardclientmodels.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTodayLeaderboardRankingPublicV1NotFound creates a GetTodayLeaderboardRankingPublicV1NotFound with default headers values
func NewGetTodayLeaderboardRankingPublicV1NotFound() *GetTodayLeaderboardRankingPublicV1NotFound {
	return &GetTodayLeaderboardRankingPublicV1NotFound{}
}

/*GetTodayLeaderboardRankingPublicV1NotFound handles this case with default header values.

  Not Found
*/
type GetTodayLeaderboardRankingPublicV1NotFound struct {
	Payload *leaderboardclientmodels.ResponseErrorResponse
}

func (o *GetTodayLeaderboardRankingPublicV1NotFound) Error() string {
	return fmt.Sprintf("[GET /leaderboard/v1/public/namespaces/{namespace}/leaderboards/{leaderboardCode}/today][%d] getTodayLeaderboardRankingPublicV1NotFound  %+v", 404, o.Payload)
}

func (o *GetTodayLeaderboardRankingPublicV1NotFound) GetPayload() *leaderboardclientmodels.ResponseErrorResponse {
	return o.Payload
}

func (o *GetTodayLeaderboardRankingPublicV1NotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(leaderboardclientmodels.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTodayLeaderboardRankingPublicV1InternalServerError creates a GetTodayLeaderboardRankingPublicV1InternalServerError with default headers values
func NewGetTodayLeaderboardRankingPublicV1InternalServerError() *GetTodayLeaderboardRankingPublicV1InternalServerError {
	return &GetTodayLeaderboardRankingPublicV1InternalServerError{}
}

/*GetTodayLeaderboardRankingPublicV1InternalServerError handles this case with default header values.

  Internal Server Error
*/
type GetTodayLeaderboardRankingPublicV1InternalServerError struct {
	Payload *leaderboardclientmodels.ResponseErrorResponse
}

func (o *GetTodayLeaderboardRankingPublicV1InternalServerError) Error() string {
	return fmt.Sprintf("[GET /leaderboard/v1/public/namespaces/{namespace}/leaderboards/{leaderboardCode}/today][%d] getTodayLeaderboardRankingPublicV1InternalServerError  %+v", 500, o.Payload)
}

func (o *GetTodayLeaderboardRankingPublicV1InternalServerError) GetPayload() *leaderboardclientmodels.ResponseErrorResponse {
	return o.Payload
}

func (o *GetTodayLeaderboardRankingPublicV1InternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(leaderboardclientmodels.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

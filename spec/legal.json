{
  "swagger": "2.0",
  "info": {
    "description": "Justice Legal Service",
    "version": "1.14.0",
    "title": "justice-legal-service",
    "contact": {
      "name": "Engineering Team at AccelByte",
      "url": "https://accelbyte.io",
      "email": "engineering@accelbyte.io"
    }
  },
  "basePath": "/agreement",
  "tags": [
    {
      "name": "Anonymization"
    },
    {
      "name": "Agreement"
    },
    {
      "name": "Base Legal Policies"
    },
    {
      "name": "Eligibilities"
    },
    {
      "name": "Localized Policy Versions"
    },
    {
      "name": "Policies"
    },
    {
      "name": "Policy Versions"
    },
    {
      "name": "UserInfo"
    },
    {
      "name": "Utility"
    }
  ],
  "paths": {
    "/admin/users/{userId}/anonymization/agreements": {
      "delete": {
        "tags": [
          "Anonymization"
        ],
        "summary": "Anonymize user's agreement record",
        "description": "This API will anonymize agreement record for specified user. Other detail info: <ul><li><i>Required permission</i>: resource=\"ADMIN:NAMESPACE:*:LEGAL\", action=8 (DELETE)</li></ul>",
        "operationId": "anonymizeUserAgreement",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User Id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Anonymize successfully"
          },
          "404": {
            "description": "<table><tr><td>NumericErrorCode</td><td>ErrorCode</td></tr><tr><td>40047</td><td>errors.net.accelbyte.platform.legal.user_agreement_not_found</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ]
      }
    },
    "/admin/agreements/policies/users/{userId}": {
      "get": {
        "tags": [
          "Agreement"
        ],
        "summary": "Retrieve Accepted Legal Agreements",
        "description": "This API will return all accepted Legal Agreements for specified user. Other detail info: <ul><li><i>Required permission</i>: resource=\"ADMIN:NAMESPACE:*:LEGAL\", action=2 (READ)</li></ul>",
        "operationId": "retrieveAcceptedAgreements",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User Id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RetrieveAcceptedAgreementResponse"
              }
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ]
      }
    },
    "/admin/agreements/policy-versions/users": {
      "get": {
        "tags": [
          "Agreement"
        ],
        "summary": "Retrieve All Users Accepting Legal Agreements",
        "description": "This API will return all users who has accepted a specific policy version.Other detail info: <ul><li><i>Required permission</i>: resource=\"ADMIN:NAMESPACE:*:LEGAL\", action=2 (READ)</li></ul>",
        "operationId": "retrieveAllUsersByPolicyVersion",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "policyVersionId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "display name or email or username",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "offset",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit",
            "required": false,
            "type": "integer",
            "default": 20,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PagedRetrieveUserAcceptedAgreementResponse"
              }
            }
          },
          "404": {
            "description": "<table><tr><td>NumericErrorCode</td><td>ErrorCode</td></tr><tr><td>40035</td><td>errors.net.accelbyte.platform.legal.policy_version_not_found</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ]
      }
    },
    "/admin/base-policies": {
      "get": {
        "tags": [
          "Base Legal Policies"
        ],
        "summary": "Retrieve All Base Legal Policy",
        "description": "Retrieve all base policies.<br>Other detail info: <ul><li><i>Required permission</i>: resource=\"ADMIN:NAMESPACE:*:LEGAL\", action=2 (READ)</li></ul>",
        "operationId": "retrieveAllLegalPolicies",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RetrieveBasePolicyResponse"
              }
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "Base Legal Policies"
        ],
        "summary": "Create a Base Legal Policy",
        "description": "Create a legal policy.<br>Other detail info: <ul><li><i>Required permission</i>: resource=\"ADMIN:NAMESPACE:*:LEGAL\", action=1 (CREATE)</li></ul>",
        "operationId": "createPolicy",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CreateBasePolicyRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CreateBasePolicyResponse"
            }
          },
          "409": {
            "description": "<table><tr><td>NumericErrorCode</td><td>ErrorCode</td></tr><tr><td>40030</td><td>errors.net.accelbyte.platform.legal.invalid_policy_type</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ]
      }
    },
    "/admin/base-policies/{basePolicyId}": {
      "get": {
        "tags": [
          "Base Legal Policies"
        ],
        "summary": "Retrieve a Base Legal Policy",
        "description": "Retrieve a base policy.<br>Other detail info: <ul><li><i>Required permission</i>: resource=\"ADMIN:NAMESPACE:*:LEGAL\", action=2 (READ)</li></ul>",
        "operationId": "retrieveSinglePolicy",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "basePolicyId",
            "in": "path",
            "description": "BasePolicy Id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RetrieveBasePolicyResponse"
            }
          },
          "404": {
            "description": "<table><tr><td>NumericErrorCode</td><td>ErrorCode</td></tr><tr><td>40031</td><td>errors.net.accelbyte.platform.legal.base_policy_not_found</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Base Legal Policies"
        ],
        "summary": "Update Base Legal Policy",
        "description": "Update an existing base policy.<br>Other detail info: <ul><li><i>Required permission</i>: resource=\"ADMIN:NAMESPACE:*:LEGAL\", action=4 (UPDATE)</li></ul>",
        "operationId": "partialUpdatePolicy",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "basePolicyId",
            "in": "path",
            "description": "BasePolicy Id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UpdateBasePolicyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UpdateBasePolicyResponse"
            }
          },
          "400": {
            "description": "<table><tr><td>NumericErrorCode</td><td>ErrorCode</td></tr><tr><td>40032</td><td>errors.net.accelbyte.platform.legal.invalid_base_policy</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ]
      }
    },
    "/admin/base-policies/{basePolicyId}/countries/{countryCode}": {
      "get": {
        "tags": [
          "Base Legal Policies"
        ],
        "summary": "Retrieve a Base Legal Policy based on a Particular Country",
        "description": "Retrieve a Base Legal Policy based on a Particular Country.<br>Other detail info: <ul><li><i>Required permission</i>: resource=\"ADMIN:NAMESPACE:*:LEGAL\", action=2 (READ)</li></ul>",
        "operationId": "retrievePolicyCountry",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "basePolicyId",
            "in": "path",
            "description": "BasePolicy Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "countryCode",
            "in": "path",
            "description": "Country Code",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RetrievePolicyResponse"
            }
          },
          "404": {
            "description": "<table><tr><td>NumericErrorCode</td><td>ErrorCode</td></tr><tr><td>40031</td><td>errors.net.accelbyte.platform.legal.base_policy_not_found</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ]
      }
    },
    "/admin/policy-types": {
      "get": {
        "tags": [
          "Base Legal Policies"
        ],
        "summary": "Retrieve All Policy Type",
        "description": "Retrieve all supported policy types.<br>Other detail info: <ul><li><i>Required permission</i>: resource=\"ADMIN:NAMESPACE:*:LEGAL\", action=2 (READ)</li></ul>",
        "operationId": "retrieveAllPolicyTypes",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "Offset",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RetrievePolicyTypeResponse"
              }
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ]
      }
    },
    "/admin/localized-policy-versions/{localizedPolicyVersionId}": {
      "get": {
        "tags": [
          "Localized Policy Versions"
        ],
        "summary": "Retrieve a Localized Version from Country-Specific Policy",
        "description": "Retrieve a version of a particular country-specific policy.<br>Other detail info: <ul><li><i>Required permission</i>: resource=\"ADMIN:NAMESPACE:*:LEGAL\", action=2 (READ)</li></ul>",
        "operationId": "retrieveSingleLocalizedPolicyVersion",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "localizedPolicyVersionId",
            "in": "path",
            "description": "Localized Policy Version Id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UpdateLocalizedPolicyVersionResponse"
            }
          },
          "400": {
            "description": "<table><tr><td>NumericErrorCode</td><td>ErrorCode</td></tr><tr><td>2912</td><td>errors.net.accelbyte.platform.legal.invalid_policy_version</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ]
      },
      "put": {
        "tags": [
          "Localized Policy Versions"
        ],
        "summary": "Update a Localized Version from Country-Specific Policy",
        "description": "Update a version of a particular country-specific policy.<br>Other detail info: <ul><li><i>Required permission</i>: resource=\"ADMIN:NAMESPACE:*:LEGAL\", action=4 (UPDATE)</li></ul>",
        "operationId": "updateLocalizedPolicyVersion",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "localizedPolicyVersionId",
            "in": "path",
            "description": "Localized Policy Version Id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UpdateLocalizedPolicyVersionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UpdateLocalizedPolicyVersionResponse"
            }
          },
          "400": {
            "description": "<table><tr><td>NumericErrorCode</td><td>ErrorCode</td></tr><tr><td>40035</td><td>errors.net.accelbyte.platform.legal.invalid_policy_version</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ]
      }
    },
    "/admin/localized-policy-versions/versions/{policyVersionId}": {
      "get": {
        "tags": [
          "Localized Policy Versions"
        ],
        "summary": "Retrieve Versions from Country-Specific Policy",
        "description": "Retrieve versions of a particular country-specific policy.<br>Other detail info: <ul><li><i>Required permission</i>: resource=\"ADMIN:NAMESPACE:*:LEGAL\", action=2 (READ)</li></ul>",
        "operationId": "retrieveLocalizedPolicyVersions",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "policyVersionId",
            "in": "path",
            "description": "Policy Version Id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RetrieveLocalizedPolicyVersionResponse"
              }
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "Localized Policy Versions"
        ],
        "summary": "Create a Localized Version from Country-Specific Policy",
        "description": "Create a version of a particular country-specific policy.<br>Other detail info: <ul><li><i>Required permission</i>: resource=\"ADMIN:NAMESPACE:*:LEGAL\", action=1 (CREATE)</li></ul>",
        "operationId": "createLocalizedPolicyVersion",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "policyVersionId",
            "in": "path",
            "description": "Policy Version Id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CreateLocalizedPolicyVersionRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CreateLocalizedPolicyVersionResponse"
            }
          },
          "400": {
            "description": "<table><tr><td>NumericErrorCode</td><td>ErrorCode</td></tr><tr><td>40033</td><td>errors.net.accelbyte.platform.legal.invalid_policy_version</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "409": {
            "description": "<table><tr><td>NumericErrorCode</td><td>ErrorCode</td></tr><tr><td>40044</td><td>errors.net.accelbyte.platform.legal.localized_policy_version_already_exist</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ]
      }
    },
    "/admin/localized-policy-versions/{localizedPolicyVersionId}/default": {
      "patch": {
        "tags": [
          "Localized Policy Versions"
        ],
        "summary": "Set Default Localized Policy",
        "description": "Update a localized version policy to be the default.<br>Other detail info: <ul><li><i>Required permission</i>: resource=\"ADMIN:NAMESPACE:*:LEGAL\", action=4 (UPDATE)</li></ul>",
        "operationId": "setDefaultPolicy",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "localizedPolicyVersionId",
            "in": "path",
            "description": "Localized Policy Version Id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "authorization": []
          }
        ]
      }
    },
    "/admin/localized-policy-versions/{localizedPolicyVersionId}/attachments": {
      "post": {
        "tags": [
          "Localized Policy Versions"
        ],
        "summary": "Request Presigned URL for Upload Document",
        "description": "Request presigned URL for  upload attachment for a particular localized version of base policy.<br>Other detail info: <ul><li><i>Required permission</i>: resource=\"ADMIN:NAMESPACE:*:LEGAL\", action=1 (CREATE)</li></ul>",
        "operationId": "requestPresignedURL",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "localizedPolicyVersionId",
            "in": "path",
            "description": "Localized Policy Version Id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UploadPolicyVersionAttachmentRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UploadLocalizedPolicyVersionAttachmentResponse"
            }
          },
          "400": {
            "description": "<table><tr><td>NumericErrorCode</td><td>ErrorCode</td></tr><tr><td>40034</td><td>errors.net.accelbyte.platform.legal.invalid_file_type</td></tr><tr><td>40037</td><td>errors.net.accelbyte.platform.legal.invalid_localized_policy_version</td></tr><tr><td>40042</td><td>errors.net.accelbyte.platform.legal.policy_version_freezed</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ]
      }
    },
    "/admin/policies/{policyId}": {
      "patch": {
        "tags": [
          "Policies"
        ],
        "summary": "Update Country-Specific Policy",
        "description": "Update country-specific policy.<br>Other detail info: <ul><li><i>Required permission</i>: resource=\"ADMIN:NAMESPACE:*:LEGAL\", action=4 (UPDATE)</li></ul>",
        "operationId": "updatePolicy",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "policyId",
            "in": "path",
            "description": "Policy Id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UpdatePolicyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "authorization": []
          }
        ]
      }
    },
    "/admin/policies/{policyId}/default": {
      "patch": {
        "tags": [
          "Policies"
        ],
        "summary": "Set Default Policy",
        "description": "Update a policy to be the default.<br>Other detail info: <ul><li><i>Required permission</i>: resource=\"ADMIN:NAMESPACE:*:LEGAL\", action=4 (UPDATE)</li></ul>",
        "operationId": "setDefaultPolicy_1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "policyId",
            "in": "path",
            "description": "Policy Id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "authorization": []
          }
        ]
      }
    },
    "/admin/policies/countries/{countryCode}": {
      "get": {
        "tags": [
          "Policies"
        ],
        "summary": "Retrieve Policies by Country",
        "description": "Retrieve all active policies based on a country.<br>Other detail info: <ul><li><i>Required permission</i>: resource=\"ADMIN:NAMESPACE:*:LEGAL\", action=2 (READ)</li></ul>",
        "operationId": "retrievePolicies",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "countryCode",
            "in": "path",
            "description": "Country Code",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RetrievePolicyResponse"
              }
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ]
      }
    },
    "/admin/policies/versions/{policyVersionId}/latest": {
      "patch": {
        "tags": [
          "Policy Versions"
        ],
        "summary": "Manually Publish a Version from Country-Specific Policy",
        "description": "Manually publish a version of a particular country-specific policy.<br>Other detail info: <ul><li><i>Required permission</i>: resource=\"ADMIN:NAMESPACE:*:LEGAL\", action=4 (UPDATE)</li></ul>",
        "operationId": "publishPolicyVersion",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "policyVersionId",
            "in": "path",
            "description": "Policy Version Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "shouldNotify",
            "in": "query",
            "description": "Should Notify",
            "required": false,
            "type": "boolean",
            "default": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "<table><tr><td>NumericErrorCode</td><td>ErrorCode</td></tr><tr><td>40033</td><td>errors.net.accelbyte.platform.legal.invalid_policy_version</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ]
      }
    },
    "/admin/policies/versions/{policyVersionId}": {
      "patch": {
        "tags": [
          "Policy Versions"
        ],
        "summary": "Update a Version of Policy",
        "description": "Update a particular policy version.<br>Other detail info: <ul><li><i>Required permission</i>: resource=\"ADMIN:NAMESPACE:*:LEGAL\", action=4 (UPDATE)</li></ul>",
        "operationId": "updatePolicyVersion",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "policyVersionId",
            "in": "path",
            "description": "Policy Version Id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UpdatePolicyVersionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UpdatePolicyVersionResponse"
            }
          },
          "400": {
            "description": "<table><tr><td>NumericErrorCode</td><td>ErrorCode</td></tr><tr><td>40035</td><td>errors.net.accelbyte.platform.legal.invalid_policy_version</td></tr><tr><td>40042</td><td>errors.net.accelbyte.platform.legal.policy_version_freezed</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ]
      }
    },
    "/admin/policies/{policyId}/versions": {
      "get": {
        "tags": [
          "Policy Versions"
        ],
        "summary": "Retrieve a Version from Country-Specific Policy",
        "description": "Retrieve a version of a particular country specific policy. If version is not provided, the Legal Service will assume caller requesting all versions from country-specific policy.<br>Other detail info: <ul><li><i>Required permission</i>: resource=\"ADMIN:NAMESPACE:*:LEGAL\", action=2 (READ)</li></ul>",
        "operationId": "retrieveSinglePolicyVersion",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "policyId",
            "in": "path",
            "description": "Policy Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "versionId",
            "in": "query",
            "description": "Version Id",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RetrievePolicyVersionResponse"
              }
            }
          },
          "404": {
            "description": "<table><tr><td>NumericErrorCode</td><td>ErrorCode</td></tr><tr><td>40035</td><td>errors.net.accelbyte.platform.legal.policy_version_not_found</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "Policy Versions"
        ],
        "summary": "Create a Version from Country-Specific Policy",
        "description": "Create a version of a particular country-specific policy.<br>Other detail info: <ul><li><i>Required permission</i>: resource=\"ADMIN:NAMESPACE:*:LEGAL\", action=1 (CREATE)</li></ul>",
        "operationId": "createPolicyVersion",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "policyId",
            "in": "path",
            "description": "Policy Id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CreatePolicyVersionRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CreatePolicyVersionResponse"
            }
          },
          "400": {
            "description": "<table><tr><td>NumericErrorCode</td><td>ErrorCode</td></tr><tr><td>40033</td><td>errors.net.accelbyte.platform.legal.invalid_policy</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ]
      }
    },
    "/admin/userInfo": {
      "get": {
        "tags": [
          "UserInfo"
        ],
        "summary": "Get user info cache status",
        "description": "Get user info cache last updated time per namespace.<br>The query parameter namespaces can be a list of namespace separated by comma.<br>If query parameter namespaces is empty, user info cache status for all available namespaces will be returned. <br>Other detail info: <ul><li><i>Required permission</i>: resource=\"ADMIN:NAMESPACE:*:LEGAL\", action=2 (READ)</li></ul>",
        "operationId": "getUserInfoStatus",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "namespaces",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RetrieveUserInfoCacheStatusResponse"
              }
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ]
      },
      "put": {
        "tags": [
          "UserInfo"
        ],
        "summary": "Sync user info with iam service ",
        "description": "<b>Important: GOING TO DEPRECATE</b><br/><br/>Sync user info cache in agreement service with iam service.<br>Other detail info: <ul><li><i>Required permission</i>: resource=\"ADMIN:NAMESPACE:*:LEGAL\", action=4 (UPDATE)</li></ul>",
        "operationId": "syncUserInfo",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "namespace",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "UserInfo"
        ],
        "summary": "Invalidate user info cache",
        "description": "<b>Important: GOING TO DEPRECATE</b><br/><br/>Invalidate user info cache in agreement service.<br>Other detail info: <ul><li><i>Required permission</i>: resource=\"ADMIN:NAMESPACE:*:LEGAL\", action=8 (DELETE)</li></ul>",
        "operationId": "invalidateUserInfoCache",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "namespace",
            "in": "query",
            "description": "If null or empty, will invalidate all namespaces",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "authorization": []
          }
        ]
      }
    },
    "/public/agreements/policies": {
      "get": {
        "tags": [
          "Agreement"
        ],
        "summary": "Retrieve the accepted Legal Agreements",
        "description": "Retrieve accepted Legal Agreements.<br>Other detail info: <ul><li><i>Required permission</i>: login user</li></ul>",
        "operationId": "retrieveAgreementsPublic",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RetrieveAcceptedAgreementResponse"
              }
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "Agreement"
        ],
        "summary": "Bulk Accept Policy Versions",
        "description": "Accepts many legal policy versions all at once. Supply with localized version policy id to accept an agreement.<br>Other detail info: <ul><li><i>Required permission</i>: login user</li></ul>",
        "operationId": "bulkAcceptVersionedPolicy",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AcceptAgreementRequest"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AcceptAgreementResponse"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ]
      }
    },
    "/public/agreements/policies/namespaces/{namespace}/countries/{countryCode}/clients/{clientId}/users/{userId}": {
      "post": {
        "tags": [
          "Agreement"
        ],
        "summary": "Bulk Accept Policy Versions (Indirect)",
        "description": "<b>IMPORTANT: GOING TO DEPRECATE</b><br/><br/>Accepts many legal policy versions all at once. Supply with localized version policy id, version policy id, policy id, userId, namespace, country code and client id to accept an agreement. This endpoint used by APIGateway during new user registration.<br>Other detail info: <ul><li><i>Required permission</i>: resource=\"NAMESPACE:{namespace}:LEGAL\", action=1 (CREATE)</li></ul>",
        "operationId": "indirectBulkAcceptVersionedPolicyV2",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "description": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "name": "countryCode",
            "in": "path",
            "description": "Country Code",
            "required": true,
            "type": "string"
          },
          {
            "name": "clientId",
            "in": "path",
            "description": "Client ID",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AcceptAgreementRequest"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AcceptAgreementResponse"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ]
      }
    },
    "/public/agreements/localized-policy-versions/preferences": {
      "patch": {
        "tags": [
          "Agreement"
        ],
        "summary": "Accept/Revoke Marketing Preference Consent",
        "description": "Change marketing preference consent.<br>Other detail info: <ul><li><i>Required permission</i>: login user</li></ul>",
        "operationId": "changePreferenceConsent",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AcceptAgreementRequest"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>40017</td><td>Policy with id : [{policyId}] is not marketing preference</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ]
      }
    },
    "/public/agreements/localized-policy-versions/{localizedPolicyVersionId}": {
      "post": {
        "tags": [
          "Agreement"
        ],
        "summary": "Accept a Policy Version",
        "description": "Accepts a legal policy version. Supply with localized version policy id to accept an agreement.<br>Other detail info: <ul><li><i>Required permission</i>: login user</li></ul>",
        "operationId": "acceptVersionedPolicy",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "localizedPolicyVersionId",
            "in": "path",
            "description": "Localized Policy Version Id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "authorization": []
          }
        ]
      }
    },
    "/public/agreements/policies/users/{userId}": {
      "post": {
        "tags": [
          "Agreement"
        ],
        "summary": "Bulk Accept Policy Versions (Indirect)",
        "description": "Accepts many legal policy versions all at once. Supply with localized version policy id and userId to accept an agreement. This endpoint used by Authentication Service during new user registration.<br><br/>Available Extra Information to return: <br/><ul><li><b>userIds</b> : List of userId mapping (<b>IMPORTANT: GOING TO DEPRECATE</b>)</li></ul>Other detail info: <ul><li><i>Required permission</i>: login user</li></ul>",
        "operationId": "indirectBulkAcceptVersionedPolicy",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User Id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AcceptAgreementRequest"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AcceptAgreementResponse"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ]
      }
    },
    "/public/eligibilities/namespaces/{namespace}/countries/{countryCode}/clients/{clientId}/users/{userId}": {
      "get": {
        "tags": [
          "Eligibilities"
        ],
        "summary": "Check User Legal Eligibility",
        "description": "Retrieve the active policies and its conformance status by user. This endpoint used by Authentication Service during user login.<br>This process supports cross-namespace checking, that means if the active policy already accepted by the same user in other namespace, then it will be considered as eligible.<br/><br/>Other detail info: <ul><li><i>Required permission</i>: login user</li></ul>",
        "operationId": "retrieveEligibilitiesPublicIndirect",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "description": "Namespace",
            "required": true,
            "type": "string"
          },
          {
            "name": "countryCode",
            "in": "path",
            "description": "Country Code",
            "required": true,
            "type": "string"
          },
          {
            "name": "clientId",
            "in": "path",
            "description": "Client Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "User Id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RetrieveUserEligibilitiesIndirectResponse"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ]
      }
    },
    "/public/eligibilities/namespaces/{namespace}": {
      "get": {
        "tags": [
          "Eligibilities"
        ],
        "summary": "Check User Legal Eligibility",
        "description": "Retrieve the active policies and its conformance status by user.<br>This process supports cross-namespace checking, that means if the active policy already accepted by the same user in other namespace, then it will be considered as eligible.<br/><br/>Other detail info: <ul><li><i>Required permission</i>: login user</li></ul>",
        "operationId": "retrieveEligibilitiesPublic",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "description": "Namespace",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RetrieveUserEligibilitiesResponse"
              }
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ]
      }
    },
    "/public/localized-policy-versions/{localizedPolicyVersionId}": {
      "get": {
        "tags": [
          "Localized Policy Versions"
        ],
        "summary": "Retrieve a Localized Version",
        "description": "Retrieve specific localized policy version including the policy version and base policy version where the localized policy version located.<br>Other detail info: <ul></ul>",
        "operationId": "retrieveSingleLocalizedPolicyVersion_1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "localizedPolicyVersionId",
            "in": "path",
            "description": "Localized Policy Version Id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RetrieveLocalizedPolicyVersionPublicResponse"
            }
          },
          "404": {
            "description": "<table><tr><td>NumericErrorCode</td><td>ErrorCode</td></tr><tr><td>40038</td><td>errors.net.accelbyte.platform.legal.localized_policy_version_not_found</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        }
      }
    },
    "/public/policies/namespaces/{namespace}/countries/{countryCode}": {
      "get": {
        "tags": [
          "Policies"
        ],
        "summary": "Retrieve Latest Policies by Namespace and Country",
        "description": "Retrieve all active latest policies based on a namespace and country.<br>Other detail info: <ul><li><i>Leave the policyType empty if you want to be responded with all policy type</i></li><li><i>Fill the tags if you want to filter the responded policy by tags</i></li><li><i>Fill the defaultOnEmpty with true if you want to be responded with default country-specific policy if your requested country is not exist</i></li><li><i>Fill the alwaysIncludeDefault with true if you want to be responded with always include default policy. If there are duplicate policies (default policies and country specific policies with same base policy) it'll include policy with same country code, for example:<ul><li>Document 1 (default): Region US (default), UA</li><li>Document 2 (default): Region US (default)</li><li>Document 3 (default): Region US (default)</li><li>User: Region UA</li><li>Query: alwaysIncludeDefault: true</li><li>Response: Document 1 (UA), Document 2 (US), Document 3 (US)</li></ul>",
        "operationId": "retrieveLatestPoliciesByNamespaceAndCountryPublic",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "description": "Namespace",
            "required": true,
            "type": "string"
          },
          {
            "name": "countryCode",
            "in": "path",
            "description": "Country Code",
            "required": true,
            "type": "string"
          },
          {
            "name": "policyType",
            "in": "query",
            "description": "Policy Type",
            "required": false,
            "type": "string",
            "enum": [
              "LEGAL_DOCUMENT_TYPE",
              "MARKETING_PREFERENCE_TYPE"
            ]
          },
          {
            "name": "tags",
            "in": "query",
            "description": "tags, separate multiple value by commas parameter",
            "required": false,
            "type": "string"
          },
          {
            "name": "defaultOnEmpty",
            "in": "query",
            "description": "Default On Empty",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "alwaysIncludeDefault",
            "in": "query",
            "description": "Always include default",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RetrievePolicyPublicResponse"
              }
            }
          }
        }
      }
    },
    "/public/policies/namespaces/{namespace}": {
      "get": {
        "tags": [
          "Policies"
        ],
        "summary": "Retrieve Latest Policies by Namespace and Country",
        "description": "Retrieve all active latest policies based on a namespace and country. The country will be read from user token.<br>Other detail info: <ul><li><i>Leave the policyType empty if you want to be responded with all policy type</i></li><li><i>Fill the tags if you want to filter the responded policy by tags</i></li><li><i>Fill the defaultOnEmpty with true if you want to be responded with default country-specific policy if your requested country is not exist</i></li><li><i>Fill the alwaysIncludeDefault with true if you want to be responded with always include default policy. If there are duplicate policies (default policies and country specific policies with same base policy) it'll include policy with same country code, for example:<ul><li>Document 1 (default): Region US (default), UA</li><li>Document 2 (default): Region US (default)</li><li>Document 3 (default): Region US (default)</li><li>User: Region UA</li><li>Query: alwaysIncludeDefault: true</li><li>Response: Document 1 (UA), Document 2 (US), Document 3 (US)</li></ul></i></li><li><i>Required permission: login user </i></li></ul>",
        "operationId": "retrieveLatestPoliciesPublic",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "description": "Namespace",
            "required": true,
            "type": "string"
          },
          {
            "name": "policyType",
            "in": "query",
            "description": "Policy Type",
            "required": false,
            "type": "string",
            "enum": [
              "LEGAL_DOCUMENT_TYPE",
              "MARKETING_PREFERENCE_TYPE"
            ]
          },
          {
            "name": "tags",
            "in": "query",
            "description": "tags, separate multiple value by commas parameter",
            "required": false,
            "type": "string"
          },
          {
            "name": "defaultOnEmpty",
            "in": "query",
            "description": "Default On Empty",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "alwaysIncludeDefault",
            "in": "query",
            "description": "Always include default",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RetrievePolicyPublicResponse"
              }
            }
          },
          "404": {
            "description": "<table><tr><td>NumericErrorCode</td><td>ErrorCode</td></tr><tr><td>40040</td><td>errors.net.accelbyte.platform.legal.user_has_no_country</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ]
      }
    },
    "/public/policies/countries/{countryCode}": {
      "get": {
        "tags": [
          "Policies"
        ],
        "summary": "Retrieve Latest Policies by Country",
        "description": "Retrieve all active latest policies based on a country.<br>Other detail info: <ul><li><i>Leave the policyType empty if you want to be responded with all policy type</i></li><li><i>Fill the tags if you want to filter the responded policy by tags</i></li><li><i>Fill the defaultOnEmpty with true if you want to be responded with default country-specific policy if your requested country is not exist</i></li></ul>",
        "operationId": "retrieveLatestPolicies",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "countryCode",
            "in": "path",
            "description": "Country Code",
            "required": true,
            "type": "string"
          },
          {
            "name": "policyType",
            "in": "query",
            "description": "Policy Type",
            "required": false,
            "type": "string",
            "enum": [
              "LEGAL_DOCUMENT_TYPE",
              "MARKETING_PREFERENCE_TYPE"
            ]
          },
          {
            "name": "tags",
            "in": "query",
            "description": "tags, separate multiple value by commas parameter",
            "required": false,
            "type": "string"
          },
          {
            "name": "defaultOnEmpty",
            "in": "query",
            "description": "Default On Empty",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RetrievePolicyPublicResponse"
              }
            }
          }
        }
      }
    },
    "/public/policies": {
      "get": {
        "tags": [
          "Policy Versions"
        ],
        "summary": "Bulk Retrieve Version of Base Policy",
        "description": "[TODO] Retrieve one or more legal policies with its versions.<br>If the basePolicyId not supplied, then retrieve only all latest policies version with localeId matched.<br>Other detail info: <ul><li><i>Required permission</i>: resource=\"ADMIN:NAMESPACE:*:LEGAL\", action=2 (READ)</li></ul>",
        "operationId": "retrievePolicyVersions",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "namespace",
            "in": "query",
            "description": "Namespace",
            "required": false,
            "type": "string"
          },
          {
            "name": "basePolicyId",
            "in": "query",
            "description": "BasePolicy Id",
            "required": false,
            "type": "string"
          },
          {
            "name": "localeId",
            "in": "query",
            "description": "Locale Id",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RetrievePolicyVersionResponse"
              }
            }
          },
          "404": {
            "description": "<table><tr><td>NumericErrorCode</td><td>ErrorCode</td></tr><tr><td>2920</td><td>errors.net.accelbyte.platform.legal.policy_not_found</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ]
      }
    },
    "/public/readiness": {
      "get": {
        "tags": [
          "Utility"
        ],
        "summary": "Check Legal Data Readiness",
        "description": "Readiness status defined as at least one legal basePolicy is present and having active basePolicy.<br>Other detail info: <ul><li><i>Required permission</i>: resource=\"NAMESPACE:{namespace}:LEGAL\", action=2 (READ)</li></ul>",
        "operationId": "checkReadiness",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/LegalReadinessStatusResponse"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ]
      }
    }
  },
  "securityDefinitions": {
    "authorization": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "definitions": {
    "ErrorEntity": {
      "type": "object",
      "required": [
        "errorCode",
        "errorMessage"
      ],
      "properties": {
        "errorCode": {
          "type": "integer",
          "format": "int32",
          "description": "numeric error code"
        },
        "errorMessage": {
          "type": "string",
          "description": "error message"
        },
        "messageVariables": {
          "type": "object",
          "description": "message variables",
          "additionalProperties": {
            "type": "string"
          }
        },
        "devStackTrace": {
          "type": "string",
          "description": "internal server error stack trace in configured environment"
        }
      }
    },
    "LocalizedPolicyVersionObject": {
      "type": "object",
      "required": [
        "id",
        "isDefaultSelection",
        "localeCode"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "localeCode": {
          "type": "string"
        },
        "contentType": {
          "type": "string"
        },
        "attachmentLocation": {
          "type": "string"
        },
        "attachmentChecksum": {
          "type": "string"
        },
        "attachmentVersionIdentifier": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "publishedDate": {
          "type": "string",
          "format": "date-time"
        },
        "isDefaultSelection": {
          "type": "boolean"
        }
      }
    },
    "RetrieveAcceptedAgreementResponse": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "userId": {
          "type": "string"
        },
        "policyId": {
          "type": "string"
        },
        "policyType": {
          "type": "string"
        },
        "policyName": {
          "type": "string"
        },
        "displayVersion": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "localizedPolicyVersion": {
          "$ref": "#/definitions/LocalizedPolicyVersionObject"
        },
        "signingDate": {
          "type": "string",
          "format": "date-time"
        },
        "isAccepted": {
          "type": "boolean"
        }
      }
    },
    "PagedRetrieveUserAcceptedAgreementResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RetrieveUserAcceptedAgreementResponse"
          }
        },
        "paging": {
          "$ref": "#/definitions/Paging"
        }
      }
    },
    "Paging": {
      "type": "object",
      "properties": {
        "previous": {
          "type": "string"
        },
        "next": {
          "type": "string"
        }
      }
    },
    "RetrieveUserAcceptedAgreementResponse": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "userId": {
          "type": "string"
        },
        "publisherUserId": {
          "type": "string"
        },
        "policyName": {
          "type": "string"
        },
        "policyType": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "localizedPolicyVersion": {
          "$ref": "#/definitions/LocalizedPolicyVersionObject"
        },
        "signingDate": {
          "type": "string",
          "format": "date-time"
        },
        "username": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "isAccepted": {
          "type": "boolean"
        }
      }
    },
    "PolicyObject": {
      "type": "object",
      "required": [
        "countryCode",
        "id",
        "isDefaultOpted",
        "isDefaultSelection",
        "isMandatory",
        "policyName",
        "shouldNotifyOnUpdate"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "readableId": {
          "type": "string"
        },
        "policyName": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "countryGroupCode": {
          "type": "string"
        },
        "shouldNotifyOnUpdate": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "isMandatory": {
          "type": "boolean"
        },
        "isDefaultOpted": {
          "type": "boolean"
        },
        "isDefaultSelection": {
          "type": "boolean"
        }
      }
    },
    "RetrieveBasePolicyResponse": {
      "type": "object",
      "required": [
        "basePolicyName",
        "id",
        "namespace"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "namespace": {
          "type": "string"
        },
        "policies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyObject"
          }
        },
        "basePolicyName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "affectedClientIds": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "tags": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "policyTypeName": {
          "type": "string",
          "readOnly": true
        },
        "policyTypeId": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "UpdateBasePolicyResponse": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "namespace": {
          "type": "string"
        },
        "policyId": {
          "type": "string"
        },
        "typeId": {
          "type": "string"
        },
        "globalPolicyName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "affectedCountries": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "affectedClientIds": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "tags": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        }
      }
    },
    "UpdateBasePolicyRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "basePolicyName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "affectedCountries": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "affectedClientIds": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "tags": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CreateBasePolicyResponse": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "namespace": {
          "type": "string"
        },
        "policyId": {
          "type": "string"
        },
        "typeId": {
          "type": "string"
        },
        "globalPolicyName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "affectedCountries": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "affectedClientIds": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "tags": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        }
      }
    },
    "FieldValidationError": {
      "type": "object",
      "properties": {
        "errorCode": {
          "type": "string"
        },
        "errorField": {
          "type": "string"
        },
        "errorValue": {
          "type": "string"
        },
        "errorMessage": {
          "type": "string"
        },
        "messageVariables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ValidationErrorEntity": {
      "type": "object",
      "required": [
        "errorCode",
        "errorMessage"
      ],
      "properties": {
        "errorCode": {
          "type": "integer",
          "format": "int32",
          "description": "numeric error code"
        },
        "errorMessage": {
          "type": "string",
          "description": "error message"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldValidationError"
          }
        }
      }
    },
    "CreateBasePolicyRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "typeId": {
          "type": "string"
        },
        "basePolicyName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "affectedCountries": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "affectedClientIds": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "tags": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PolicyVersionObject": {
      "type": "object",
      "required": [
        "displayVersion",
        "id",
        "isCommitted",
        "isInEffect"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "displayVersion": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "publishedDate": {
          "type": "string",
          "format": "date-time"
        },
        "isCommitted": {
          "type": "boolean"
        },
        "isInEffect": {
          "type": "boolean"
        }
      }
    },
    "RetrievePolicyResponse": {
      "type": "object",
      "required": [
        "countryCode",
        "id",
        "isDefaultOpted",
        "isDefaultSelection",
        "isMandatory",
        "policyName",
        "shouldNotifyOnUpdate"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "readableId": {
          "type": "string"
        },
        "policyName": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "countryGroupCode": {
          "type": "string"
        },
        "shouldNotifyOnUpdate": {
          "type": "boolean"
        },
        "policyVersions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyVersionObject"
          }
        },
        "description": {
          "type": "string"
        },
        "isMandatory": {
          "type": "boolean"
        },
        "isDefaultOpted": {
          "type": "boolean"
        },
        "isDefaultSelection": {
          "type": "boolean"
        }
      }
    },
    "RetrievePolicyTypeResponse": {
      "type": "object",
      "required": [
        "id",
        "isNeedDocument",
        "policyTypeName"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "policyTypeName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "isNeedDocument": {
          "type": "boolean"
        }
      }
    },
    "UpdateLocalizedPolicyVersionResponse": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "localeCode": {
          "type": "string"
        },
        "contentType": {
          "type": "string"
        },
        "attachmentLocation": {
          "type": "string"
        },
        "attachmentChecksum": {
          "type": "string"
        },
        "attachmentVersionIdentifier": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "UpdateLocalizedPolicyVersionRequest": {
      "type": "object",
      "properties": {
        "contentType": {
          "type": "string"
        },
        "attachmentLocation": {
          "type": "string"
        },
        "attachmentChecksum": {
          "type": "string"
        },
        "attachmentVersionIdentifier": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "CreateLocalizedPolicyVersionResponse": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "localeCode": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "CreateLocalizedPolicyVersionRequest": {
      "type": "object",
      "properties": {
        "localeCode": {
          "type": "string"
        },
        "contentType": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "UploadLocalizedPolicyVersionAttachmentResponse": {
      "type": "object",
      "properties": {
        "attachmentLocation": {
          "type": "string"
        },
        "attachmentChecksum": {
          "type": "string"
        },
        "attachmentUploadUrl": {
          "type": "string"
        }
      }
    },
    "UploadPolicyVersionAttachmentRequest": {
      "type": "object",
      "properties": {
        "contentType": {
          "type": "string"
        },
        "contentMD5": {
          "type": "string"
        }
      }
    },
    "RetrieveLocalizedPolicyVersionResponse": {
      "type": "object",
      "required": [
        "id",
        "localeCode",
        "policy",
        "policyVersion"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "localeCode": {
          "type": "string"
        },
        "contentType": {
          "type": "string"
        },
        "baseUrls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "attachmentLocation": {
          "type": "string"
        },
        "attachmentChecksum": {
          "type": "string"
        },
        "attachmentVersionIdentifier": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "policyVersion": {
          "$ref": "#/definitions/PolicyVersionObject"
        },
        "policy": {
          "$ref": "#/definitions/PolicyObject"
        }
      }
    },
    "UpdatePolicyRequest": {
      "type": "object",
      "required": [
        "isDefaultOpted",
        "isMandatory",
        "policyName",
        "shouldNotifyOnUpdate"
      ],
      "properties": {
        "readableId": {
          "type": "string"
        },
        "policyName": {
          "type": "string"
        },
        "shouldNotifyOnUpdate": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "isMandatory": {
          "type": "boolean"
        },
        "isDefaultOpted": {
          "type": "boolean"
        }
      }
    },
    "UpdatePolicyVersionResponse": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "displayVersion": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "publishedDate": {
          "type": "string",
          "format": "date-time"
        },
        "isCommitted": {
          "type": "boolean"
        },
        "basePolicyId": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "UpdatePolicyVersionRequest": {
      "type": "object",
      "required": [
        "description",
        "displayVersion",
        "isCommitted"
      ],
      "properties": {
        "displayVersion": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "isCommitted": {
          "type": "boolean"
        }
      }
    },
    "RetrievePolicyVersionResponse": {
      "type": "object",
      "required": [
        "displayVersion",
        "id",
        "isCommitted",
        "isInEffect",
        "policyId"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "displayVersion": {
          "type": "string"
        },
        "policyId": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "publishedDate": {
          "type": "string",
          "format": "date-time"
        },
        "localizedPolicyVersions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LocalizedPolicyVersionObject"
          }
        },
        "isCommitted": {
          "type": "boolean"
        },
        "isInEffect": {
          "type": "boolean"
        },
        "basePolicyId": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "CreatePolicyVersionResponse": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "displayVersion": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "isCommitted": {
          "type": "boolean"
        },
        "basePolicyId": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "CreatePolicyVersionRequest": {
      "type": "object",
      "properties": {
        "displayVersion": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "isCommitted": {
          "type": "boolean"
        }
      }
    },
    "RetrieveUserInfoCacheStatusResponse": {
      "type": "object",
      "required": [
        "lastUpdatedAt",
        "namespace"
      ],
      "properties": {
        "namespace": {
          "type": "string"
        },
        "lastUpdatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "AcceptAgreementResponse": {
      "type": "object",
      "required": [
        "comply",
        "proceed"
      ],
      "properties": {
        "proceed": {
          "type": "boolean",
          "description": "DEPRECATED the name is not clear, changed with comply"
        },
        "ext": {
          "type": "object",
          "description": "extra information",
          "additionalProperties": {
            "type": "object"
          }
        },
        "comply": {
          "type": "boolean",
          "description": "Eligibility Status after Accept Agreement"
        }
      }
    },
    "AcceptAgreementRequest": {
      "type": "object",
      "required": [
        "isAccepted",
        "localizedPolicyVersionId",
        "policyId",
        "policyVersionId"
      ],
      "properties": {
        "localizedPolicyVersionId": {
          "type": "string"
        },
        "policyVersionId": {
          "type": "string"
        },
        "policyId": {
          "type": "string"
        },
        "isAccepted": {
          "type": "boolean"
        }
      }
    },
    "RetrieveUserEligibilitiesIndirectResponse": {
      "type": "object",
      "required": [
        "isComply"
      ],
      "properties": {
        "isComply": {
          "type": "boolean"
        }
      }
    },
    "PolicyVersionWithLocalizedVersionObject": {
      "type": "object",
      "required": [
        "displayVersion",
        "id",
        "isCommitted",
        "isInEffect"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "displayVersion": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "publishedDate": {
          "type": "string",
          "format": "date-time"
        },
        "localizedPolicyVersions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LocalizedPolicyVersionObject"
          }
        },
        "isCommitted": {
          "type": "boolean"
        },
        "isInEffect": {
          "type": "boolean"
        }
      }
    },
    "RetrieveUserEligibilitiesResponse": {
      "type": "object",
      "required": [
        "countryCode",
        "isAccepted",
        "isMandatory",
        "namespace",
        "policyId",
        "policyName",
        "policyType"
      ],
      "properties": {
        "readableId": {
          "type": "string"
        },
        "policyName": {
          "type": "string"
        },
        "policyType": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "countryGroupCode": {
          "type": "string"
        },
        "baseUrls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "policyVersions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyVersionWithLocalizedVersionObject"
          }
        },
        "description": {
          "type": "string"
        },
        "policyId": {
          "type": "string"
        },
        "isMandatory": {
          "type": "boolean"
        },
        "isAccepted": {
          "type": "boolean"
        }
      }
    },
    "RetrieveLocalizedPolicyVersionPublicResponse": {
      "type": "object",
      "required": [
        "id",
        "localeCode",
        "namespace",
        "policy",
        "policyVersion"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "localeCode": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "contentType": {
          "type": "string"
        },
        "baseUrls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "basePolicyId": {
          "type": "string"
        },
        "attachmentLocation": {
          "type": "string"
        },
        "attachmentChecksum": {
          "type": "string"
        },
        "attachmentVersionIdentifier": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "policyVersion": {
          "$ref": "#/definitions/PolicyVersionObject"
        },
        "policy": {
          "$ref": "#/definitions/PolicyObject"
        }
      }
    },
    "RetrievePolicyPublicResponse": {
      "type": "object",
      "required": [
        "basePolicyId",
        "countryCode",
        "id",
        "isDefaultOpted",
        "isDefaultSelection",
        "isMandatory",
        "namespace",
        "policyName",
        "policyType",
        "shouldNotifyOnUpdate"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "readableId": {
          "type": "string"
        },
        "basePolicyId": {
          "type": "string"
        },
        "policyName": {
          "type": "string"
        },
        "policyType": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "countryGroupCode": {
          "type": "string"
        },
        "baseUrls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "shouldNotifyOnUpdate": {
          "type": "boolean"
        },
        "policyVersions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyVersionWithLocalizedVersionObject"
          }
        },
        "description": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "isMandatory": {
          "type": "boolean"
        },
        "isDefaultOpted": {
          "type": "boolean"
        },
        "isDefaultSelection": {
          "type": "boolean"
        }
      }
    },
    "LegalReadinessStatusResponse": {
      "type": "object",
      "properties": {
        "isReady": {
          "type": "boolean"
        }
      }
    }
  }
}

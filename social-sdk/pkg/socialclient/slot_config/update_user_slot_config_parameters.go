// Code generated by go-swagger; DO NOT EDIT.

package slot_config

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/AccelByte/accelbyte-go-sdk/social-sdk/pkg/socialclientmodels"
)

// NewUpdateUserSlotConfigParams creates a new UpdateUserSlotConfigParams object
// with the default values initialized.
func NewUpdateUserSlotConfigParams() *UpdateUserSlotConfigParams {
	var ()
	return &UpdateUserSlotConfigParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateUserSlotConfigParamsWithTimeout creates a new UpdateUserSlotConfigParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewUpdateUserSlotConfigParamsWithTimeout(timeout time.Duration) *UpdateUserSlotConfigParams {
	var ()
	return &UpdateUserSlotConfigParams{

		timeout: timeout,
	}
}

// NewUpdateUserSlotConfigParamsWithContext creates a new UpdateUserSlotConfigParams object
// with the default values initialized, and the ability to set a context for a request
func NewUpdateUserSlotConfigParamsWithContext(ctx context.Context) *UpdateUserSlotConfigParams {
	var ()
	return &UpdateUserSlotConfigParams{

		Context: ctx,
	}
}

// NewUpdateUserSlotConfigParamsWithHTTPClient creates a new UpdateUserSlotConfigParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewUpdateUserSlotConfigParamsWithHTTPClient(client *http.Client) *UpdateUserSlotConfigParams {
	var ()
	return &UpdateUserSlotConfigParams{
		HTTPClient: client,
	}
}

/*UpdateUserSlotConfigParams contains all the parameters to send to the API endpoint
for the update user slot config operation typically these are written to a http.Request
*/
type UpdateUserSlotConfigParams struct {

	/*Body*/
	Body *socialclientmodels.SlotConfigUpdate
	/*Namespace
	  Namespace ID

	*/
	Namespace string
	/*UserID
	  User ID

	*/
	UserID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the update user slot config params
func (o *UpdateUserSlotConfigParams) WithTimeout(timeout time.Duration) *UpdateUserSlotConfigParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update user slot config params
func (o *UpdateUserSlotConfigParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update user slot config params
func (o *UpdateUserSlotConfigParams) WithContext(ctx context.Context) *UpdateUserSlotConfigParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update user slot config params
func (o *UpdateUserSlotConfigParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update user slot config params
func (o *UpdateUserSlotConfigParams) WithHTTPClient(client *http.Client) *UpdateUserSlotConfigParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update user slot config params
func (o *UpdateUserSlotConfigParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the update user slot config params
func (o *UpdateUserSlotConfigParams) WithBody(body *socialclientmodels.SlotConfigUpdate) *UpdateUserSlotConfigParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the update user slot config params
func (o *UpdateUserSlotConfigParams) SetBody(body *socialclientmodels.SlotConfigUpdate) {
	o.Body = body
}

// WithNamespace adds the namespace to the update user slot config params
func (o *UpdateUserSlotConfigParams) WithNamespace(namespace string) *UpdateUserSlotConfigParams {
	o.SetNamespace(namespace)
	return o
}

// SetNamespace adds the namespace to the update user slot config params
func (o *UpdateUserSlotConfigParams) SetNamespace(namespace string) {
	o.Namespace = namespace
}

// WithUserID adds the userID to the update user slot config params
func (o *UpdateUserSlotConfigParams) WithUserID(userID string) *UpdateUserSlotConfigParams {
	o.SetUserID(userID)
	return o
}

// SetUserID adds the userId to the update user slot config params
func (o *UpdateUserSlotConfigParams) SetUserID(userID string) {
	o.UserID = userID
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateUserSlotConfigParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param namespace
	if err := r.SetPathParam("namespace", o.Namespace); err != nil {
		return err
	}

	// path param userId
	if err := r.SetPathParam("userId", o.UserID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

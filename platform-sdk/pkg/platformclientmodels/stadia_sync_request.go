// Code generated by go-swagger; DO NOT EDIT.

package platformclientmodels

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// StadiaSyncRequest stadia sync request
//
// swagger:model StadiaSyncRequest
type StadiaSyncRequest struct {

	// app id
	// Required: true
	AppID *string `json:"appId"`

	// language value from language tag, allowed format: en, en-US
	Language string `json:"language,omitempty"`

	// country value from ISO countries
	Region string `json:"region,omitempty"`

	// Stadia player id
	// Required: true
	StadiaPlayerID *string `json:"stadiaPlayerId"`
}

// Validate validates this stadia sync request
func (m *StadiaSyncRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAppID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStadiaPlayerID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *StadiaSyncRequest) validateAppID(formats strfmt.Registry) error {

	if err := validate.Required("appId", "body", m.AppID); err != nil {
		return err
	}

	return nil
}

func (m *StadiaSyncRequest) validateStadiaPlayerID(formats strfmt.Registry) error {

	if err := validate.Required("stadiaPlayerId", "body", m.StadiaPlayerID); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *StadiaSyncRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *StadiaSyncRequest) UnmarshalBinary(b []byte) error {
	var res StadiaSyncRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

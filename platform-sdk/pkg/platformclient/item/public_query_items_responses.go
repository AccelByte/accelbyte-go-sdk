// Code generated by go-swagger; DO NOT EDIT.

package item

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"io/ioutil"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/AccelByte/accelbyte-go-sdk/platform-sdk/pkg/platformclientmodels"
)

// PublicQueryItemsReader is a Reader for the PublicQueryItems structure.
type PublicQueryItemsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PublicQueryItemsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPublicQueryItemsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewPublicQueryItemsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 422:
		result := NewPublicQueryItemsUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		data, err := ioutil.ReadAll(response.Body())
		if err != nil {
			return nil, err
		}

		return nil, fmt.Errorf("Requested GET /platform/public/namespaces/{namespace}/items/byCriteria returns an error %d: %s", response.Code(), string(data))
	}
}

// NewPublicQueryItemsOK creates a PublicQueryItemsOK with default headers values
func NewPublicQueryItemsOK() *PublicQueryItemsOK {
	return &PublicQueryItemsOK{}
}

/*PublicQueryItemsOK handles this case with default header values.

  successful operation
*/
type PublicQueryItemsOK struct {
	Payload *platformclientmodels.ItemPagingSlicedResult
}

func (o *PublicQueryItemsOK) Error() string {
	return fmt.Sprintf("[GET /platform/public/namespaces/{namespace}/items/byCriteria][%d] publicQueryItemsOK  %+v", 200, o.Payload)
}

func (o *PublicQueryItemsOK) GetPayload() *platformclientmodels.ItemPagingSlicedResult {
	return o.Payload
}

func (o *PublicQueryItemsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(platformclientmodels.ItemPagingSlicedResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPublicQueryItemsNotFound creates a PublicQueryItemsNotFound with default headers values
func NewPublicQueryItemsNotFound() *PublicQueryItemsNotFound {
	return &PublicQueryItemsNotFound{}
}

/*PublicQueryItemsNotFound handles this case with default header values.

  <table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>30141</td><td>Store [{storeId}] does not exist in namespace [{namespace}]</td></tr><tr><td>30142</td><td>Published store does not exist in namespace [{namespace}]</td></tr></table>
*/
type PublicQueryItemsNotFound struct {
	Payload *platformclientmodels.ErrorEntity
}

func (o *PublicQueryItemsNotFound) Error() string {
	return fmt.Sprintf("[GET /platform/public/namespaces/{namespace}/items/byCriteria][%d] publicQueryItemsNotFound  %+v", 404, o.Payload)
}

func (o *PublicQueryItemsNotFound) GetPayload() *platformclientmodels.ErrorEntity {
	return o.Payload
}

func (o *PublicQueryItemsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(platformclientmodels.ErrorEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPublicQueryItemsUnprocessableEntity creates a PublicQueryItemsUnprocessableEntity with default headers values
func NewPublicQueryItemsUnprocessableEntity() *PublicQueryItemsUnprocessableEntity {
	return &PublicQueryItemsUnprocessableEntity{}
}

/*PublicQueryItemsUnprocessableEntity handles this case with default header values.

  <table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>
*/
type PublicQueryItemsUnprocessableEntity struct {
	Payload *platformclientmodels.ValidationErrorEntity
}

func (o *PublicQueryItemsUnprocessableEntity) Error() string {
	return fmt.Sprintf("[GET /platform/public/namespaces/{namespace}/items/byCriteria][%d] publicQueryItemsUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *PublicQueryItemsUnprocessableEntity) GetPayload() *platformclientmodels.ValidationErrorEntity {
	return o.Payload
}

func (o *PublicQueryItemsUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(platformclientmodels.ValidationErrorEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

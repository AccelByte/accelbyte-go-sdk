// Code generated by go-swagger; DO NOT EDIT.

package iamclient

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"net/http"
	"os"
	"strings"
	"time"

	"github.com/go-openapi/runtime"
	httptransport "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/AccelByte/accelbyte-go-sdk/iam-sdk/pkg/iamclient/bans"
	"github.com/AccelByte/accelbyte-go-sdk/iam-sdk/pkg/iamclient/clients"
	"github.com/AccelByte/accelbyte-go-sdk/iam-sdk/pkg/iamclient/input_validations"
	"github.com/AccelByte/accelbyte-go-sdk/iam-sdk/pkg/iamclient/o_auth"
	"github.com/AccelByte/accelbyte-go-sdk/iam-sdk/pkg/iamclient/o_auth2_0"
	"github.com/AccelByte/accelbyte-go-sdk/iam-sdk/pkg/iamclient/o_auth2_0_extension"
	"github.com/AccelByte/accelbyte-go-sdk/iam-sdk/pkg/iamclient/roles"
	"github.com/AccelByte/accelbyte-go-sdk/iam-sdk/pkg/iamclient/s_s_o"
	"github.com/AccelByte/accelbyte-go-sdk/iam-sdk/pkg/iamclient/s_s_o_credential"
	"github.com/AccelByte/accelbyte-go-sdk/iam-sdk/pkg/iamclient/s_s_o_s_a_m_l_2_0"
	"github.com/AccelByte/accelbyte-go-sdk/iam-sdk/pkg/iamclient/third_party_credential"
	"github.com/AccelByte/accelbyte-go-sdk/iam-sdk/pkg/iamclient/users"
	"github.com/AccelByte/accelbyte-go-sdk/iam-sdk/pkg/iamclient/users_v4"
)

// Default justice iam service HTTP client.
var Default = NewHTTPClient(nil)

const (
	// DefaultHost is the default Host
	// found in Meta (info) section of spec file
	DefaultHost string = "demo.accelbyte.io"
	// DefaultBasePath is the default BasePath
	// found in Meta (info) section of spec file
	DefaultBasePath string = "/"
)

// DefaultSchemes are the default schemes found in Meta (info) section of spec file
var DefaultSchemes = []string{"https"}

// NewHTTPClient creates a new justice iam service HTTP client.
func NewHTTPClient(formats strfmt.Registry) *JusticeIamService {
	return NewHTTPClientWithConfig(formats, nil)
}

func SetUserAgent(inner http.RoundTripper, userAgent string) http.RoundTripper {
	return &customTransport{
		inner: inner,
		Agent: userAgent,
	}
}

type customTransport struct {
	inner http.RoundTripper
	Agent string
}

func (c *customTransport) RoundTrip(r *http.Request) (*http.Response, error) {
	r.Header.Set("User-Agent", c.Agent)
	return c.inner.RoundTrip(r)
}

// NewHTTPClientWithConfig creates a new justice iam service HTTP client,
// using a customizable transport config.
func NewHTTPClientWithConfig(formats strfmt.Registry, cfg *TransportConfig) *JusticeIamService {
	// ensure nullable parameters have default
	if cfg == nil {
		cfg = DefaultTransportConfig()
	}

	// create transport and client
	transport := httptransport.New(cfg.Host, cfg.BasePath, cfg.Schemes)

	// optional custom producers and consumer
	transport.Producers["*/*"] = runtime.JSONProducer()
	transport.Consumers["application/problem+json"] = runtime.JSONConsumer()
	transport.Consumers["application/x-www-form-urlencoded"] = runtime.JSONConsumer()
	transport.Consumers["application/zip"] = runtime.JSONConsumer()
	transport.Consumers["application/pdf"] = runtime.JSONConsumer()
	transport.Consumers["image/png"] = runtime.ByteStreamConsumer()

	// optional custom user-agent for request header
	appName := os.Getenv("APP_CLIENT_NAME")
	userAgent := fmt.Sprintf("AccelByteGoSDK/v0.12.0 (%v)", appName)
	transport.Transport = SetUserAgent(transport.Transport, userAgent)

	return New(transport, formats)
}

// New creates a new justice iam service client
func New(transport runtime.ClientTransport, formats strfmt.Registry) *JusticeIamService {
	// ensure nullable parameters have default
	if formats == nil {
		formats = strfmt.Default
	}

	cli := new(JusticeIamService)
	cli.Transport = transport
	cli.Bans = bans.New(transport, formats)
	cli.Clients = clients.New(transport, formats)
	cli.InputValidations = input_validations.New(transport, formats)
	cli.OAuth = o_auth.New(transport, formats)
	cli.OAuth20 = o_auth2_0.New(transport, formats)
	cli.OAuth20Extension = o_auth2_0_extension.New(transport, formats)
	cli.Roles = roles.New(transport, formats)
	cli.Sso = s_s_o.New(transport, formats)
	cli.SsoCredential = s_s_o_credential.New(transport, formats)
	cli.Ssosaml20 = s_s_o_s_a_m_l_2_0.New(transport, formats)
	cli.ThirdPartyCredential = third_party_credential.New(transport, formats)
	cli.Users = users.New(transport, formats)
	cli.UsersV4 = users_v4.New(transport, formats)
	return cli
}

func NewDateTime(t time.Time) strfmt.DateTime {
	return strfmt.DateTime(t)
}

func NewClientWithBasePath(url string, endpoint string) *JusticeIamService {
	schemes := []string{"http"}
	if strings.HasSuffix(url, ":443") {
		schemes = []string{"https"}
	}

	transport := httptransport.New(url, endpoint, schemes)
	return New(transport, strfmt.Default)
}

// DefaultTransportConfig creates a TransportConfig with the
// default settings taken from the meta section of the spec file.
func DefaultTransportConfig() *TransportConfig {
	return &TransportConfig{
		Host:     DefaultHost,
		BasePath: DefaultBasePath,
		Schemes:  DefaultSchemes,
	}
}

// TransportConfig contains the transport related info,
// found in the meta section of the spec file.
type TransportConfig struct {
	Host     string
	BasePath string
	Schemes  []string
}

// WithHost overrides the default host,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithHost(host string) *TransportConfig {
	cfg.Host = host
	return cfg
}

// WithBasePath overrides the default basePath,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithBasePath(basePath string) *TransportConfig {
	cfg.BasePath = basePath
	return cfg
}

// WithSchemes overrides the default schemes,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithSchemes(schemes []string) *TransportConfig {
	cfg.Schemes = schemes
	return cfg
}

// JusticeIamService is a client for justice iam service
type JusticeIamService struct {
	Bans bans.ClientService

	Clients clients.ClientService

	InputValidations input_validations.ClientService

	OAuth o_auth.ClientService

	OAuth20 o_auth2_0.ClientService

	OAuth20Extension o_auth2_0_extension.ClientService

	Roles roles.ClientService

	Sso s_s_o.ClientService

	SsoCredential s_s_o_credential.ClientService

	Ssosaml20 s_s_o_s_a_m_l_2_0.ClientService

	ThirdPartyCredential third_party_credential.ClientService

	Users users.ClientService

	UsersV4 users_v4.ClientService

	Transport runtime.ClientTransport
}

// SetTransport changes the transport on the client and all its subresources
func (c *JusticeIamService) SetTransport(transport runtime.ClientTransport) {
	c.Transport = transport
	c.Bans.SetTransport(transport)
	c.Clients.SetTransport(transport)
	c.InputValidations.SetTransport(transport)
	c.OAuth.SetTransport(transport)
	c.OAuth20.SetTransport(transport)
	c.OAuth20Extension.SetTransport(transport)
	c.Roles.SetTransport(transport)
	c.Sso.SetTransport(transport)
	c.SsoCredential.SetTransport(transport)
	c.Ssosaml20.SetTransport(transport)
	c.ThirdPartyCredential.SetTransport(transport)
	c.Users.SetTransport(transport)
	c.UsersV4.SetTransport(transport)
}

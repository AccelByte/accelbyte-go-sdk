// Code generated by go-swagger; DO NOT EDIT.

package entitlement

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"io/ioutil"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/AccelByte/accelbyte-go-sdk/platform-sdk/pkg/platformclientmodels"
)

// PublicQueryUserEntitlementsByAppTypeReader is a Reader for the PublicQueryUserEntitlementsByAppType structure.
type PublicQueryUserEntitlementsByAppTypeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PublicQueryUserEntitlementsByAppTypeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPublicQueryUserEntitlementsByAppTypeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		data, err := ioutil.ReadAll(response.Body())
		if err != nil {
			return nil, err
		}

		return nil, fmt.Errorf("Requested GET /platform/public/namespaces/{namespace}/users/{userId}/entitlements/byAppType returns an error %d: %s", response.Code(), string(data))
	}
}

// NewPublicQueryUserEntitlementsByAppTypeOK creates a PublicQueryUserEntitlementsByAppTypeOK with default headers values
func NewPublicQueryUserEntitlementsByAppTypeOK() *PublicQueryUserEntitlementsByAppTypeOK {
	return &PublicQueryUserEntitlementsByAppTypeOK{}
}

/*PublicQueryUserEntitlementsByAppTypeOK handles this case with default header values.

  successful operation
*/
type PublicQueryUserEntitlementsByAppTypeOK struct {
	Payload *platformclientmodels.AppEntitlementPagingSlicedResult
}

func (o *PublicQueryUserEntitlementsByAppTypeOK) Error() string {
	return fmt.Sprintf("[GET /platform/public/namespaces/{namespace}/users/{userId}/entitlements/byAppType][%d] publicQueryUserEntitlementsByAppTypeOK  %+v", 200, o.Payload)
}

func (o *PublicQueryUserEntitlementsByAppTypeOK) GetPayload() *platformclientmodels.AppEntitlementPagingSlicedResult {
	return o.Payload
}

func (o *PublicQueryUserEntitlementsByAppTypeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(platformclientmodels.AppEntitlementPagingSlicedResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

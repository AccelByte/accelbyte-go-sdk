{
  "host": "demo.accelbyte.io",
  "info": {
    "description": "Justice Chat Service",
    "title": "justice-chat-service",
    "version": "staging"
  },
  "schemes": [
    "https"
  ],
  "externalDocs": {
    "description": "API Docs",
    "url": "https://stage.accelbyte.io/chat/apidocs"
  },
  "securityDefinitions": {
    "authorization": {
      "in": "header",
      "name": "Authorization",
      "type": "apiKey"
    }
  },
  "swagger": "2.0",
  "paths": {
    "/chat/admin/namespaces/{namespace}/chat/filter": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "For testing purpose, doesn\u0026#39;t send any message to the topic. Always do filter regardless of enableProfanityFilter configuration.",
        "operationId": "adminFilterChatMessage",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.MessageRequest"
            }
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "To show what filter driver is used",
            "in": "query",
            "name": "detail",
            "type": "boolean",
            "x-omitempty": false
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.MessageResultWithAttributes"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Return filtered chat message",
        "tags": [
          "topic"
        ],
        "x-errorCodes": {},
        "x-security": [
          {
            "userPermissions": [
              "ADMIN:NAMESPACE:{namespace}:CHAT:TOPIC [READ]"
            ]
          }
        ]
      }
    },
    "/chat/admin/namespaces/{namespace}/chats": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get chat history in a namespace.",
        "operationId": "adminChatHistory",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "chat ID of chat",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "chatId",
            "type": "array"
          },
          {
            "description": "end date",
            "in": "query",
            "name": "endCreatedAt",
            "type": "integer"
          },
          {
            "description": "keyword containing in message",
            "in": "query",
            "name": "keyword",
            "type": "string"
          },
          {
            "default": 100,
            "description": "limit",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "description": "offset",
            "in": "query",
            "name": "offset",
            "type": "integer"
          },
          {
            "description": "anyof: createdAt:asc / createdAt:desc",
            "in": "query",
            "name": "order",
            "type": "string"
          },
          {
            "description": "sender user ID",
            "in": "query",
            "name": "senderUserId",
            "type": "string"
          },
          {
            "description": "shard id",
            "in": "query",
            "name": "shardId",
            "type": "string"
          },
          {
            "description": "start date",
            "in": "query",
            "name": "startCreatedAt",
            "type": "integer"
          },
          {
            "collectionFormat": "multi",
            "description": "topic ID that receive the chat",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "topic",
            "type": "array"
          },
          {
            "description": "unfiltered chat messages",
            "in": "query",
            "name": "unfiltered",
            "type": "boolean",
            "x-omitempty": false
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.ChatMessageWithPaginationResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "admin get chat history",
        "tags": [
          "topic"
        ],
        "x-errorCodes": {},
        "x-security": [
          {
            "userPermissions": [
              "ADMIN:NAMESPACE:{namespace}:CHAT:TOPIC [READ]"
            ]
          }
        ]
      }
    },
    "/chat/admin/namespaces/{namespace}/namespace-topic": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create new namespace group topic in a namespace.",
        "operationId": "adminCreateNamespaceTopic",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.CreateNamespaceTopicParams"
            }
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/api.CreateTopicResponse"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Use to create namespace group. Message that send to this group send to connected user in a namespace",
        "tags": [
          "topic"
        ],
        "x-errorCodes": {},
        "x-security": [
          {
            "userPermissions": [
              "ADMIN:NAMESPACE:{namespace}:CHAT:TOPIC [CREATE]"
            ]
          }
        ]
      }
    },
    "/chat/admin/namespaces/{namespace}/topic": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get chat list of topic in a namespace.",
        "operationId": "adminTopicList",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "default": 100,
            "description": "limit",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "description": "offset",
            "in": "query",
            "name": "offset",
            "type": "integer"
          },
          {
            "description": "PERSONAL or GROUP",
            "in": "query",
            "name": "topicType",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/models.TopicResponse"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "admin get list of topic",
        "tags": [
          "topic"
        ],
        "x-errorCodes": {},
        "x-security": [
          {
            "userPermissions": [
              "ADMIN:NAMESPACE:{namespace}:CHAT:TOPIC [READ]"
            ]
          }
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create new group topic in a namespace.",
        "operationId": "adminCreateTopic",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.CreateTopicParams"
            }
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/api.CreateTopicResponse"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Use to create group. Only group admin can use this operation",
        "tags": [
          "topic"
        ],
        "x-errorCodes": {},
        "x-security": [
          {
            "userPermissions": [
              "ADMIN:NAMESPACE:{namespace}:CHAT:TOPIC [CREATE]"
            ]
          }
        ]
      }
    },
    "/chat/admin/namespaces/{namespace}/topic/channel": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get channel chat list of topic in a namespace.",
        "operationId": "adminChannelTopicList",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "default": 100,
            "description": "limit",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "description": "offset",
            "in": "query",
            "name": "offset",
            "type": "integer"
          },
          {
            "description": "name",
            "in": "query",
            "name": "topicName",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.ChannelTopicWithPaginationResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "admin get list of channel topic",
        "tags": [
          "topic"
        ],
        "x-errorCodes": {},
        "x-security": [
          {
            "userPermissions": [
              "ADMIN:NAMESPACE:{namespace}:CHAT:TOPIC [READ]"
            ]
          }
        ]
      }
    },
    "/chat/admin/namespaces/{namespace}/topic/channel/summary": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get chat list of topic in a namespace.",
        "operationId": "adminChannelTopicSummary",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.ChannelTopicSummaryResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "admin get channel topic summary",
        "tags": [
          "topic"
        ],
        "x-errorCodes": {},
        "x-security": [
          {
            "userPermissions": [
              "ADMIN:NAMESPACE:{namespace}:CHAT:TOPIC [READ]"
            ]
          }
        ]
      }
    },
    "/chat/admin/namespaces/{namespace}/topic/log": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get chat log of topic in a namespace.",
        "operationId": "adminQueryTopicLog",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "end date",
            "in": "query",
            "name": "endCreatedAt",
            "type": "integer"
          },
          {
            "default": 100,
            "description": "limit",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "description": "offset",
            "in": "query",
            "name": "offset",
            "type": "integer"
          },
          {
            "description": "senderUserId (actor, can be admin or the user itself)",
            "in": "query",
            "name": "senderUserId",
            "type": "string"
          },
          {
            "description": "start date",
            "in": "query",
            "name": "startCreatedAt",
            "type": "integer"
          },
          {
            "description": "topicId",
            "in": "query",
            "name": "topicId",
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "topicIds",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "topicIds",
            "type": "array"
          },
          {
            "description": "userId",
            "in": "query",
            "name": "userId",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.TopicLogWithPaginationResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "admin query topic log",
        "tags": [
          "topic"
        ],
        "x-errorCodes": {},
        "x-security": [
          {
            "userPermissions": [
              "ADMIN:NAMESPACE:{namespace}:CHAT:TOPIC [READ]"
            ]
          }
        ]
      }
    },
    "/chat/admin/namespaces/{namespace}/topic/{topic}": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete topic in a namespace.",
        "operationId": "adminDeleteTopic",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "topic ID that receive the chat",
            "in": "path",
            "name": "topic",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/message.ActionDeleteTopicResult"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Use to delete group. Only group admin can use this operation",
        "tags": [
          "topic"
        ],
        "x-errorCodes": {},
        "x-security": [
          {
            "userPermissions": [
              "ADMIN:NAMESPACE:{namespace}:CHAT:TOPIC [DELETE]"
            ]
          }
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update group topic in a namespace.",
        "operationId": "adminUpdateTopic",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.UpdateTopicParams"
            }
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "topic ID that receive the chat",
            "in": "path",
            "name": "topic",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/api.CreateTopicResponse"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Use to update group information. Only group admin can use this operation",
        "tags": [
          "topic"
        ],
        "x-errorCodes": {},
        "x-security": [
          {
            "userPermissions": [
              "ADMIN:NAMESPACE:{namespace}:CHAT:TOPIC [UPDATE]"
            ]
          }
        ]
      }
    },
    "/chat/admin/namespaces/{namespace}/topic/{topic}/ban-members": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Ban users in some topic. banned user not assigned to shard for channel topic, and cannot send and query chat.",
        "operationId": "adminBanTopicMembers",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.BanTopicMemberParam"
            }
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "topic ID that receive the chat",
            "in": "path",
            "name": "topic",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.BanTopicMemberResult"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "admins ban user in group topic",
        "tags": [
          "topic"
        ],
        "x-errorCodes": {},
        "x-security": [
          {
            "userPermissions": [
              "ADMIN:NAMESPACE:{namespace}:CHAT:TOPIC [UPDATE]"
            ]
          }
        ]
      }
    },
    "/chat/admin/namespaces/{namespace}/topic/{topic}/channel": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get chat list of topic in a namespace.",
        "operationId": "adminChannelTopicInfo",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "topic ID",
            "in": "path",
            "name": "topic",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.ChannelTopicResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "404": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "admin get channel topic detail",
        "tags": [
          "topic"
        ],
        "x-errorCodes": {},
        "x-security": [
          {
            "userPermissions": [
              "ADMIN:NAMESPACE:{namespace}:CHAT:TOPIC [READ]"
            ]
          }
        ]
      }
    },
    "/chat/admin/namespaces/{namespace}/topic/{topic}/chats": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "deprecated": true,
        "description": "Get chat history in a namespace.",
        "operationId": "adminTopicChatHistory",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "topic ID that receive the chat",
            "in": "path",
            "name": "topic",
            "required": true,
            "type": "string"
          },
          {
            "description": "end date",
            "in": "query",
            "name": "endCreatedAt",
            "type": "integer"
          },
          {
            "description": "keyword containing in message",
            "in": "query",
            "name": "keyword",
            "type": "string"
          },
          {
            "default": 100,
            "description": "limit",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "description": "offset",
            "in": "query",
            "name": "offset",
            "type": "integer"
          },
          {
            "description": "anyof: createdAt:asc / createdAt:desc",
            "in": "query",
            "name": "order",
            "type": "string"
          },
          {
            "description": "sender user ID",
            "in": "query",
            "name": "senderUserId",
            "type": "string"
          },
          {
            "description": "shard id",
            "in": "query",
            "name": "shardId",
            "type": "string"
          },
          {
            "description": "start date",
            "in": "query",
            "name": "startCreatedAt",
            "type": "integer"
          },
          {
            "description": "unfiltered chat messages",
            "in": "query",
            "name": "unfiltered",
            "type": "boolean",
            "x-omitempty": false
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.ChatMessageWithPaginationResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "admin get chat history",
        "tags": [
          "topic"
        ],
        "x-errorCodes": {},
        "x-security": [
          {
            "userPermissions": [
              "ADMIN:NAMESPACE:{namespace}:CHAT:TOPIC [READ]"
            ]
          }
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Send message to chat topic as system.",
        "operationId": "adminSendChat",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.SendChatParams"
            }
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "topic ID that receive the chat",
            "in": "path",
            "name": "topic",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/models.ChatMessageResponse"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "admins send chat to group topic",
        "tags": [
          "topic"
        ],
        "x-errorCodes": {},
        "x-security": [
          {
            "userPermissions": [
              "ADMIN:NAMESPACE:{namespace}:CHAT:TOPIC [UPDATE]"
            ]
          }
        ]
      }
    },
    "/chat/admin/namespaces/{namespace}/topic/{topic}/chats/{chatId}": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete chat.",
        "operationId": "adminDeleteChat",
        "parameters": [
          {
            "description": "chat ID od the chat",
            "in": "path",
            "name": "chatId",
            "required": true,
            "type": "string"
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "topic ID of the chat",
            "in": "path",
            "name": "topic",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "admins delete chat",
        "tags": [
          "topic"
        ],
        "x-errorCodes": {},
        "x-security": [
          {
            "userPermissions": [
              "ADMIN:NAMESPACE:{namespace}:CHAT:TOPIC [DELETE]"
            ]
          }
        ]
      }
    },
    "/chat/admin/namespaces/{namespace}/topic/{topic}/members": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get topic members.",
        "operationId": "adminTopicMembers",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "topic ID",
            "in": "path",
            "name": "topic",
            "required": true,
            "type": "string"
          },
          {
            "description": "only show banned member",
            "in": "query",
            "name": "isBanned",
            "type": "boolean",
            "x-omitempty": false
          },
          {
            "description": "only show moderator member",
            "in": "query",
            "name": "isModerator",
            "type": "boolean",
            "x-omitempty": false
          },
          {
            "default": 100,
            "description": "limit",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "description": "offset",
            "in": "query",
            "name": "offset",
            "type": "integer"
          },
          {
            "description": "shard ID",
            "in": "query",
            "name": "shardId",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.TopicMemberWithPaginationResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "admin get topic member",
        "tags": [
          "topic"
        ],
        "x-errorCodes": {},
        "x-security": [
          {
            "userPermissions": [
              "ADMIN:NAMESPACE:{namespace}:CHAT:TOPIC [READ]"
            ]
          }
        ]
      }
    },
    "/chat/admin/namespaces/{namespace}/topic/{topic}/shards": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get shard list from topic.",
        "operationId": "adminTopicShards",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "topic ID",
            "in": "path",
            "name": "topic",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "admin get shard list of topic",
        "tags": [
          "topic"
        ],
        "x-errorCodes": {},
        "x-security": [
          {
            "userPermissions": [
              "ADMIN:NAMESPACE:{namespace}:CHAT:TOPIC [READ]"
            ]
          }
        ]
      }
    },
    "/chat/admin/namespaces/{namespace}/topic/{topic}/unban-members": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Unban users in some topic.",
        "operationId": "adminUnbanTopicMembers",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.UnbanTopicMemberParam"
            }
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "topic ID that receive the chat",
            "in": "path",
            "name": "topic",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.UnbanTopicMemberResult"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "admins unban user in group topic",
        "tags": [
          "topic"
        ],
        "x-errorCodes": {},
        "x-security": [
          {
            "userPermissions": [
              "ADMIN:NAMESPACE:{namespace}:CHAT:TOPIC [UPDATE]"
            ]
          }
        ]
      }
    },
    "/chat/admin/namespaces/{namespace}/topic/{topic}/user/{userId}": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Remove member from topic in a namespace.",
        "operationId": "adminRemoveTopicMember",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "topic ID that will removed user from",
            "in": "path",
            "name": "topic",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID that will be removed from topic",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/message.ActionAddUserToTopicResult"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "admin remove user from topic",
        "tags": [
          "topic"
        ],
        "x-errorCodes": {},
        "x-security": [
          {
            "userPermissions": [
              "ADMIN:NAMESPACE:{namespace}:CHAT:TOPIC [UPDATE]"
            ]
          }
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Add new member for topic in a namespace.",
        "operationId": "adminAddTopicMember",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.AddMemberParams"
            }
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "topic ID that will added user to",
            "in": "path",
            "name": "topic",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID that will be added to topic",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/message.ActionAddUserToTopicResult"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "admin add user to topic",
        "tags": [
          "topic"
        ],
        "x-errorCodes": {},
        "x-security": [
          {
            "userPermissions": [
              "ADMIN:NAMESPACE:{namespace}:CHAT:TOPIC [UPDATE]"
            ]
          }
        ]
      }
    },
    "/chat/admin/namespaces/{namespace}/topics": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get topics in a namespace.",
        "operationId": "adminQueryTopic",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "include topic's members",
            "in": "query",
            "name": "includeMembers",
            "type": "boolean",
            "x-omitempty": false
          },
          {
            "description": "include past members (user that had left topic)",
            "in": "query",
            "name": "includePastMembers",
            "type": "boolean",
            "x-omitempty": false
          },
          {
            "description": "include topic that has been removed.\u003cbr/\u003e\u003cb\u003eNOTE:\u003c/b\u003e only soft deleted topics are available",
            "in": "query",
            "name": "includePastTopics",
            "type": "boolean",
            "x-omitempty": false
          },
          {
            "description": "default: 100",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "description": "offset",
            "in": "query",
            "name": "offset",
            "type": "integer"
          },
          {
            "collectionFormat": "multi",
            "description": "topic",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "topic",
            "type": "array"
          },
          {
            "description": "topicSubType",
            "enum": [
              "CLAN",
              "NAMESPACE",
              "NORMAL",
              "PARTY",
              "SESSION"
            ],
            "in": "query",
            "name": "topicSubType",
            "type": "string"
          },
          {
            "description": "topicType",
            "enum": [
              "GROUP",
              "PERSONAL"
            ],
            "in": "query",
            "name": "topicType",
            "type": "string"
          },
          {
            "description": "userId",
            "in": "query",
            "name": "userId",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/models.TopicInfo"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "admin query topics",
        "tags": [
          "topic"
        ],
        "x-errorCodes": {},
        "x-security": [
          {
            "userPermissions": [
              "ADMIN:NAMESPACE:{namespace}:CHAT:TOPIC [READ]"
            ]
          }
        ]
      }
    },
    "/chat/admin/namespaces/{namespace}/users/{userId}/topics": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get user\u0026#39;s topics in a namespace.",
        "operationId": "adminQueryUsersTopic",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "userId",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "description": "when true will include topics that user already left",
            "in": "query",
            "name": "includePastTopics",
            "type": "boolean",
            "x-omitempty": false
          },
          {
            "description": "default: 100",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "description": "offset",
            "in": "query",
            "name": "offset",
            "type": "integer"
          },
          {
            "description": "topicSubType",
            "enum": [
              "CLAN",
              "NAMESPACE",
              "NORMAL",
              "PARTY",
              "SESSION"
            ],
            "in": "query",
            "name": "topicSubType",
            "type": "string"
          },
          {
            "description": "topicType",
            "enum": [
              "GROUP",
              "PERSONAL"
            ],
            "in": "query",
            "name": "topicType",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.TopicLogWithPaginationResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "admin query user's topics",
        "tags": [
          "topic"
        ],
        "x-errorCodes": {},
        "x-security": [
          {
            "userPermissions": [
              "ADMIN:NAMESPACE:{namespace}:CHAT:TOPIC [READ]"
            ]
          }
        ]
      }
    },
    "/chat/public/namespaces/{namespace}/muted": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "get chat muted topics in a namespace.",
        "operationId": "publicGetMutedTopics",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/api.MutedTopicResponse"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "public get muted at topics",
        "tags": [
          "topic"
        ],
        "x-errorCodes": {},
        "x-security": []
      }
    },
    "/chat/public/namespaces/{namespace}/topic": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "get chat list of topic in a namespace.",
        "operationId": "publicTopicList",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "default": 100,
            "description": "limit",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "description": "offset",
            "in": "query",
            "name": "offset",
            "type": "integer"
          },
          {
            "description": "PERSONAL or GROUP",
            "in": "query",
            "name": "topicType",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/models.ChatMessageResponse"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "public get list of topic",
        "tags": [
          "topic"
        ],
        "x-errorCodes": {},
        "x-security": []
      }
    },
    "/chat/public/namespaces/{namespace}/topic/{topic}/ban-members": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Ban topic members in a group topic.",
        "operationId": "publicBanTopicMembers",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.PublicBanTopicMembersRequest"
            }
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "topic ID",
            "in": "path",
            "name": "topic",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/models.PublicBanTopicMembersResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "public ban topic members in a group topic",
        "tags": [
          "topic"
        ],
        "x-errorCodes": {},
        "x-security": [
          {
            "groupPermissions": [
              "NAMESPACE:{namespace}:CHAT:TOPIC [UPDATE]"
            ]
          }
        ]
      }
    },
    "/chat/public/namespaces/{namespace}/topic/{topic}/chats": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "get chat history in a namespace.",
        "operationId": "publicChatHistory",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "topic ID that receive the chat",
            "in": "path",
            "name": "topic",
            "required": true,
            "type": "string"
          },
          {
            "default": 100,
            "description": "limit",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "description": "anyof: createdAt:asc / createdAt:desc",
            "in": "query",
            "name": "order",
            "type": "string"
          },
          {
            "description": "lastChatCreatedAt",
            "in": "query",
            "name": "startCreatedAt",
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/models.ChatMessageResponse"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "public get chat history",
        "tags": [
          "topic"
        ],
        "x-errorCodes": {},
        "x-security": []
      }
    },
    "/chat/public/namespaces/{namespace}/topic/{topic}/chats/{chatId}": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete chat.",
        "operationId": "publicDeleteChat",
        "parameters": [
          {
            "description": "chat ID od the chat",
            "in": "path",
            "name": "chatId",
            "required": true,
            "type": "string"
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "topic ID of the chat",
            "in": "path",
            "name": "topic",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "public delete chat",
        "tags": [
          "topic"
        ],
        "x-errorCodes": {},
        "x-security": [
          {
            "groupPermissions": [
              "NAMESPACE:{namespace}:CHAT:TOPIC [DELETE]"
            ]
          }
        ]
      }
    },
    "/chat/public/namespaces/{namespace}/topic/{topic}/mute": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Mute user.",
        "operationId": "publicMuteUser",
        "parameters": [
          {
            "description": "Duration is in seconds",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.MuteUserRequest"
            }
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "topic ID",
            "in": "path",
            "name": "topic",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "public mute user in a topic",
        "tags": [
          "topic"
        ],
        "x-errorCodes": {},
        "x-security": [
          {
            "groupPermissions": [
              "NAMESPACE:{namespace}:CHAT:TOPIC [UPDATE]"
            ]
          }
        ]
      }
    },
    "/chat/public/namespaces/{namespace}/topic/{topic}/unban-members": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Unban topic members in a group topic.",
        "operationId": "publicUnbanTopicMembers",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.PublicUnbanTopicMembersRequest"
            }
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "topic ID",
            "in": "path",
            "name": "topic",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/models.PublicUnbanTopicMembersResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "public unban topic members in a group topic",
        "tags": [
          "topic"
        ],
        "x-errorCodes": {},
        "x-security": [
          {
            "groupPermissions": [
              "NAMESPACE:{namespace}:CHAT:TOPIC [UPDATE]"
            ]
          }
        ]
      }
    },
    "/chat/public/namespaces/{namespace}/topic/{topic}/unmute": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Unmute user.",
        "operationId": "publicUnmuteUser",
        "parameters": [
          {
            "description": "Duration is in seconds",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.UnmuteUserRequest"
            }
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "topic ID",
            "in": "path",
            "name": "topic",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "public unmute user in a topic",
        "tags": [
          "topic"
        ],
        "x-errorCodes": {},
        "x-security": [
          {
            "groupPermissions": [
              "NAMESPACE:{namespace}:CHAT:TOPIC [UPDATE]"
            ]
          }
        ]
      }
    },
    "/chat/v1/admin/config": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get chat config of all namespaces.",
        "operationId": "adminGetAllConfigV1",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.ConfigList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "admin get all namespaces config",
        "tags": [
          "config"
        ],
        "x-errorCodes": {},
        "x-security": [
          {
            "userPermissions": [
              "ADMIN:NAMESPACE:*:CHAT:CONFIG [READ]"
            ]
          }
        ]
      }
    },
    "/chat/v1/admin/config/log": {
      "get": {
        "description": "\n\t\t\tGet Log Configuration\n\t\t\tlogLevel use for logging in service, the value can use is trace|debug|info|warning|error|fatal|panic\n\t\t\tsocketLogEnabled is use for enable socket log\n\t\t\tinternalAccessLogEnabled is for enabling access log for internal endpoint\n\t\t\tlogLevelDB use for logging in DB, the value can use is trace|debug|info|warning|error|fatal|panic\n\t\t\tslowQueryThreshold use for logging slow threshold in time measure is nano second\n\t\t\t",
        "operationId": "adminGetLogConfig",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/logconfig.Configuration"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Get Log Configuration",
        "tags": [
          "config"
        ],
        "x-errorCodes": {},
        "x-security": [
          {
            "userPermissions": [
              "ADMIN:CONFIG:LOG [READ]"
            ]
          }
        ]
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "description": "\n\t\t\t\tUpdate Log Configuration\n\t\t\t\tlogLevel use for logging in service, the value can use is trace|debug|info|warning|error|fatal|panic\n\t\t\t\tsocketLogEnabled is use for enable socket log\n\t\t\t\tinternalAccessLogEnabled is for enabling access log for internal endpoint\n\t\t\t\tlogLevelDB use for logging in DB, the value can use is trace|debug|info|warning|error|fatal|panic\n\t\t\t\tslowQueryThreshold use for logging slow threshold in time measure is nano second\n\t\t\t",
        "operationId": "adminPatchUpdateLogConfig",
        "parameters": [
          {
            "description": "Optional values can be omitted and will update partially",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/logconfig.Configuration"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/logconfig.Configuration"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Patch Update Log Configuration",
        "tags": [
          "config"
        ],
        "x-errorCodes": {},
        "x-security": [
          {
            "userPermissions": [
              "ADMIN:CONFIG:LOG [UPDATE]"
            ]
          }
        ]
      }
    },
    "/chat/v1/admin/config/namespaces/{namespace}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get chat config of a namespace.",
        "operationId": "adminGetConfigV1",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.ConfigResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "admin get namespace config",
        "tags": [
          "config"
        ],
        "x-errorCodes": {},
        "x-security": [
          {
            "userPermissions": [
              "ADMIN:NAMESPACE:{namespace}:CHAT:CONFIG [READ]"
            ]
          }
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update chat config of a namespace.",
        "operationId": "adminUpdateConfigV1",
        "parameters": [
          {
            "description": "chat config",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.ConfigResponse"
            }
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.ConfigResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "412": {
            "description": "Precondition Failed",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "admin update namespace config",
        "tags": [
          "config"
        ],
        "x-errorCodes": {},
        "x-security": [
          {
            "userPermissions": [
              "ADMIN:NAMESPACE:{namespace}:CHAT:CONFIG [UPDATE]"
            ]
          }
        ]
      }
    },
    "/chat/v1/admin/config/namespaces/{namespace}/export": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "\n\t\t\t\tExport chat configuration to a json file. The file can then be imported from the /import endpoint. \n\t\t\t\t",
        "operationId": "ExportConfig",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/models.ConfigExport"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Export chat config to a json file.",
        "tags": [
          "config"
        ],
        "x-errorCodes": {},
        "x-security": [
          {
            "userPermissions": [
              "ADMIN:NAMESPACE:{namespace}:CHAT:CONFIG [READ]"
            ]
          }
        ]
      }
    },
    "/chat/v1/admin/config/namespaces/{namespace}/import": {
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "description": "\n\t\t\t\tImport config configuration from file. The existing configuration will be replaced.\n\t\t\t\tThe json file to import can be obtained from the /export endpoint. \n\t\t\t\t",
        "operationId": "ImportConfig",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "file to be imported",
            "in": "formData",
            "name": "file",
            "type": "file"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.ImportConfigResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Import chat config from a json file.",
        "tags": [
          "config"
        ],
        "x-errorCodes": {},
        "x-security": [
          {
            "userPermissions": [
              "ADMIN:NAMESPACE:{namespace}:CHAT:CONFIG [UPDATE]"
            ]
          }
        ]
      }
    },
    "/chat/v1/admin/inbox/namespaces/{namespace}/categories": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get inbox categories",
        "operationId": "adminGetInboxCategories",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/models.GetInboxCategoriesResponseItem"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "admin get inbox categories",
        "tags": [
          "inbox"
        ],
        "x-errorCodes": {},
        "x-security": [
          {
            "userPermissions": [
              "ADMIN:NAMESPACE:{namespace}:CHAT:CATEGORY [READ]"
            ]
          }
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Add inbox category.",
        "operationId": "adminAddInboxCategory",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.AddInboxCategoryRequest"
            }
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.AddInboxCategoryResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "add inbox category",
        "tags": [
          "inbox"
        ],
        "x-errorCodes": {},
        "x-security": [
          {
            "userPermissions": [
              "ADMIN:NAMESPACE:{namespace}:CHAT:CATEGORY [CREATE]"
            ]
          }
        ]
      }
    },
    "/chat/v1/admin/inbox/namespaces/{namespace}/categories/{category}": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete inbox category",
        "operationId": "adminDeleteInboxCategory",
        "parameters": [
          {
            "description": "category",
            "in": "path",
            "name": "category",
            "required": true,
            "type": "string"
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "admin delete inbox category",
        "tags": [
          "inbox"
        ],
        "x-errorCodes": {},
        "x-security": [
          {
            "userPermissions": [
              "ADMIN:NAMESPACE:{namespace}:CHAT:CATEGORY [DELETE]"
            ]
          }
        ]
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "description": "Update inbox category",
        "operationId": "adminUpdateInboxCategory",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.UpdateInboxCategoryRequest"
            }
          },
          {
            "description": "category",
            "in": "path",
            "name": "category",
            "required": true,
            "type": "string"
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "admin update inbox category",
        "tags": [
          "inbox"
        ],
        "x-errorCodes": {},
        "x-security": [
          {
            "userPermissions": [
              "ADMIN:NAMESPACE:{namespace}:CHAT:CATEGORY [UPDATE]"
            ]
          }
        ]
      }
    },
    "/chat/v1/admin/inbox/namespaces/{namespace}/categories/{category}/schema.json": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get category schema.",
        "operationId": "adminGetCategorySchema",
        "parameters": [
          {
            "description": "category",
            "in": "path",
            "name": "category",
            "required": true,
            "type": "string"
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.JSONSchemaType"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "404": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "admin get category schema",
        "tags": [
          "inbox"
        ],
        "x-errorCodes": {},
        "x-security": [
          {
            "userPermissions": [
              "ADMIN:NAMESPACE:{namespace}:CHAT:CATEGORY [READ]"
            ]
          }
        ]
      }
    },
    "/chat/v1/admin/inbox/namespaces/{namespace}/message/{messageId}": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete inbox message",
        "operationId": "adminDeleteInboxMessage",
        "parameters": [
          {
            "description": "message",
            "in": "path",
            "name": "messageId",
            "required": true,
            "type": "string"
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "only for testing purposes, to force delete data",
            "in": "query",
            "name": "force",
            "type": "boolean",
            "x-omitempty": false
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "admin delete inbox message",
        "tags": [
          "inbox"
        ],
        "x-errorCodes": {},
        "x-security": [
          {
            "userPermissions": [
              "ADMIN:NAMESPACE:{namespace}:CHAT:INBOX [DELETE]"
            ]
          }
        ]
      }
    },
    "/chat/v1/admin/inbox/namespaces/{namespace}/messages": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get inbox messages",
        "operationId": "adminGetInboxMessages",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "active only",
            "in": "query",
            "name": "activeOnly",
            "type": "boolean",
            "x-omitempty": false
          },
          {
            "description": "end created at",
            "in": "query",
            "name": "endCreatedAt",
            "type": "integer"
          },
          {
            "description": "limit",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "collectionFormat": "multi",
            "description": "message ids",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "messageId",
            "type": "array"
          },
          {
            "description": "offset",
            "in": "query",
            "name": "offset",
            "type": "integer"
          },
          {
            "description": "anyof: createdAt:asc / createdAt:desc",
            "in": "query",
            "name": "order",
            "type": "string"
          },
          {
            "description": "message scope",
            "enum": [
              "NAMESPACE",
              "USER"
            ],
            "in": "query",
            "name": "scope",
            "type": "string"
          },
          {
            "description": "start created at",
            "in": "query",
            "name": "startCreatedAt",
            "type": "integer"
          },
          {
            "description": "message status",
            "enum": [
              "DRAFT",
              "SENT",
              "UNSENT"
            ],
            "in": "query",
            "name": "status",
            "type": "string"
          },
          {
            "description": "transient message filter",
            "in": "query",
            "name": "transient",
            "type": "boolean",
            "x-omitempty": false
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.GetInboxMessagesResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "admin get inbox messages",
        "tags": [
          "inbox"
        ],
        "x-errorCodes": {},
        "x-security": [
          {
            "userPermissions": [
              "ADMIN:NAMESPACE:{namespace}:CHAT:INBOX [READ]"
            ]
          }
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Save inbox message",
        "operationId": "adminSaveInboxMessage",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.SaveInboxMessageRequest"
            }
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.SaveInboxMessageResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "admin save inbox message",
        "tags": [
          "inbox"
        ],
        "x-errorCodes": {},
        "x-security": [
          {
            "userPermissions": [
              "ADMIN:NAMESPACE:{namespace}:CHAT:INBOX [CREATE]"
            ]
          }
        ]
      }
    },
    "/chat/v1/admin/inbox/namespaces/{namespace}/messages/{inbox}/unsend": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Unsend inbox message",
        "operationId": "adminUnsendInboxMessage",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.UnsendInboxMessageRequest"
            }
          },
          {
            "description": "message",
            "in": "path",
            "name": "inbox",
            "required": true,
            "type": "string"
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.UnsendInboxMessageResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "admin unsend inbox message",
        "tags": [
          "inbox"
        ],
        "x-errorCodes": {},
        "x-security": [
          {
            "userPermissions": [
              "ADMIN:NAMESPACE:{namespace}:CHAT:INBOX [UPDATE]"
            ]
          }
        ]
      }
    },
    "/chat/v1/admin/inbox/namespaces/{namespace}/messages/{inbox}/users": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get inbox users",
        "operationId": "adminGetInboxUsers",
        "parameters": [
          {
            "description": "message id",
            "in": "path",
            "name": "inbox",
            "required": true,
            "type": "string"
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "limit",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "description": "offset",
            "in": "query",
            "name": "offset",
            "type": "integer"
          },
          {
            "description": "message status",
            "enum": [
              "READ",
              "UNREAD"
            ],
            "in": "query",
            "name": "status",
            "type": "string"
          },
          {
            "description": "userId",
            "in": "query",
            "name": "userId",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.GetInboxUsersResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "admin get inbox users",
        "tags": [
          "inbox"
        ],
        "x-errorCodes": {},
        "x-security": [
          {
            "userPermissions": [
              "ADMIN:NAMESPACE:{namespace}:CHAT:INBOX [READ]"
            ]
          }
        ]
      }
    },
    "/chat/v1/admin/inbox/namespaces/{namespace}/messages/{messageId}": {
      "patch": {
        "consumes": [
          "application/json"
        ],
        "description": "Update inbox message",
        "operationId": "adminUpdateInboxMessage",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.UpdateInboxMessageRequest"
            }
          },
          {
            "description": "message",
            "in": "path",
            "name": "messageId",
            "required": true,
            "type": "string"
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "admin update inbox message",
        "tags": [
          "inbox"
        ],
        "x-errorCodes": {},
        "x-security": [
          {
            "userPermissions": [
              "ADMIN:NAMESPACE:{namespace}:CHAT:INBOX [UPDATE]"
            ]
          }
        ]
      }
    },
    "/chat/v1/admin/inbox/namespaces/{namespace}/messages/{messageId}/send": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Send inbox message",
        "operationId": "adminSendInboxMessage",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.SendInboxMessageRequest"
            }
          },
          {
            "description": "message",
            "in": "path",
            "name": "messageId",
            "required": true,
            "type": "string"
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.SendInboxMessageResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "admin send inbox message",
        "tags": [
          "inbox"
        ],
        "x-errorCodes": {},
        "x-security": [
          {
            "userPermissions": [
              "ADMIN:NAMESPACE:{namespace}:CHAT:INBOX [UPDATE]"
            ]
          }
        ]
      }
    },
    "/chat/v1/admin/inbox/namespaces/{namespace}/stats": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get inbox stats",
        "operationId": "adminGetInboxStats",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "message ids",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "messageId",
            "type": "array"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.GetInboxStatsResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "admin get inbox stats",
        "tags": [
          "inbox"
        ],
        "x-errorCodes": {},
        "x-security": [
          {
            "userPermissions": [
              "ADMIN:NAMESPACE:{namespace}:CHAT:INBOX [READ]"
            ]
          }
        ]
      }
    },
    "/chat/v1/admin/namespaces/{namespace}/snapshot/{chatId}": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete the chat snapshot",
        "operationId": "adminDeleteChatSnapshot",
        "parameters": [
          {
            "description": "id of the chat",
            "in": "path",
            "name": "chatId",
            "required": true,
            "type": "string"
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "admin delete chat snapshot",
        "tags": [
          "moderation"
        ],
        "x-errorCodes": {},
        "x-security": [
          {
            "userPermissions": [
              "ADMIN:NAMESPACE:{namespace}:CHAT:TOPIC [DELETE]"
            ]
          }
        ]
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get the chat snapshot",
        "operationId": "adminGetChatSnapshot",
        "parameters": [
          {
            "description": "id of the chat",
            "in": "path",
            "name": "chatId",
            "required": true,
            "type": "string"
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.ChatSnapshots"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "admin get chat snapshot",
        "tags": [
          "moderation"
        ],
        "x-errorCodes": {},
        "x-security": [
          {
            "userPermissions": [
              "ADMIN:NAMESPACE:{namespace}:CHAT:TOPIC [READ]"
            ]
          }
        ]
      }
    },
    "/chat/v1/admin/profanity/namespaces/{namespace}/dictionary": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Query all profanity words.",
        "operationId": "adminProfanityQuery",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "filter mask",
            "in": "query",
            "name": "filterMask",
            "type": "string"
          },
          {
            "description": "include false positives and false negatives",
            "in": "query",
            "name": "includeChildren",
            "type": "boolean",
            "x-omitempty": false
          },
          {
            "description": "limit",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "description": "offset",
            "in": "query",
            "name": "offset",
            "type": "integer"
          },
          {
            "description": "parent ID of the word",
            "in": "query",
            "name": "parentId",
            "type": "string"
          },
          {
            "description": "word start with",
            "in": "query",
            "name": "startWith",
            "type": "string"
          },
          {
            "description": "type of the word: PROFANITY, FALSEPOSITIVE, FALSENEGATIVE",
            "in": "query",
            "name": "wordType",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.DictionaryQueryResult"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "admin query profanity words",
        "tags": [
          "profanity"
        ],
        "x-errorCodes": {},
        "x-security": [
          {
            "userPermissions": [
              "ADMIN:NAMESPACE:{namespace}:CHAT:PROFANITY [READ]"
            ]
          }
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Insert new word for profanity censor",
        "operationId": "adminProfanityCreate",
        "parameters": [
          {
            "description": "insert request",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.DictionaryInsertRequest"
            }
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.Dictionary"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "admin insert new profanity words",
        "tags": [
          "profanity"
        ],
        "x-errorCodes": {},
        "x-security": [
          {
            "userPermissions": [
              "ADMIN:NAMESPACE:{namespace}:CHAT:PROFANITY [CREATE]"
            ]
          }
        ]
      }
    },
    "/chat/v1/admin/profanity/namespaces/{namespace}/dictionary/bulk": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Bulk insert new word for profanity censor",
        "operationId": "adminProfanityCreateBulk",
        "parameters": [
          {
            "description": "insert request",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.DictionaryInsertBulkRequest"
            }
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "admin bulk insert new profanity words",
        "tags": [
          "profanity"
        ],
        "x-errorCodes": {},
        "x-security": [
          {
            "userPermissions": [
              "ADMIN:NAMESPACE:{namespace}:CHAT:PROFANITY [CREATE]"
            ]
          }
        ]
      }
    },
    "/chat/v1/admin/profanity/namespaces/{namespace}/dictionary/export": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Export profanity words",
        "operationId": "adminProfanityExport",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.DictionaryExport"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "admin export profanity words",
        "tags": [
          "profanity"
        ],
        "x-errorCodes": {},
        "x-security": [
          {
            "userPermissions": [
              "ADMIN:NAMESPACE:{namespace}:CHAT:PROFANITY [READ]"
            ]
          }
        ]
      }
    },
    "/chat/v1/admin/profanity/namespaces/{namespace}/dictionary/group": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get profanity words group.",
        "operationId": "adminProfanityGroup",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "default: 100",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "description": "offset",
            "in": "query",
            "name": "offset",
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/models.DictionaryGroup"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "admin get profanity words group",
        "tags": [
          "profanity"
        ],
        "x-errorCodes": {},
        "x-security": [
          {
            "userPermissions": [
              "ADMIN:NAMESPACE:{namespace}:CHAT:PROFANITY [READ]"
            ]
          }
        ]
      }
    },
    "/chat/v1/admin/profanity/namespaces/{namespace}/dictionary/import": {
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Import profanity words",
        "operationId": "adminProfanityImport",
        "parameters": [
          {
            "description": "file to be imported",
            "in": "formData",
            "name": "file",
            "required": true,
            "type": "file"
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "default": "REPLACE",
            "description": "The action when same words already exists\u003c/br\u003e\n\t\t\t\t\t\t\t\t\u003cb\u003eREPLACE\u003c/b\u003e: replace all same words with imported false positives and false negatives, existing non-imported words won't be removed\u003c/br\u003e\n                                \u003cb\u003eFULLREPLACE\u003c/b\u003e: replace all words with imported data and remove existing non-imported words, list words will be exactly same with imported data\u003c/br\u003e\n                                \u003cb\u003eLEAVEOUT\u003c/b\u003e: ignore imported same words, false positives and false negatives won't be replaced with imported data'",
            "enum": [
              "FULLREPLACE",
              "LEAVEOUT",
              "REPLACE"
            ],
            "in": "query",
            "name": "action",
            "type": "string"
          },
          {
            "default": false,
            "description": "When showResult=true, this endpoint with returns imported words result",
            "in": "query",
            "name": "showResult",
            "type": "boolean",
            "x-omitempty": false
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "returned when showResult=true",
            "schema": {
              "$ref": "#/definitions/models.DictionaryImportResult"
            }
          },
          "204": {
            "description": "No Content returned when showResult=false or not defined"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "admin import profanity words",
        "tags": [
          "profanity"
        ],
        "x-errorCodes": {},
        "x-security": [
          {
            "userPermissions": [
              "ADMIN:NAMESPACE:{namespace}:CHAT:PROFANITY [CREATE]"
            ]
          }
        ]
      }
    },
    "/chat/v1/admin/profanity/namespaces/{namespace}/dictionary/{id}": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete profanity words.",
        "operationId": "adminProfanityDelete",
        "parameters": [
          {
            "description": "id of the dictionary",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "admin delete profanity words",
        "tags": [
          "profanity"
        ],
        "x-errorCodes": {},
        "x-security": [
          {
            "userPermissions": [
              "ADMIN:NAMESPACE:{namespace}:CHAT:PROFANITY [DELETE]"
            ]
          }
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update profanity word",
        "operationId": "adminProfanityUpdate",
        "parameters": [
          {
            "description": "update request",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.DictionaryUpdateRequest"
            }
          },
          {
            "description": "id of the dictionary",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.Dictionary"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "admin update profanity word",
        "tags": [
          "profanity"
        ],
        "x-errorCodes": {},
        "x-security": [
          {
            "userPermissions": [
              "ADMIN:NAMESPACE:{namespace}:CHAT:PROFANITY [UPDATE]"
            ]
          }
        ]
      }
    },
    "/chat/v1/messages": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "get the list of messages.",
        "operationId": "publicGetMessages",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/log.AppMessageDeclaration"
              },
              "type": "array"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "get service messages",
        "x-errorCodes": {}
      }
    },
    "/chat/v1/public/config/namespaces/{namespace}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get chat config of a namespace.",
        "operationId": "publicGetConfigV1",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.PublicConfigResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "public get namespace config",
        "tags": [
          "config"
        ],
        "x-errorCodes": {},
        "x-security": []
      }
    },
    "/chat/v1/public/namespaces/{namespace}/topic/{topic}/snapshot/{chatId}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get the chat snapshot",
        "operationId": "publicGetChatSnapshot",
        "parameters": [
          {
            "description": "id of the chat",
            "in": "path",
            "name": "chatId",
            "required": true,
            "type": "string"
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "topic",
            "in": "path",
            "name": "topic",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.ChatSnapshots"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseBody"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "public get chat snapshot",
        "tags": [
          "moderation"
        ],
        "x-errorCodes": {},
        "x-security": [
          {
            "groupPermissions": [
              "NAMESPACE:{namespace}:CHAT:TOPIC [READ]"
            ]
          }
        ]
      }
    }
  },
  "definitions": {
    "api.AddMemberParams": {
      "properties": {
        "isAdmin": {
          "type": "boolean",
          "x-omitempty": false
        }
      },
      "required": [
        "isAdmin"
      ]
    },
    "api.CreateNamespaceTopicParams": {
      "properties": {
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "description",
        "name"
      ]
    },
    "api.CreateTopicParams": {
      "properties": {
        "admins": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "description": {
          "type": "string"
        },
        "isChannel": {
          "type": "boolean",
          "x-omitempty": false
        },
        "isJoinable": {
          "type": "boolean",
          "x-omitempty": false
        },
        "members": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "name": {
          "type": "string"
        },
        "shardLimit": {
          "format": "int32",
          "type": "integer"
        },
        "type": {
          "type": "string"
        }
      },
      "required": [
        "admins",
        "description",
        "isChannel",
        "isJoinable",
        "members",
        "name",
        "type"
      ]
    },
    "api.CreateTopicResponse": {
      "properties": {
        "createdAt": {
          "format": "int64",
          "type": "integer"
        },
        "createdBy": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "isChannel": {
          "type": "boolean",
          "x-omitempty": false
        },
        "isJoinable": {
          "type": "boolean",
          "x-omitempty": false
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "topicId": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "required": [
        "createdAt",
        "createdBy",
        "description",
        "isChannel",
        "isJoinable",
        "name",
        "namespace",
        "topicId",
        "type"
      ]
    },
    "api.MuteUserRequest": {
      "properties": {
        "duration": {
          "format": "int32",
          "type": "integer"
        },
        "userId": {
          "type": "string"
        }
      },
      "required": [
        "duration",
        "userId"
      ]
    },
    "api.MutedTopicResponse": {
      "properties": {
        "expirationTime": {
          "format": "int64",
          "type": "integer"
        },
        "remainingTime": {
          "format": "int64",
          "type": "integer"
        },
        "topicId": {
          "type": "string"
        }
      },
      "required": [
        "expirationTime",
        "remainingTime",
        "topicId"
      ]
    },
    "api.SendChatParams": {
      "properties": {
        "message": {
          "type": "string"
        }
      },
      "required": [
        "message"
      ]
    },
    "api.UnmuteUserRequest": {
      "properties": {
        "userId": {
          "type": "string"
        }
      },
      "required": [
        "userId"
      ]
    },
    "api.UpdateTopicParams": {
      "properties": {
        "description": {
          "type": "string"
        },
        "isJoinable": {
          "type": "boolean",
          "x-omitempty": false
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "description",
        "isJoinable",
        "name"
      ]
    },
    "log.AppMessageDeclaration": {
      "properties": {
        "Attributes": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "Code": {
          "type": "string"
        },
        "CodeName": {
          "type": "string"
        },
        "Section": {
          "type": "string"
        },
        "Service": {
          "type": "string"
        },
        "Text": {
          "type": "string"
        }
      },
      "required": [
        "Attributes",
        "Code",
        "CodeName",
        "Section",
        "Service",
        "Text"
      ]
    },
    "logconfig.Configuration": {
      "properties": {
        "internalAccessLogEnabled": {
          "type": "boolean",
          "x-omitempty": false
        },
        "logLevel": {
          "enum": [
            "debug",
            "error",
            "fatal",
            "info",
            "panic",
            "trace",
            "warning"
          ],
          "type": "string"
        },
        "logLevelDB": {
          "enum": [
            "debug",
            "error",
            "fatal",
            "info",
            "panic",
            "trace",
            "warning"
          ],
          "type": "string"
        },
        "slowQueryThreshold": {
          "format": "int64",
          "type": "integer"
        },
        "socketLogEnabled": {
          "type": "boolean",
          "x-omitempty": false
        }
      }
    },
    "message.ActionAddUserToTopicResult": {
      "properties": {
        "processed": {
          "format": "int64",
          "type": "integer"
        },
        "topicId": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        }
      },
      "required": [
        "processed",
        "topicId",
        "userId"
      ]
    },
    "message.ActionDeleteTopicResult": {
      "properties": {
        "processed": {
          "format": "int64",
          "type": "integer"
        },
        "topicId": {
          "type": "string"
        }
      },
      "required": [
        "processed",
        "topicId"
      ]
    },
    "models.AddInboxCategoryRequest": {
      "properties": {
        "enabled": {
          "type": "boolean",
          "x-omitempty": false
        },
        "expiresIn": {
          "format": "int64",
          "type": "integer"
        },
        "hook": {
          "$ref": "#/definitions/models.CategoryHook"
        },
        "jsonSchema": {
          "type": "object"
        },
        "name": {
          "type": "string"
        },
        "saveInbox": {
          "type": "boolean",
          "x-omitempty": false
        },
        "sendNotification": {
          "type": "boolean",
          "x-omitempty": false
        }
      },
      "required": [
        "enabled",
        "expiresIn",
        "name",
        "saveInbox",
        "sendNotification"
      ]
    },
    "models.AddInboxCategoryResponse": {
      "properties": {
        "enabled": {
          "type": "boolean",
          "x-omitempty": false
        },
        "expiresIn": {
          "format": "int64",
          "type": "integer"
        },
        "hook": {
          "$ref": "#/definitions/models.CategoryHook"
        },
        "jsonSchema": {
          "type": "object"
        },
        "name": {
          "type": "string"
        },
        "saveInbox": {
          "type": "boolean",
          "x-omitempty": false
        },
        "sendNotification": {
          "type": "boolean",
          "x-omitempty": false
        }
      },
      "required": [
        "enabled",
        "expiresIn",
        "name",
        "saveInbox",
        "sendNotification"
      ]
    },
    "models.BanTopicMemberParam": {
      "properties": {
        "userIds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "userIds"
      ]
    },
    "models.BanTopicMemberResult": {
      "properties": {
        "userIds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "userIds"
      ]
    },
    "models.CategoryHook": {
      "properties": {
        "driver": {
          "type": "string"
        },
        "params": {
          "type": "object"
        }
      }
    },
    "models.ChannelTopicResponse": {
      "properties": {
        "createdAt": {
          "format": "int64",
          "type": "integer"
        },
        "createdBy": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "isJoinable": {
          "type": "boolean",
          "x-omitempty": false
        },
        "messagePerMinutes": {
          "format": "double",
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "shardLimit": {
          "format": "int32",
          "type": "integer"
        },
        "shardNumber": {
          "format": "int32",
          "type": "integer"
        },
        "topicId": {
          "type": "string"
        },
        "totalMember": {
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [
        "createdAt",
        "createdBy",
        "description",
        "isJoinable",
        "messagePerMinutes",
        "name",
        "namespace",
        "shardLimit",
        "shardNumber",
        "topicId",
        "totalMember"
      ]
    },
    "models.ChannelTopicSummaryResponse": {
      "properties": {
        "totalChannel": {
          "format": "int32",
          "type": "integer"
        },
        "totalShard": {
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [
        "totalChannel",
        "totalShard"
      ]
    },
    "models.ChannelTopicWithPaginationResponse": {
      "properties": {
        "data": {
          "items": {
            "$ref": "#/definitions/models.ChannelTopicResponse"
          },
          "type": "array"
        },
        "paging": {
          "$ref": "#/definitions/models.Pagination"
        },
        "totalData": {
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [
        "data",
        "paging",
        "totalData"
      ]
    },
    "models.ChatMessageResponse": {
      "properties": {
        "from": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "readAt": {
          "format": "int64",
          "type": "integer"
        },
        "receivedAt": {
          "format": "int64",
          "type": "integer"
        },
        "topicId": {
          "type": "string"
        }
      },
      "required": [
        "from",
        "id",
        "message",
        "topicId"
      ]
    },
    "models.ChatMessageWithPaginationResponse": {
      "properties": {
        "data": {
          "items": {
            "$ref": "#/definitions/models.ChatMessageResponse"
          },
          "type": "array"
        },
        "paging": {
          "$ref": "#/definitions/models.Pagination"
        },
        "totalData": {
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [
        "data",
        "paging",
        "totalData"
      ]
    },
    "models.ChatSnapshotMessage": {
      "properties": {
        "chatId": {
          "type": "string"
        },
        "createdAt": {
          "format": "int64",
          "type": "integer"
        },
        "message": {
          "type": "string"
        },
        "senderId": {
          "type": "string"
        }
      },
      "required": [
        "chatId",
        "createdAt",
        "message",
        "senderId"
      ]
    },
    "models.ChatSnapshots": {
      "properties": {
        "chatId": {
          "type": "string"
        },
        "createdAt": {
          "format": "int64",
          "type": "integer"
        },
        "joinedTopics": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "messages": {
          "items": {
            "$ref": "#/definitions/models.ChatSnapshotMessage"
          },
          "type": "array"
        },
        "namespace": {
          "type": "string"
        },
        "senderId": {
          "type": "string"
        },
        "ticketId": {
          "type": "string"
        },
        "topicId": {
          "type": "string"
        }
      },
      "required": [
        "chatId",
        "createdAt",
        "joinedTopics",
        "messages",
        "namespace",
        "senderId",
        "ticketId",
        "topicId"
      ]
    },
    "models.Config": {
      "properties": {
        "ChatRateLimitBurst": {
          "format": "int32",
          "type": "integer"
        },
        "ChatRateLimitDuration": {
          "format": "int64",
          "type": "integer"
        },
        "ConcurrentUsersLimit": {
          "format": "int32",
          "type": "integer"
        },
        "EnableManualTopicCreation": {
          "type": "boolean",
          "x-omitempty": false
        },
        "EnableProfanityFilter": {
          "type": "boolean",
          "x-omitempty": false
        },
        "FilterAppName": {
          "type": "string"
        },
        "FilterParam": {
          "type": "string"
        },
        "FilterType": {
          "type": "string"
        },
        "GeneralRateLimitBurst": {
          "format": "int32",
          "type": "integer"
        },
        "GeneralRateLimitDuration": {
          "format": "int64",
          "type": "integer"
        },
        "Namespace": {
          "type": "string"
        },
        "ShardCapacityLimit": {
          "format": "int32",
          "type": "integer"
        },
        "ShardDefaultLimit": {
          "format": "int32",
          "type": "integer"
        },
        "ShardHardLimit": {
          "format": "int32",
          "type": "integer"
        },
        "SpamChatBurst": {
          "format": "int32",
          "type": "integer"
        },
        "SpamChatDuration": {
          "format": "int64",
          "type": "integer"
        },
        "SpamMuteDuration": {
          "format": "int64",
          "type": "integer"
        },
        "defaultDictionaryLoaded": {
          "type": "boolean",
          "x-omitempty": false
        },
        "enableClanChat": {
          "type": "boolean",
          "x-omitempty": false
        },
        "enablePmSendPlatformId": {
          "type": "boolean",
          "x-omitempty": false
        },
        "maxChatMessageLength": {
          "format": "int32",
          "type": "integer"
        },
        "useDefaultDictionary": {
          "type": "boolean",
          "x-omitempty": false
        }
      },
      "required": [
        "ChatRateLimitBurst",
        "ChatRateLimitDuration",
        "ConcurrentUsersLimit",
        "EnableProfanityFilter",
        "FilterAppName",
        "FilterParam",
        "FilterType",
        "GeneralRateLimitBurst",
        "GeneralRateLimitDuration",
        "Namespace",
        "ShardCapacityLimit",
        "ShardDefaultLimit",
        "ShardHardLimit",
        "SpamChatBurst",
        "SpamChatDuration",
        "SpamMuteDuration"
      ]
    },
    "models.ConfigExport": {
      "properties": {
        "chatRateLimitBurst": {
          "format": "int32",
          "type": "integer"
        },
        "chatRateLimitDuration": {
          "format": "int64",
          "type": "integer"
        },
        "concurrentUsersLimit": {
          "format": "int32",
          "type": "integer"
        },
        "enableClanChat": {
          "type": "boolean",
          "x-omitempty": false
        },
        "enableManualTopicCreation": {
          "type": "boolean",
          "x-omitempty": false
        },
        "enablePmSendPlatformId": {
          "type": "boolean",
          "x-omitempty": false
        },
        "enableProfanityFilter": {
          "type": "boolean",
          "x-omitempty": false
        },
        "filterAppName": {
          "type": "string"
        },
        "filterParam": {
          "type": "string"
        },
        "filterType": {
          "type": "string"
        },
        "generalRateLimitBurst": {
          "format": "int32",
          "type": "integer"
        },
        "generalRateLimitDuration": {
          "format": "int64",
          "type": "integer"
        },
        "namespace": {
          "type": "string"
        },
        "shardCapacityLimit": {
          "format": "int32",
          "type": "integer"
        },
        "shardDefaultLimit": {
          "format": "int32",
          "type": "integer"
        },
        "shardHardLimit": {
          "format": "int32",
          "type": "integer"
        },
        "spamChatBurst": {
          "format": "int32",
          "type": "integer"
        },
        "spamChatDuration": {
          "format": "int64",
          "type": "integer"
        },
        "spamMuteDuration": {
          "format": "int64",
          "type": "integer"
        }
      },
      "required": [
        "chatRateLimitBurst",
        "chatRateLimitDuration",
        "concurrentUsersLimit",
        "generalRateLimitBurst",
        "generalRateLimitDuration",
        "namespace"
      ]
    },
    "models.ConfigList": {
      "properties": {
        "configs": {
          "items": {
            "$ref": "#/definitions/models.Config"
          },
          "type": "array"
        }
      },
      "required": [
        "configs"
      ]
    },
    "models.ConfigResponse": {
      "properties": {
        "chatRateLimitBurst": {
          "format": "int32",
          "type": "integer"
        },
        "chatRateLimitDuration": {
          "format": "int64",
          "type": "integer"
        },
        "concurrentUsersLimit": {
          "format": "int32",
          "type": "integer"
        },
        "enableClanChat": {
          "type": "boolean",
          "x-omitempty": false
        },
        "enableManualTopicCreation": {
          "type": "boolean",
          "x-omitempty": false
        },
        "enablePmSendPlatformId": {
          "type": "boolean",
          "x-omitempty": false
        },
        "enableProfanityFilter": {
          "type": "boolean",
          "x-omitempty": false
        },
        "filterAppName": {
          "type": "string"
        },
        "filterParam": {
          "type": "string"
        },
        "filterType": {
          "type": "string"
        },
        "generalRateLimitBurst": {
          "format": "int32",
          "type": "integer"
        },
        "generalRateLimitDuration": {
          "format": "int64",
          "type": "integer"
        },
        "maxChatMessageLength": {
          "format": "int32",
          "type": "integer"
        },
        "shardCapacityLimit": {
          "format": "int32",
          "type": "integer"
        },
        "shardDefaultLimit": {
          "format": "int32",
          "type": "integer"
        },
        "shardHardLimit": {
          "format": "int32",
          "type": "integer"
        },
        "spamChatBurst": {
          "format": "int32",
          "type": "integer"
        },
        "spamChatDuration": {
          "format": "int64",
          "type": "integer"
        },
        "spamMuteDuration": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "models.Dictionary": {
      "properties": {
        "id": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "parentId": {
          "type": "string"
        },
        "word": {
          "type": "string"
        },
        "wordType": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "namespace",
        "word",
        "wordType"
      ]
    },
    "models.DictionaryChild": {
      "properties": {
        "id": {
          "type": "string"
        },
        "word": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "word"
      ]
    },
    "models.DictionaryExport": {
      "properties": {
        "dictionaries": {
          "items": {
            "$ref": "#/definitions/models.DictionaryExportItem"
          },
          "type": "array"
        }
      },
      "required": [
        "dictionaries"
      ]
    },
    "models.DictionaryExportItem": {
      "properties": {
        "falseNegative": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "falsePositive": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "word": {
          "type": "string"
        }
      },
      "required": [
        "word"
      ]
    },
    "models.DictionaryGroup": {
      "properties": {
        "count": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "count",
        "name"
      ]
    },
    "models.DictionaryImportResult": {
      "properties": {
        "words": {
          "$ref": "#/definitions/models.DictionaryWordChanges"
        }
      },
      "required": [
        "words"
      ]
    },
    "models.DictionaryInsertBulkRequest": {
      "properties": {
        "dictionaries": {
          "items": {
            "$ref": "#/definitions/models.DictionaryInsertRequest"
          },
          "type": "array"
        }
      },
      "required": [
        "dictionaries"
      ]
    },
    "models.DictionaryInsertRequest": {
      "properties": {
        "falseNegative": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "falsePositive": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "word": {
          "type": "string"
        },
        "wordType": {
          "type": "string"
        }
      },
      "required": [
        "falseNegative",
        "falsePositive",
        "word",
        "wordType"
      ]
    },
    "models.DictionaryQueryResult": {
      "properties": {
        "data": {
          "items": {
            "$ref": "#/definitions/models.DictionaryWithChildren"
          },
          "type": "array"
        },
        "next": {
          "type": "string"
        },
        "previous": {
          "type": "string"
        }
      },
      "required": [
        "data",
        "next",
        "previous"
      ]
    },
    "models.DictionaryUpdateRequest": {
      "properties": {
        "falseNegative": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "falsePositive": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "word": {
          "type": "string"
        },
        "wordType": {
          "type": "string"
        }
      },
      "required": [
        "falseNegative",
        "falsePositive",
        "word",
        "wordType"
      ]
    },
    "models.DictionaryWithChildren": {
      "properties": {
        "falseNegatives": {
          "items": {
            "$ref": "#/definitions/models.DictionaryChild"
          },
          "type": "array"
        },
        "falsePositives": {
          "items": {
            "$ref": "#/definitions/models.DictionaryChild"
          },
          "type": "array"
        },
        "id": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "parentId": {
          "type": "string"
        },
        "word": {
          "type": "string"
        },
        "wordType": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "namespace",
        "word",
        "wordType"
      ]
    },
    "models.DictionaryWordChanges": {
      "properties": {
        "added": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "failed": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "ignored": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "replaced": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "unchanged": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "added",
        "failed",
        "ignored",
        "replaced",
        "unchanged"
      ]
    },
    "models.GetInboxCategoriesResponseItem": {
      "properties": {
        "enabled": {
          "type": "boolean",
          "x-omitempty": false
        },
        "expiresIn": {
          "format": "int64",
          "type": "integer"
        },
        "hook": {
          "$ref": "#/definitions/models.CategoryHook"
        },
        "jsonSchema": {
          "type": "object"
        },
        "name": {
          "type": "string"
        },
        "saveInbox": {
          "type": "boolean",
          "x-omitempty": false
        },
        "sendNotification": {
          "type": "boolean",
          "x-omitempty": false
        }
      },
      "required": [
        "enabled",
        "expiresIn",
        "name",
        "saveInbox",
        "sendNotification"
      ]
    },
    "models.GetInboxMessagesResponse": {
      "properties": {
        "data": {
          "items": {
            "$ref": "#/definitions/models.GetInboxMessagesResponseData"
          },
          "type": "array"
        },
        "next": {
          "type": "string"
        },
        "previous": {
          "type": "string"
        }
      },
      "required": [
        "data",
        "next",
        "previous"
      ]
    },
    "models.GetInboxMessagesResponseData": {
      "properties": {
        "category": {
          "type": "string"
        },
        "createdAt": {
          "format": "int64",
          "type": "integer"
        },
        "expiredAt": {
          "format": "int64",
          "type": "integer"
        },
        "id": {
          "type": "string"
        },
        "message": {
          "type": "object"
        },
        "scope": {
          "enum": [
            "NAMESPACE",
            "USER"
          ],
          "type": "string"
        },
        "senderId": {
          "type": "string"
        },
        "status": {
          "enum": [
            "DRAFT",
            "SENT",
            "UNSENT"
          ],
          "type": "string"
        },
        "updatedAt": {
          "format": "int64",
          "type": "integer"
        },
        "userIds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "createdAt",
        "expiredAt",
        "id",
        "scope",
        "senderId",
        "status",
        "updatedAt"
      ]
    },
    "models.GetInboxStatsResponse": {
      "properties": {
        "data": {
          "items": {
            "$ref": "#/definitions/models.MessageStats"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ]
    },
    "models.GetInboxUsersResponse": {
      "properties": {
        "data": {
          "items": {
            "$ref": "#/definitions/models.UserInbox"
          },
          "type": "array"
        },
        "next": {
          "type": "string"
        },
        "previous": {
          "type": "string"
        }
      },
      "required": [
        "data",
        "next",
        "previous"
      ]
    },
    "models.ImportConfigResponse": {
      "properties": {
        "failedConfigs": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "ignoredConfigs": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "newConfigs": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "replacedConfigs": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "failedConfigs",
        "ignoredConfigs",
        "newConfigs",
        "replacedConfigs"
      ]
    },
    "models.JSONSchemaType": {
      "type": "object"
    },
    "models.MessageRequest": {
      "properties": {
        "message": {
          "type": "string"
        },
        "timestamp": {
          "format": "int64",
          "type": "integer"
        },
        "topicId": {
          "type": "string"
        },
        "topicType": {
          "enum": [
            "GROUP",
            "PERSONAL"
          ],
          "type": "string"
        },
        "userId": {
          "type": "string"
        }
      },
      "required": [
        "message"
      ]
    },
    "models.MessageResultWithAttributes": {
      "properties": {
        "action": {
          "type": "string"
        },
        "attributes": {
          "type": "object"
        },
        "cencoredWords": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "classifications": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "finalMessage": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "referenceId": {
          "type": "string"
        },
        "timestamp": {
          "format": "int64",
          "type": "integer"
        }
      },
      "required": [
        "action",
        "finalMessage",
        "id",
        "timestamp"
      ]
    },
    "models.MessageStats": {
      "properties": {
        "id": {
          "type": "string"
        },
        "messageRead": {
          "format": "int32",
          "type": "integer"
        },
        "messageStored": {
          "format": "int32",
          "type": "integer"
        },
        "notificationSent": {
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [
        "id",
        "messageRead",
        "messageStored",
        "notificationSent"
      ]
    },
    "models.Pagination": {
      "properties": {
        "next": {
          "type": "string"
        },
        "previous": {
          "type": "string"
        }
      },
      "required": [
        "next",
        "previous"
      ]
    },
    "models.PublicBanTopicMembersRequest": {
      "properties": {
        "userIDs": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "userIDs"
      ]
    },
    "models.PublicBanTopicMembersResponse": {
      "properties": {
        "userIDs": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "userIDs"
      ]
    },
    "models.PublicConfigResponse": {
      "properties": {
        "chatRateLimitBurst": {
          "format": "int32",
          "type": "integer"
        },
        "chatRateLimitDuration": {
          "format": "int64",
          "type": "integer"
        },
        "enablePmSendPlatformId": {
          "type": "boolean",
          "x-omitempty": false
        },
        "generalRateLimitBurst": {
          "format": "int32",
          "type": "integer"
        },
        "generalRateLimitDuration": {
          "format": "int64",
          "type": "integer"
        },
        "maxChatMessageLength": {
          "format": "int32",
          "type": "integer"
        },
        "spamChatBurst": {
          "format": "int32",
          "type": "integer"
        },
        "spamChatDuration": {
          "format": "int64",
          "type": "integer"
        },
        "spamMuteDuration": {
          "format": "int64",
          "type": "integer"
        }
      },
      "required": [
        "chatRateLimitBurst",
        "chatRateLimitDuration",
        "generalRateLimitBurst",
        "generalRateLimitDuration",
        "maxChatMessageLength",
        "spamChatBurst",
        "spamChatDuration",
        "spamMuteDuration"
      ]
    },
    "models.PublicUnbanTopicMembersRequest": {
      "properties": {
        "userIDs": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "userIDs"
      ]
    },
    "models.PublicUnbanTopicMembersResponse": {
      "properties": {
        "userIDs": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "userIDs"
      ]
    },
    "models.SaveInboxMessageRequest": {
      "properties": {
        "category": {
          "type": "string"
        },
        "expiredAt": {
          "format": "int64",
          "type": "integer"
        },
        "message": {
          "type": "object"
        },
        "scope": {
          "enum": [
            "NAMESPACE",
            "USER"
          ],
          "type": "string"
        },
        "status": {
          "enum": [
            "DRAFT",
            "SENT"
          ],
          "type": "string"
        },
        "userIds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "expiredAt",
        "message",
        "scope",
        "status",
        "userIds"
      ]
    },
    "models.SaveInboxMessageResponse": {
      "properties": {
        "category": {
          "type": "string"
        },
        "expiredAt": {
          "format": "int64",
          "type": "integer"
        },
        "id": {
          "type": "string"
        },
        "message": {
          "type": "object"
        },
        "scope": {
          "enum": [
            "NAMESPACE",
            "USER"
          ],
          "type": "string"
        },
        "status": {
          "enum": [
            "DRAFT",
            "SENT",
            "UNSENT"
          ],
          "type": "string"
        },
        "userIDs": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "expiredAt",
        "id",
        "scope",
        "status"
      ]
    },
    "models.SendInboxMessageRequest": {},
    "models.SendInboxMessageResponse": {},
    "models.TopicInfo": {
      "properties": {
        "createdAt": {
          "format": "int64",
          "type": "integer"
        },
        "deletedAt": {
          "format": "int64",
          "type": "integer"
        },
        "id": {
          "type": "string"
        },
        "members": {
          "items": {
            "$ref": "#/definitions/topic.InfoMember"
          },
          "type": "array"
        },
        "name": {
          "type": "string"
        },
        "subType": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "required": [
        "createdAt",
        "id",
        "name",
        "subType",
        "type"
      ]
    },
    "models.TopicLogItem": {
      "properties": {
        "createdAt": {
          "format": "int64",
          "type": "integer"
        },
        "id": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "senderId": {
          "type": "string"
        },
        "topicId": {
          "type": "string"
        },
        "type": {
          "enum": [
            "TOPIC_CREATE",
            "TOPIC_DELETE",
            "TOPIC_JOIN",
            "TOPIC_LEAVE"
          ],
          "type": "string"
        },
        "userId": {
          "type": "string"
        }
      },
      "required": [
        "createdAt",
        "id",
        "message",
        "senderId",
        "topicId",
        "type",
        "userId"
      ]
    },
    "models.TopicLogWithPaginationResponse": {
      "properties": {
        "data": {
          "items": {
            "$ref": "#/definitions/models.TopicLogItem"
          },
          "type": "array"
        },
        "paging": {
          "$ref": "#/definitions/models.Pagination"
        }
      },
      "required": [
        "data",
        "paging"
      ]
    },
    "models.TopicMemberResponse": {
      "properties": {
        "isAdmin": {
          "type": "boolean",
          "x-omitempty": false
        },
        "isBanned": {
          "type": "boolean",
          "x-omitempty": false
        },
        "shardId": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        }
      },
      "required": [
        "isAdmin",
        "isBanned",
        "shardId",
        "userId"
      ]
    },
    "models.TopicMemberWithPaginationResponse": {
      "properties": {
        "data": {
          "items": {
            "$ref": "#/definitions/models.TopicMemberResponse"
          },
          "type": "array"
        },
        "paging": {
          "$ref": "#/definitions/models.Pagination"
        },
        "totalData": {
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [
        "data",
        "paging",
        "totalData"
      ]
    },
    "models.TopicResponse": {
      "properties": {
        "createdAt": {
          "format": "int64",
          "type": "integer"
        },
        "createdBy": {
          "type": "string"
        },
        "lastMessageAt": {
          "format": "int64",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "topicId": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "required": [
        "createdAt",
        "createdBy",
        "lastMessageAt",
        "name",
        "namespace",
        "topicId",
        "type"
      ]
    },
    "models.UnbanTopicMemberParam": {
      "properties": {
        "userIds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "userIds"
      ]
    },
    "models.UnbanTopicMemberResult": {
      "properties": {
        "userIds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "userIds"
      ]
    },
    "models.UnsendInboxMessageRequest": {
      "properties": {
        "userIds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "userIds"
      ]
    },
    "models.UnsendInboxMessageResponse": {},
    "models.UpdateInboxCategoryRequest": {
      "properties": {
        "enabled": {
          "type": "boolean",
          "x-omitempty": false
        },
        "expiresIn": {
          "format": "int64",
          "type": "integer"
        },
        "hook": {
          "$ref": "#/definitions/models.CategoryHook"
        },
        "jsonSchema": {
          "type": "object"
        },
        "saveInbox": {
          "type": "boolean",
          "x-omitempty": false
        },
        "sendNotification": {
          "type": "boolean",
          "x-omitempty": false
        }
      },
      "required": [
        "enabled",
        "expiresIn",
        "hook",
        "saveInbox",
        "sendNotification"
      ]
    },
    "models.UpdateInboxMessageRequest": {
      "properties": {
        "expiredAt": {
          "format": "int64",
          "type": "integer"
        },
        "message": {
          "type": "object"
        },
        "scope": {
          "enum": [
            "NAMESPACE",
            "USER"
          ],
          "type": "string"
        },
        "userIds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "expiredAt",
        "message",
        "scope",
        "userIds"
      ]
    },
    "models.UserInbox": {
      "properties": {
        "keep": {
          "type": "boolean",
          "x-omitempty": false
        },
        "readAt": {
          "format": "int64",
          "type": "integer"
        },
        "userId": {
          "type": "string"
        }
      },
      "required": [
        "keep",
        "readAt",
        "userId"
      ]
    },
    "response.Error": {
      "properties": {
        "errorCode": {
          "format": "int32",
          "type": "integer"
        },
        "errorMessage": {
          "type": "string"
        }
      },
      "required": [
        "errorCode",
        "errorMessage"
      ]
    },
    "restapi.ErrorResponseBody": {
      "properties": {
        "ErrorCode": {
          "format": "int32",
          "type": "integer"
        },
        "ErrorMessage": {
          "type": "string"
        }
      },
      "required": [
        "ErrorCode",
        "ErrorMessage"
      ]
    },
    "topic.InfoMember": {
      "properties": {
        "leftAt": {
          "format": "int64",
          "type": "integer"
        },
        "userId": {
          "type": "string"
        }
      },
      "required": [
        "userId"
      ]
    }
  },
  "x-docs": {
    "alias": "chat",
    "host": "https://stage.accelbyte.io",
    "path": "/chat/apidocs/api.json"
  },
  "x-messages": [
    {
      "Attributes": [
        "message"
      ],
      "Code": "20000",
      "CodeName": "InternalServerError",
      "Section": "general",
      "Service": "general",
      "Text": "{{message}}"
    },
    {
      "Attributes": [
        "action",
        "details",
        "reason",
        "userID"
      ],
      "Code": "20000",
      "CodeName": "InternalServerErrorV1",
      "Section": "general",
      "Service": "general",
      "Text": "unable to {{action}}: {{reason}}, userID: {{userID}}, details: {{details}}"
    },
    {
      "Attributes": [],
      "Code": "20001",
      "CodeName": "UnauthorizedAccess",
      "Section": "general",
      "Service": "general",
      "Text": "unauthorized access"
    },
    {
      "Attributes": [
        "action",
        "details",
        "reason",
        "userID"
      ],
      "Code": "20002",
      "CodeName": "ValidationError",
      "Section": "general",
      "Service": "general",
      "Text": "unable to {{action}}: {{reason}}, userID: {{userID}}, details: {{details}}"
    },
    {
      "Attributes": [
        "message"
      ],
      "Code": "20002",
      "CodeName": "ValidationErrorV1",
      "Section": "general",
      "Service": "general",
      "Text": "{{message}}"
    },
    {
      "Attributes": [],
      "Code": "20003",
      "CodeName": "ForbiddenAccess",
      "Section": "general",
      "Service": "general",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "20007",
      "CodeName": "TooManyRequests",
      "Section": "general",
      "Service": "general",
      "Text": ""
    },
    {
      "Attributes": [
        "message"
      ],
      "Code": "20008",
      "CodeName": "UserNotFound",
      "Section": "general",
      "Service": "general",
      "Text": "{{message}}"
    },
    {
      "Attributes": [],
      "Code": "20013",
      "CodeName": "InsufficientPermissions",
      "Section": "general",
      "Service": "general",
      "Text": ""
    },
    {
      "Attributes": [
        "action",
        "details",
        "reason",
        "userID"
      ],
      "Code": "20019",
      "CodeName": "UnableToParseRequestBody",
      "Section": "general",
      "Service": "general",
      "Text": "unable to {{action}}: {{reason}}, userID: {{userID}}, details: {{details}}"
    },
    {
      "Attributes": [
        "message"
      ],
      "Code": "20021",
      "CodeName": "InvalidPaginationParameters",
      "Section": "general",
      "Service": "general",
      "Text": "{{message}}"
    },
    {
      "Attributes": [],
      "Code": "20022",
      "CodeName": "TokenIsNotUserToken",
      "Section": "general",
      "Service": "general",
      "Text": ""
    },
    {
      "Attributes": [
        "message"
      ],
      "Code": "20023",
      "CodeName": "UnableWriteResponse",
      "Section": "general",
      "Service": "general",
      "Text": "{{message}}"
    },
    {
      "Attributes": [
        "message"
      ],
      "Code": "20024",
      "CodeName": "DatabaseError",
      "Section": "general",
      "Service": "general",
      "Text": "query failed: {{message}}"
    },
    {
      "Attributes": [],
      "Code": "20025",
      "CodeName": "InvalidRequestBody",
      "Section": "general",
      "Service": "general",
      "Text": "invalid request body, please check the documentation"
    },
    {
      "Attributes": [
        "message"
      ],
      "Code": "51001",
      "CodeName": "ChatConnectionUnableToUpgrade",
      "Section": "chat connection",
      "Service": "chat",
      "Text": "{{message}}"
    },
    {
      "Attributes": [],
      "Code": "51002",
      "CodeName": "ChatConnectionUnableToRegisterUser",
      "Section": "chat connection",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "51003",
      "CodeName": "ChatConnectionSuccessRegisterUser",
      "Section": "chat connection",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "51004",
      "CodeName": "ChatConnectionSuccessUnregisterUser",
      "Section": "chat connection",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [
        "message"
      ],
      "Code": "51005",
      "CodeName": "ChatConnectionMultipleLoginAttempt",
      "Section": "chat connection",
      "Service": "chat",
      "Text": "{{message}}"
    },
    {
      "Attributes": [
        "message"
      ],
      "Code": "51006",
      "CodeName": "ChatConnectionUnableCheckConnectedUser",
      "Section": "chat connection",
      "Service": "chat",
      "Text": "{{message}}"
    },
    {
      "Attributes": [],
      "Code": "51007",
      "CodeName": "ChatConnectionUnableToValidateSession",
      "Section": "chat connection",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "51008",
      "CodeName": "ChatConnectionInvalidSession",
      "Section": "chat connection",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "51009",
      "CodeName": "ChatConnectionUnableToGetBlockedPlayer",
      "Section": "chat connection",
      "Service": "chat",
      "Text": "unable to get blocked player from storage"
    },
    {
      "Attributes": [],
      "Code": "510010",
      "CodeName": "ChatConnectionUnableToPushUserStatus",
      "Section": "chat connection",
      "Service": "chat",
      "Text": "unable to push user status"
    },
    {
      "Attributes": [],
      "Code": "510011",
      "CodeName": "ChatConnectionUnableToQueryConfig",
      "Section": "chat connection",
      "Service": "chat",
      "Text": "unable to connect user, unable to query config"
    },
    {
      "Attributes": [],
      "Code": "510012",
      "CodeName": "ChatConnectionCCULimitReached",
      "Section": "chat connection",
      "Service": "chat",
      "Text": "unable to connect user, because ccu limit reached"
    },
    {
      "Attributes": [],
      "Code": "510013",
      "CodeName": "ChatConnectionUnableToGetBannedAtTopics",
      "Section": "chat connection",
      "Service": "chat",
      "Text": "unable to get banned at topics"
    },
    {
      "Attributes": [],
      "Code": "510021",
      "CodeName": "ChatStopConnectionUnableToRemoveUserFromShard",
      "Section": "chat connection",
      "Service": "chat",
      "Text": "unable to remove user from shard"
    },
    {
      "Attributes": [],
      "Code": "510031",
      "CodeName": "ChatProcessCommandUnableGetUserRegistry",
      "Section": "chat connection",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "510050",
      "CodeName": "GetNamespaceConfigSuccess",
      "Section": "chat connection",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "510051",
      "CodeName": "GetNamespaceConfigDBError",
      "Section": "chat connection",
      "Service": "chat",
      "Text": "unable to query config to DB"
    },
    {
      "Attributes": [],
      "Code": "510052",
      "CodeName": "UpdateNamespaceConfigSuccess",
      "Section": "chat connection",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "510053",
      "CodeName": "UpdateNamespaceConfigBadRequest",
      "Section": "chat connection",
      "Service": "chat",
      "Text": "unable to parse request body"
    },
    {
      "Attributes": [
        "message"
      ],
      "Code": "510054",
      "CodeName": "UpdateNamespaceConfigValidationError",
      "Section": "chat connection",
      "Service": "chat",
      "Text": "{{message}}"
    },
    {
      "Attributes": [],
      "Code": "510055",
      "CodeName": "UpdateNamespaceConfigInternalError",
      "Section": "chat connection",
      "Service": "chat",
      "Text": "unable to update namespace config"
    },
    {
      "Attributes": [],
      "Code": "510056",
      "CodeName": "ExportNamespaceConfigWriteJsonError",
      "Section": "chat connection",
      "Service": "chat",
      "Text": "unable to write config to json file"
    },
    {
      "Attributes": [],
      "Code": "510057",
      "CodeName": "ExportNamespaceConfigSuccess",
      "Section": "chat connection",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "510058",
      "CodeName": "ImportNamespaceConfigSuccess",
      "Section": "chat connection",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "510059",
      "CodeName": "UpdateNamespaceConfigFilterGrpcError",
      "Section": "chat connection",
      "Service": "chat",
      "Text": "unable to connect to grpc target"
    },
    {
      "Attributes": [],
      "Code": "510061",
      "CodeName": "UpdateNamespaceConfigFilterCsmError",
      "Section": "chat connection",
      "Service": "chat",
      "Text": "unable to get response from csm service."
    },
    {
      "Attributes": [],
      "Code": "510062",
      "CodeName": "UpdateNamespaceConfigFilterCsmUrlError",
      "Section": "chat connection",
      "Service": "chat",
      "Text": "missing service URL. please check the csm service."
    },
    {
      "Attributes": [
        "message"
      ],
      "Code": "510063",
      "CodeName": "UpdateNamespaceConfigFilterCsmUrlSchemeError",
      "Section": "chat connection",
      "Service": "chat",
      "Text": "{{message}}"
    },
    {
      "Attributes": [],
      "Code": "510100",
      "CodeName": "CreateTopicSuccess",
      "Section": "create topic",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [
        "message"
      ],
      "Code": "510101",
      "CodeName": "CreateTopicInvalidRequestBody",
      "Section": "create topic",
      "Service": "chat",
      "Text": "{{message}}"
    },
    {
      "Attributes": [
        "message"
      ],
      "Code": "510102",
      "CodeName": "CreateTopicAlreadyExist",
      "Section": "create topic",
      "Service": "chat",
      "Text": "{{message}}"
    },
    {
      "Attributes": [],
      "Code": "510103",
      "CodeName": "CreateTopicUnableSaveTopic",
      "Section": "create topic",
      "Service": "chat",
      "Text": "unable to save new topic"
    },
    {
      "Attributes": [
        "message"
      ],
      "Code": "510104",
      "CodeName": "CreateTopicUnableGetChatConfig",
      "Section": "create topic",
      "Service": "chat",
      "Text": "{{message}}"
    },
    {
      "Attributes": [
        "message"
      ],
      "Code": "510105",
      "CodeName": "CreateTopicExceedShardLimit",
      "Section": "create topic",
      "Service": "chat",
      "Text": "{{message}}"
    },
    {
      "Attributes": [
        "message"
      ],
      "Code": "510106",
      "CodeName": "CreateTopicCreateTopicFromAPI",
      "Section": "create topic",
      "Service": "chat",
      "Text": "{{message}}"
    },
    {
      "Attributes": [],
      "Code": "510107",
      "CodeName": "CreateTopicUnableAddUserToShard",
      "Section": "create topic",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "510109",
      "CodeName": "CreateTopicCannotCreatePersonalTopic",
      "Section": "create topic",
      "Service": "chat",
      "Text": "cannot create personal topic"
    },
    {
      "Attributes": [],
      "Code": "510110",
      "CodeName": "CreateTopicInvalidRequester",
      "Section": "create topic",
      "Service": "chat",
      "Text": "requester invalid: not found"
    },
    {
      "Attributes": [],
      "Code": "510111",
      "CodeName": "CreateTopicValidationPersonalTopicNeedTwoMember",
      "Section": "create topic",
      "Service": "chat",
      "Text": "PERSONAL topic need exactly 2 members"
    },
    {
      "Attributes": [],
      "Code": "510112",
      "CodeName": "CreateTopicValidationPersonalTopicRequesterNeedInMember",
      "Section": "create topic",
      "Service": "chat",
      "Text": "PERSONAL topic need members with requester id"
    },
    {
      "Attributes": [],
      "Code": "510113",
      "CodeName": "CreateTopicValidationPersonalTopicUnableToCheckExistingTopic",
      "Section": "create topic",
      "Service": "chat",
      "Text": "unable to check existing personal topic"
    },
    {
      "Attributes": [
        "message"
      ],
      "Code": "510114",
      "CodeName": "CreateTopicValidationPersonalTopicAlreadyExist",
      "Section": "create topic",
      "Service": "chat",
      "Text": "{{message}}"
    },
    {
      "Attributes": [],
      "Code": "510115",
      "CodeName": "CreateTopicValidationGroupTopicCannotHaveZeroAdmin",
      "Section": "create topic",
      "Service": "chat",
      "Text": "PERSONAL topic need members with requester id"
    },
    {
      "Attributes": [
        "message"
      ],
      "Code": "510116",
      "CodeName": "CreateTopicValidationGroupTopicAdminNotInMember",
      "Section": "create topic",
      "Service": "chat",
      "Text": "{{message}}"
    },
    {
      "Attributes": [],
      "Code": "510117",
      "CodeName": "CreateTopicValidationGroupTopicShardLimitExceedLimit",
      "Section": "create topic",
      "Service": "chat",
      "Text": "shard limit exceeding the basic"
    },
    {
      "Attributes": [],
      "Code": "510118",
      "CodeName": "CreateTopicValidationGroupTopicUnableGetConfig",
      "Section": "create topic",
      "Service": "chat",
      "Text": "unable get config"
    },
    {
      "Attributes": [],
      "Code": "510119",
      "CodeName": "CreateTopicUnableSaveTopicShard",
      "Section": "create topic",
      "Service": "chat",
      "Text": "unable to save new topic shard"
    },
    {
      "Attributes": [
        "message"
      ],
      "Code": "510120",
      "CodeName": "CreateTopicUnableSaveAddUserToTopic",
      "Section": "create topic",
      "Service": "chat",
      "Text": "{{message}}"
    },
    {
      "Attributes": [],
      "Code": "510121",
      "CodeName": "CreateTopicUnableSaveAddUserToShard",
      "Section": "create topic",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "510122",
      "CodeName": "CreateTopicManualOperationDisabled",
      "Section": "create topic",
      "Service": "chat",
      "Text": "unable to create topic manually. operation disabled"
    },
    {
      "Attributes": [],
      "Code": "510130",
      "CodeName": "UpdateTopicByTopicNameSuccess",
      "Section": "create topic",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [
        "message"
      ],
      "Code": "510131",
      "CodeName": "UpdateTopicByTopicNameInvalidRequestBody",
      "Section": "create topic",
      "Service": "chat",
      "Text": "{{message}}"
    },
    {
      "Attributes": [
        "message"
      ],
      "Code": "510132",
      "CodeName": "UpdateTopicByTopicNameUnableUpdateTopic",
      "Section": "create topic",
      "Service": "chat",
      "Text": "{{message}}"
    },
    {
      "Attributes": [
        "message"
      ],
      "Code": "510133",
      "CodeName": "UpdateTopicByTopicNameNotFound",
      "Section": "create topic",
      "Service": "chat",
      "Text": "{{message}}"
    },
    {
      "Attributes": [
        "message"
      ],
      "Code": "510134",
      "CodeName": "UpdateTopicUnableWriteResponse",
      "Section": "create topic",
      "Service": "chat",
      "Text": "{{message}}"
    },
    {
      "Attributes": [],
      "Code": "510135",
      "CodeName": "UpdateTopicInvalidRequester",
      "Section": "create topic",
      "Service": "chat",
      "Text": "requester invalid: not found"
    },
    {
      "Attributes": [],
      "Code": "510136",
      "CodeName": "UpdateTopicUnableSaveUpdatedTopic",
      "Section": "create topic",
      "Service": "chat",
      "Text": "unable to save updated topic"
    },
    {
      "Attributes": [],
      "Code": "510137",
      "CodeName": "UpdateTopicUnableLoadTopicMember",
      "Section": "create topic",
      "Service": "chat",
      "Text": "unable to load topic member"
    },
    {
      "Attributes": [],
      "Code": "510140",
      "CodeName": "DeleteTopicByTopicNameSuccess",
      "Section": "create topic",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [
        "message"
      ],
      "Code": "510141",
      "CodeName": "DeleteTopicByTopicNameInvalidRequestBody",
      "Section": "create topic",
      "Service": "chat",
      "Text": "{{message}}"
    },
    {
      "Attributes": [
        "message"
      ],
      "Code": "510142",
      "CodeName": "DeleteTopicByTopicNameUnableDeleteTopic",
      "Section": "create topic",
      "Service": "chat",
      "Text": "{{message}}"
    },
    {
      "Attributes": [
        "message"
      ],
      "Code": "510143",
      "CodeName": "DeleteTopicByTopicNameNotFound",
      "Section": "create topic",
      "Service": "chat",
      "Text": "{{message}}"
    },
    {
      "Attributes": [
        "message"
      ],
      "Code": "510144",
      "CodeName": "DeleteTopicUnableWriteResponse",
      "Section": "create topic",
      "Service": "chat",
      "Text": "{{message}}"
    },
    {
      "Attributes": [],
      "Code": "510145",
      "CodeName": "DeleteTopicInvalidRequester",
      "Section": "create topic",
      "Service": "chat",
      "Text": "requester invalid: not found"
    },
    {
      "Attributes": [],
      "Code": "510146",
      "CodeName": "DeleteTopicUnableDeleteTopic",
      "Section": "create topic",
      "Service": "chat",
      "Text": "unable to save deleted topic"
    },
    {
      "Attributes": [],
      "Code": "510147",
      "CodeName": "DeleteTopicUnableLoadTopic",
      "Section": "create topic",
      "Service": "chat",
      "Text": "unable to load topic"
    },
    {
      "Attributes": [],
      "Code": "510148",
      "CodeName": "DeleteTopicUnableLoadTopicMember",
      "Section": "create topic",
      "Service": "chat",
      "Text": "unable to load topic member"
    },
    {
      "Attributes": [],
      "Code": "510149",
      "CodeName": "DeleteTopicUnableRemoveUserFromTopic",
      "Section": "create topic",
      "Service": "chat",
      "Text": "unable to remove user from topic"
    },
    {
      "Attributes": [],
      "Code": "510410",
      "CodeName": "LoadTopicsSuccess",
      "Section": "load topic",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "510411",
      "CodeName": "LoadTopicsUnableWriteResponse",
      "Section": "load topic",
      "Service": "chat",
      "Text": "cannot write respond"
    },
    {
      "Attributes": [],
      "Code": "510412",
      "CodeName": "LoadTopicsInvalidRequester",
      "Section": "load topic",
      "Service": "chat",
      "Text": "requester invalid: not found"
    },
    {
      "Attributes": [],
      "Code": "510413",
      "CodeName": "LoadTopicsUnableLoadTopic",
      "Section": "load topic",
      "Service": "chat",
      "Text": "unable load topic"
    },
    {
      "Attributes": [],
      "Code": "510420",
      "CodeName": "LoadTopicByIdSuccess",
      "Section": "load topic",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "510421",
      "CodeName": "LoadTopicByIdUnableWriteResponse",
      "Section": "load topic",
      "Service": "chat",
      "Text": "cannot write respond"
    },
    {
      "Attributes": [],
      "Code": "510422",
      "CodeName": "LoadTopicByIdInvalidRequester",
      "Section": "load topic",
      "Service": "chat",
      "Text": "requester invalid: not found"
    },
    {
      "Attributes": [],
      "Code": "510423",
      "CodeName": "LoadTopicByIdUnableLoadTopic",
      "Section": "load topic",
      "Service": "chat",
      "Text": "unable load topic"
    },
    {
      "Attributes": [],
      "Code": "510424",
      "CodeName": "LoadTopicByIdUnableLoadTopicMembers",
      "Section": "load topic",
      "Service": "chat",
      "Text": "unable load topic members"
    },
    {
      "Attributes": [],
      "Code": "510430",
      "CodeName": "LoadTopicMembersSuccess",
      "Section": "load topic",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "510431",
      "CodeName": "LoadTopicMembersUnableWriteResponse",
      "Section": "load topic",
      "Service": "chat",
      "Text": "cannot write respond"
    },
    {
      "Attributes": [],
      "Code": "510432",
      "CodeName": "LoadTopicMembersUnableLoadTopicMembers",
      "Section": "load topic",
      "Service": "chat",
      "Text": "unable load topic members"
    },
    {
      "Attributes": [],
      "Code": "510440",
      "CodeName": "LoadTopicShardsSuccess",
      "Section": "load topic",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "510441",
      "CodeName": "LoadTopicShardsUnableWriteResponse",
      "Section": "load topic",
      "Service": "chat",
      "Text": "cannot write respond"
    },
    {
      "Attributes": [],
      "Code": "510450",
      "CodeName": "LoadUserTopicsSuccess",
      "Section": "load topic",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "510451",
      "CodeName": "LoadUserTopicsUnableWriteResponse",
      "Section": "load topic",
      "Service": "chat",
      "Text": "cannot write respond"
    },
    {
      "Attributes": [],
      "Code": "510452",
      "CodeName": "LoadUserTopicsUnableLoadTopic",
      "Section": "load topic",
      "Service": "chat",
      "Text": "unable load topic"
    },
    {
      "Attributes": [],
      "Code": "510453",
      "CodeName": "LoadUserTopicsUnableLoadTopicMembers",
      "Section": "load topic",
      "Service": "chat",
      "Text": "unable load topic members"
    },
    {
      "Attributes": [],
      "Code": "510460",
      "CodeName": "LoadPublicTopicsSuccess",
      "Section": "load topic",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "510461",
      "CodeName": "LoadPublicTopicsInvalidRequester",
      "Section": "load topic",
      "Service": "chat",
      "Text": "requester invalid: not found"
    },
    {
      "Attributes": [],
      "Code": "510462",
      "CodeName": "LoadPublicTopicsUnableLoadTopic",
      "Section": "load topic",
      "Service": "chat",
      "Text": "unable load topic"
    },
    {
      "Attributes": [],
      "Code": "510470",
      "CodeName": "LoadTopicsByReferenceSuccess",
      "Section": "load topic",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "510471",
      "CodeName": "LoadTopicsByReferenceUnableLoadTopic",
      "Section": "load topic",
      "Service": "chat",
      "Text": "unable load topic"
    },
    {
      "Attributes": [],
      "Code": "510480",
      "CodeName": "LoadPartyTopicsSuccess",
      "Section": "load topic",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "510481",
      "CodeName": "LoadPartyTopicsUnableLoadTopic",
      "Section": "load topic",
      "Service": "chat",
      "Text": "unable load topic"
    },
    {
      "Attributes": [],
      "Code": "510491",
      "CodeName": "IsMemberOfTopicUnableLoadTopicMembers",
      "Section": "load topic",
      "Service": "chat",
      "Text": "unable load topic members"
    },
    {
      "Attributes": [],
      "Code": "510492",
      "CodeName": "ValidateTopicAdminUnableToLoadDatabase",
      "Section": "load topic",
      "Service": "chat",
      "Text": "unable to validate topic admin"
    },
    {
      "Attributes": [],
      "Code": "510493",
      "CodeName": "ValidatePersonalTopicUnableToLoadDatabase",
      "Section": "load topic",
      "Service": "chat",
      "Text": "unable to validate personal topic"
    },
    {
      "Attributes": [],
      "Code": "510510",
      "CodeName": "LoadChannelTopicsSuccess",
      "Section": "load channel topic",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "510511",
      "CodeName": "LoadChannelTopicsUnableWriteResponse",
      "Section": "load channel topic",
      "Service": "chat",
      "Text": "cannot write respond"
    },
    {
      "Attributes": [],
      "Code": "510512",
      "CodeName": "LoadChannelTopicsUnableToLoadChannelTopic",
      "Section": "load channel topic",
      "Service": "chat",
      "Text": "unable to load channel topic"
    },
    {
      "Attributes": [],
      "Code": "510513",
      "CodeName": "LoadChannelTopicsUnableToCountChannelTopic",
      "Section": "load channel topic",
      "Service": "chat",
      "Text": "unable to load channel topic"
    },
    {
      "Attributes": [],
      "Code": "510521",
      "CodeName": "LoadChannelTopicSummaryUnableWriteResponse",
      "Section": "load channel topic",
      "Service": "chat",
      "Text": "cannot write respond"
    },
    {
      "Attributes": [],
      "Code": "510530",
      "CodeName": "LoadChannelTopicByIdSuccess",
      "Section": "load channel topic",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "510531",
      "CodeName": "LoadChannelTopicByIdUnableWriteResponse",
      "Section": "load channel topic",
      "Service": "chat",
      "Text": "cannot write respond"
    },
    {
      "Attributes": [],
      "Code": "510532",
      "CodeName": "LoadChannelTopicByIdNotFound",
      "Section": "load channel topic",
      "Service": "chat",
      "Text": "not found"
    },
    {
      "Attributes": [],
      "Code": "510533",
      "CodeName": "LoadChannelTopicByIdUnableToLoadChannelTopic",
      "Section": "load channel topic",
      "Service": "chat",
      "Text": "unable to load channel topic"
    },
    {
      "Attributes": [],
      "Code": "510540",
      "CodeName": "LoadChannelTopicMembersSuccess",
      "Section": "load channel topic",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "510541",
      "CodeName": "LoadChannelTopicMembersUnableWriteResponse",
      "Section": "load channel topic",
      "Service": "chat",
      "Text": "cannot write respond"
    },
    {
      "Attributes": [],
      "Code": "510542",
      "CodeName": "LoadChannelTopicMembersUnableToLoadChannelTopicMember",
      "Section": "load channel topic",
      "Service": "chat",
      "Text": "unable to load channel topic members"
    },
    {
      "Attributes": [],
      "Code": "510543",
      "CodeName": "LoadChannelTopicMembersUnableToCountChannelTopicMember",
      "Section": "load channel topic",
      "Service": "chat",
      "Text": "unable to count channel topic members"
    },
    {
      "Attributes": [],
      "Code": "511100",
      "CodeName": "AddUserToTopicSuccess",
      "Section": "topic member add",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "511101",
      "CodeName": "AddUserToTopicUnableLoadTopic",
      "Section": "topic member add",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "511102",
      "CodeName": "AddUserToTopicCannotAddUserToPersonalTopic",
      "Section": "topic member add",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "511103",
      "CodeName": "AddUserToTopicUserAlreadyMember",
      "Section": "topic member add",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "511104",
      "CodeName": "AddUserToTopicUnableRestoreMember",
      "Section": "topic member add",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "511105",
      "CodeName": "AddUserToTopicUnableAddMember",
      "Section": "topic member add",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "511106",
      "CodeName": "AddUserToTopicUnableAddMemberToShard",
      "Section": "topic member add",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "511107",
      "CodeName": "AddUserToTopicUnableCheckExistingUser",
      "Section": "topic member add",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "511108",
      "CodeName": "AddUserToTopicInvalidRequestBody",
      "Section": "topic member add",
      "Service": "chat",
      "Text": "invalid request body"
    },
    {
      "Attributes": [],
      "Code": "511109",
      "CodeName": "AddUserToTopicUnableWriteResponse",
      "Section": "topic member add",
      "Service": "chat",
      "Text": "cannot write respond"
    },
    {
      "Attributes": [],
      "Code": "511110",
      "CodeName": "AddUserToTopicInvalidSender",
      "Section": "topic member add",
      "Service": "chat",
      "Text": "cannot write respond"
    },
    {
      "Attributes": [],
      "Code": "511120",
      "CodeName": "JoinTopicSuccess",
      "Section": "topic member add",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "511121",
      "CodeName": "JoinTopicUnableLoadTopic",
      "Section": "topic member add",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "511122",
      "CodeName": "JoinTopicCannotAddUserToPersonalTopic",
      "Section": "topic member add",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "511123",
      "CodeName": "JoinTopicUserAlreadyMember",
      "Section": "topic member add",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "511124",
      "CodeName": "JoinTopicUnableRestoreMember",
      "Section": "topic member add",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "511125",
      "CodeName": "JoinTopicUnableAddMember",
      "Section": "topic member add",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "511126",
      "CodeName": "JoinTopicUnableAddMemberToShard",
      "Section": "topic member add",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "511127",
      "CodeName": "JoinTopicUnableCheckExistingUser",
      "Section": "topic member add",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "511128",
      "CodeName": "JoinTopicCannotJoinPrivateTopic",
      "Section": "topic member add",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "511129",
      "CodeName": "JoinTopicInvalidSender",
      "Section": "topic member add",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "511210",
      "CodeName": "RemoveUserFromTopicSuccess",
      "Section": "topic member remove",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "511211",
      "CodeName": "RemoveUserFromTopicUnableLoadTopic",
      "Section": "topic member remove",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "511212",
      "CodeName": "RemoveUserFromTopicCannotRemoveUserFromPersonalTopic",
      "Section": "topic member remove",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "511213",
      "CodeName": "RemoveUserFromTopicUnableRemoveMember",
      "Section": "topic member remove",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "511214",
      "CodeName": "RemoveUserFromTopicUserNotMember",
      "Section": "topic member remove",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "511215",
      "CodeName": "RemoveUserFromTopicInvalidRequestBody",
      "Section": "topic member remove",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "511216",
      "CodeName": "RemoveUserFromTopicUnableWriteResponse",
      "Section": "topic member remove",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "511217",
      "CodeName": "RemoveUserFromTopicInvalidSender",
      "Section": "topic member remove",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "511218",
      "CodeName": "RemoveUserFromTopicCannotRemoveUserFromTeamTopic",
      "Section": "topic member remove",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "511220",
      "CodeName": "QuitTopicSuccess",
      "Section": "topic member remove",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "511221",
      "CodeName": "QuitTopicInvalidSender",
      "Section": "topic member remove",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "512000",
      "CodeName": "ChatSendMessageSuccessSendChat",
      "Section": "send chat message",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "512001",
      "CodeName": "ChatSendMessageUnableGetUserRegistry",
      "Section": "send chat message",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "512002",
      "CodeName": "ChatSendMessageSenderBanned",
      "Section": "send chat message",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "512003",
      "CodeName": "ChatSendMessageReceiverBanned",
      "Section": "send chat message",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "512004",
      "CodeName": "ChatSendMessageReceiverNotFound",
      "Section": "send chat message",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [
        "message"
      ],
      "Code": "512005",
      "CodeName": "ChatSendMessageUnableSaveChat",
      "Section": "send chat message",
      "Service": "chat",
      "Text": "{{message}}"
    },
    {
      "Attributes": [],
      "Code": "512006",
      "CodeName": "ChatSendMessageUnableGetBlocked",
      "Section": "send chat message",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "512007",
      "CodeName": "ChatSendMessageAdminCannotSendToPersonalTopic",
      "Section": "send chat message",
      "Service": "chat",
      "Text": "admin cannot send message to personal topic"
    },
    {
      "Attributes": [
        "message"
      ],
      "Code": "512008",
      "CodeName": "ChatSendMessageInvalidRequestBody",
      "Section": "send chat message",
      "Service": "chat",
      "Text": "{{message}}"
    },
    {
      "Attributes": [
        "message"
      ],
      "Code": "512009",
      "CodeName": "CreateTopicUnableWriteResponse",
      "Section": "send chat message",
      "Service": "chat",
      "Text": "{{message}}"
    },
    {
      "Attributes": [
        "message"
      ],
      "Code": "512010",
      "CodeName": "ChatSendMessageSenderUnauthorized",
      "Section": "send chat message",
      "Service": "chat",
      "Text": "{{message}}"
    },
    {
      "Attributes": [
        "message"
      ],
      "Code": "512011",
      "CodeName": "ChatSendMessageUnableGetMutedUser",
      "Section": "send chat message",
      "Service": "chat",
      "Text": "{{message}}"
    },
    {
      "Attributes": [
        "message"
      ],
      "Code": "512012",
      "CodeName": "ChatSendMessageUnableGetConfig",
      "Section": "send chat message",
      "Service": "chat",
      "Text": "{{message}}"
    },
    {
      "Attributes": [],
      "Code": "512013",
      "CodeName": "ChatSendMessageUnableGetSpamBurst",
      "Section": "send chat message",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "512014",
      "CodeName": "ChatSendMessageUnableSetMuteUser",
      "Section": "send chat message",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [
        "message"
      ],
      "Code": "512015",
      "CodeName": "ChatSendMessageUnableGetTopic",
      "Section": "send chat message",
      "Service": "chat",
      "Text": "{{message}}"
    },
    {
      "Attributes": [
        "message"
      ],
      "Code": "512016",
      "CodeName": "ChatSendMessageUnableGetTopicMember",
      "Section": "send chat message",
      "Service": "chat",
      "Text": "{{message}}"
    },
    {
      "Attributes": [
        "message"
      ],
      "Code": "512017",
      "CodeName": "ChatSendMessageSenderMuted",
      "Section": "send chat message",
      "Service": "chat",
      "Text": "{{message}}"
    },
    {
      "Attributes": [
        "message"
      ],
      "Code": "512018",
      "CodeName": "ChatSendMessageUnableGetShardTopicMember",
      "Section": "send chat message",
      "Service": "chat",
      "Text": "{{message}}"
    },
    {
      "Attributes": [
        "message"
      ],
      "Code": "512019",
      "CodeName": "ChatSendMessageSenderProfanitfyBlocked",
      "Section": "send chat message",
      "Service": "chat",
      "Text": "{{message}}"
    },
    {
      "Attributes": [],
      "Code": "512100",
      "CodeName": "ReadChatSuccess",
      "Section": "read chat message",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "512101",
      "CodeName": "ReadChatUnableSaveReadChatFlag",
      "Section": "read chat message",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "512102",
      "CodeName": "ReadChatUnableGetUserRegistry",
      "Section": "read chat message",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "512210",
      "CodeName": "UserLoadChatHistorySuccess",
      "Section": "load chat message",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "512211",
      "CodeName": "UserLoadChatHistorySenderIsMuted",
      "Section": "load chat message",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "512212",
      "CodeName": "UserLoadChatHistoryUnableCheckMutedUser",
      "Section": "load chat message",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "512213",
      "CodeName": "UserLoadChatHistorySenderNotAuthorized",
      "Section": "load chat message",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "512214",
      "CodeName": "UserLoadChatHistoryUnableGetUserRegistry",
      "Section": "load chat message",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "512215",
      "CodeName": "UserLoadChatHistorySenderBanned",
      "Section": "load chat message",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "512216",
      "CodeName": "UserLoadChatHistoryUnableLoadChatHistory",
      "Section": "load chat message",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "512217",
      "CodeName": "UserLoadChatHistorySenderNotMemberOfTopic",
      "Section": "load chat message",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "512218",
      "CodeName": "UserLoadChatHistorySenderNotMemberOfTopicInternalError",
      "Section": "load chat message",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "512221",
      "CodeName": "LoadChatHistoryTopicNotFound",
      "Section": "load chat message",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "512222",
      "CodeName": "LoadChatHistoryUnableLoadTopic",
      "Section": "load chat message",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "512223",
      "CodeName": "LoadChatHistoryUnableLoadChannelTopic",
      "Section": "load chat message",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "512224",
      "CodeName": "LoadChatHistoryUnableLoadChatHistory",
      "Section": "load chat message",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "512230",
      "CodeName": "PaginatedLoadChatHistorySuccess",
      "Section": "load chat message",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "512231",
      "CodeName": "PaginatedLoadChatHistoryTopicNotFound",
      "Section": "load chat message",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "512232",
      "CodeName": "PaginatedLoadChatHistoryUnableLoadTopic",
      "Section": "load chat message",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "512233",
      "CodeName": "PaginatedLoadChatHistoryUnableLoadChatTotalData",
      "Section": "load chat message",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "512234",
      "CodeName": "PaginatedLoadChatHistoryUnableLoadChatHistory",
      "Section": "load chat message",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "512310",
      "CodeName": "DeleteChatsuccess",
      "Section": "admin chat history",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "512311",
      "CodeName": "DeleteChatRecordNotFound",
      "Section": "admin chat history",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "512312",
      "CodeName": "DeleteChatInternalDatabaseError",
      "Section": "admin chat history",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "513110",
      "CodeName": "BanSuccess",
      "Section": "ban",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "513111",
      "CodeName": "BanUnableGetUserRegistry",
      "Section": "ban",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "513112",
      "CodeName": "BanUnableSaveBan",
      "Section": "ban",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [
        "message"
      ],
      "Code": "513113",
      "CodeName": "BanInvalidRequestBody",
      "Section": "ban",
      "Service": "chat",
      "Text": "{{message}}"
    },
    {
      "Attributes": [
        "message"
      ],
      "Code": "513114",
      "CodeName": "BanUnableWriteResponse",
      "Section": "ban",
      "Service": "chat",
      "Text": "{{message}}"
    },
    {
      "Attributes": [],
      "Code": "513115",
      "CodeName": "BanAlreadyBanned",
      "Section": "ban",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [
        "message"
      ],
      "Code": "513116",
      "CodeName": "BanUserNotMemberOfTopic",
      "Section": "ban",
      "Service": "chat",
      "Text": "{{message}}"
    },
    {
      "Attributes": [],
      "Code": "513117",
      "CodeName": "BanCannotBanPersonalTopic",
      "Section": "ban",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "513118",
      "CodeName": "BanUnableToBanUserFromShard",
      "Section": "ban",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "513119",
      "CodeName": "BanUnableToSendNotifToUser",
      "Section": "ban",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "513120",
      "CodeName": "BanUnableLoadTopic",
      "Section": "ban",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "513121",
      "CodeName": "BanUnableLoadTopicMember",
      "Section": "ban",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "513122",
      "CodeName": "BanUnableRemoveUserFromShard",
      "Section": "ban",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "513123",
      "CodeName": "BanUnableLoadShardMember",
      "Section": "ban",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "513130",
      "CodeName": "UnbanSuccess",
      "Section": "ban",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "513131",
      "CodeName": "UnbanUnableGetUserRegistry",
      "Section": "ban",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "513132",
      "CodeName": "UnbanUnableSaveUnban",
      "Section": "ban",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [
        "message"
      ],
      "Code": "513133",
      "CodeName": "UnbanInvalidRequestBody",
      "Section": "ban",
      "Service": "chat",
      "Text": "{{message}}"
    },
    {
      "Attributes": [
        "message"
      ],
      "Code": "513134",
      "CodeName": "UnbanUnableWriteResponse",
      "Section": "ban",
      "Service": "chat",
      "Text": "{{message}}"
    },
    {
      "Attributes": [
        "message"
      ],
      "Code": "513135",
      "CodeName": "UnbanUserNotMemberOfTopic",
      "Section": "ban",
      "Service": "chat",
      "Text": "{{message}}"
    },
    {
      "Attributes": [],
      "Code": "513136",
      "CodeName": "UnbanUnableToAddUserToShard",
      "Section": "ban",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "513137",
      "CodeName": "UnbanUnableToSendNotifToUser",
      "Section": "ban",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "513138",
      "CodeName": "UnbanUnableLoadTopic",
      "Section": "ban",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "513139",
      "CodeName": "UnbanUnableLoadTopicMember",
      "Section": "ban",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "513140",
      "CodeName": "UnbanCannotUnbanPersonalTopic",
      "Section": "ban",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [
        "message"
      ],
      "Code": "513141",
      "CodeName": "UnbanUserNotBanned",
      "Section": "ban",
      "Service": "chat",
      "Text": "{{message}}"
    },
    {
      "Attributes": [],
      "Code": "513210",
      "CodeName": "BlockSuccess",
      "Section": "block",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "513211",
      "CodeName": "BlockUnableGetUserRegistry",
      "Section": "block",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "513212",
      "CodeName": "BlockUnableSaveBlock",
      "Section": "block",
      "Service": "chat",
      "Text": "unable to block user"
    },
    {
      "Attributes": [],
      "Code": "513213",
      "CodeName": "BlockAlreadyBlocked",
      "Section": "block",
      "Service": "chat",
      "Text": "unable to block user: already blocked"
    },
    {
      "Attributes": [],
      "Code": "513220",
      "CodeName": "UnblockSuccess",
      "Section": "block",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "513221",
      "CodeName": "UnblockUnableGetUserRegistry",
      "Section": "block",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "513222",
      "CodeName": "UnblockUnableSaveUnblock",
      "Section": "block",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "513300",
      "CodeName": "MuteUserSuccess",
      "Section": "mute",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "513301",
      "CodeName": "MuteUserNotMember",
      "Section": "mute",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "513302",
      "CodeName": "MuteUserInternalError",
      "Section": "mute",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "513305",
      "CodeName": "UnmuteUserSuccess",
      "Section": "mute",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "513306",
      "CodeName": "UnmuteUserNotMember",
      "Section": "mute",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "513307",
      "CodeName": "UnmuteUserInternalError",
      "Section": "mute",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "513308",
      "CodeName": "UnmuteUserNotMuted",
      "Section": "mute",
      "Service": "chat",
      "Text": "user is not muted"
    },
    {
      "Attributes": [],
      "Code": "514110",
      "CodeName": "AddUserToAllActiveShardSuccess",
      "Section": "add user to shard",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "514111",
      "CodeName": "AddUserToAllActiveShardInvalidRequester",
      "Section": "add user to shard",
      "Service": "chat",
      "Text": "requester invalid: not found"
    },
    {
      "Attributes": [],
      "Code": "514112",
      "CodeName": "AddUserToAllActiveShardUnableLoadTopic",
      "Section": "add user to shard",
      "Service": "chat",
      "Text": "unable load topic"
    },
    {
      "Attributes": [
        "message"
      ],
      "Code": "514113",
      "CodeName": "AddUserToAllActiveShardUnableToAddUser",
      "Section": "add user to shard",
      "Service": "chat",
      "Text": "{{message}}"
    },
    {
      "Attributes": [],
      "Code": "514120",
      "CodeName": "AddUserToShardSuccess",
      "Section": "add user to shard",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "514121",
      "CodeName": "AddUserToShardUnableToAddUserToShard",
      "Section": "add user to shard",
      "Service": "chat",
      "Text": "unable to add user to shard"
    },
    {
      "Attributes": [],
      "Code": "514122",
      "CodeName": "AddUserToShardUnableLoadConfig",
      "Section": "add user to shard",
      "Service": "chat",
      "Text": "unable load topic"
    },
    {
      "Attributes": [],
      "Code": "514123",
      "CodeName": "AddUserToShardUnableLoadShardCapacity",
      "Section": "add user to shard",
      "Service": "chat",
      "Text": "unable load shard capacity"
    },
    {
      "Attributes": [],
      "Code": "514124",
      "CodeName": "AddUserToShardUnableSaveNewShard",
      "Section": "add user to shard",
      "Service": "chat",
      "Text": "unable create new shard"
    },
    {
      "Attributes": [],
      "Code": "514210",
      "CodeName": "RemoveUserFromAllShardSuccess",
      "Section": "remove user from shard",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "514211",
      "CodeName": "RemoveUserFromAllShardUnableToRemoveUser",
      "Section": "remove user from shard",
      "Service": "chat",
      "Text": "unable to remove user"
    },
    {
      "Attributes": [],
      "Code": "514220",
      "CodeName": "RemoveUserFromShardSuccess",
      "Section": "remove user from shard",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "514221",
      "CodeName": "RemoveUserFromShardUnableToRemoveUser",
      "Section": "remove user from shard",
      "Service": "chat",
      "Text": "unable to remove user"
    },
    {
      "Attributes": [],
      "Code": "514310",
      "CodeName": "CreateNewTopicShardSuccess",
      "Section": "create shard",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "514311",
      "CodeName": "CreateNewTopicShardUnableSaveNewShard",
      "Section": "create shard",
      "Service": "chat",
      "Text": "unable to save new shard"
    },
    {
      "Attributes": [],
      "Code": "514312",
      "CodeName": "CreateNewTopicShardUnableSaveCacheShard",
      "Section": "create shard",
      "Service": "chat",
      "Text": "unable to save cache shard"
    },
    {
      "Attributes": [],
      "Code": "514410",
      "CodeName": "LoadShardMembersSuccess",
      "Section": "load shard",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "514411",
      "CodeName": "LoadShardMembersUnableLoadData",
      "Section": "load shard",
      "Service": "chat",
      "Text": "unable load data"
    },
    {
      "Attributes": [],
      "Code": "514420",
      "CodeName": "LoadTopicShardCapacitySuccess",
      "Section": "load shard",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "514421",
      "CodeName": "LoadTopicShardCapacityUnableLoadData",
      "Section": "load shard",
      "Service": "chat",
      "Text": "unable load data"
    },
    {
      "Attributes": [],
      "Code": "514430",
      "CodeName": "LoadChannelTopicSummarySuccess",
      "Section": "load shard",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "514431",
      "CodeName": "LoadChannelTopicSummaryUnableLoadData",
      "Section": "load shard",
      "Service": "chat",
      "Text": "unable load data"
    },
    {
      "Attributes": [],
      "Code": "514440",
      "CodeName": "LoadChannelTopicShardsByIDSuccess",
      "Section": "load shard",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "514441",
      "CodeName": "LoadChannelTopicShardsByIDUnableLoadData",
      "Section": "load shard",
      "Service": "chat",
      "Text": "unable load data"
    },
    {
      "Attributes": [],
      "Code": "514450",
      "CodeName": "ProfanityReadEntityError",
      "Section": "load shard",
      "Service": "chat",
      "Text": "unable to read body request"
    },
    {
      "Attributes": [],
      "Code": "514451",
      "CodeName": "ProfanityInsertDatabaseError",
      "Section": "load shard",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "514452",
      "CodeName": "ProfanityInsertSuccess",
      "Section": "load shard",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "514453",
      "CodeName": "ProfanityUpdateDatabaseError",
      "Section": "load shard",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "514454",
      "CodeName": "ProfanityUpdateSuccess",
      "Section": "load shard",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "514455",
      "CodeName": "ProfanityQueryDatabaseError",
      "Section": "load shard",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "514456",
      "CodeName": "ProfanityQuerySuccess",
      "Section": "load shard",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "514457",
      "CodeName": "ProfanityValidationError",
      "Section": "load shard",
      "Service": "chat",
      "Text": "validation error"
    },
    {
      "Attributes": [],
      "Code": "514458",
      "CodeName": "ProfanityRecordNotFound",
      "Section": "load shard",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "514460",
      "CodeName": "ModerationGetSnapshotDatabaseError",
      "Section": "load shard",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "514461",
      "CodeName": "ModerationGetSnapshotRecordNotFound",
      "Section": "load shard",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "514462",
      "CodeName": "ModerationGetSnapshotSuccess",
      "Section": "load shard",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "514463",
      "CodeName": "ModerationGetSnapshotInternalError",
      "Section": "load shard",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "514464",
      "CodeName": "ModerationDeleteSnapshotRecordNotFound",
      "Section": "load shard",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "514465",
      "CodeName": "ModerationDeleteSnapshotDatabaseError",
      "Section": "load shard",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "514466",
      "CodeName": "ModerationDeleteSnapshotSuccess",
      "Section": "load shard",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "514467",
      "CodeName": "ModerationDeleteSnapshotInternalError",
      "Section": "load shard",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "514470",
      "CodeName": "TopicLogDatabaseError",
      "Section": "load shard",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "514471",
      "CodeName": "TopicLogSuccess",
      "Section": "load shard",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "514472",
      "CodeName": "TopicLogInternalError",
      "Section": "load shard",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "514480",
      "CodeName": "QueryUsersTopicDatabaseError",
      "Section": "load shard",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "514481",
      "CodeName": "QueryUsersTopicSuccess",
      "Section": "load shard",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "514482",
      "CodeName": "QueryUsersTopicInternalError",
      "Section": "load shard",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "514490",
      "CodeName": "QueryTopicsDatabaseError",
      "Section": "load shard",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "514491",
      "CodeName": "QueryTopicsSuccess",
      "Section": "load shard",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "514492",
      "CodeName": "QueryTopicsInternalError",
      "Section": "load shard",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "514500",
      "CodeName": "GetDictionaryGroupDatabaseError",
      "Section": "dictionary",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "514501",
      "CodeName": "GetDictionaryGroupSuccess",
      "Section": "dictionary",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "514502",
      "CodeName": "GetDictionaryGroupInternalError",
      "Section": "dictionary",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "514510",
      "CodeName": "ExportDictionaryDatabaseError",
      "Section": "dictionary",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "514511",
      "CodeName": "ExportDictionarySuccess",
      "Section": "dictionary",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "514512",
      "CodeName": "ImportDictionaryDatabaseError",
      "Section": "dictionary",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "514513",
      "CodeName": "ImportDictionarySuccess",
      "Section": "dictionary",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "514600",
      "CodeName": "SyncSystemMessageInvalidRequester",
      "Section": "inbox",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "514601",
      "CodeName": "SyncSystemMessageSuccess",
      "Section": "inbox",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "514610",
      "CodeName": "QuerySystemMessageInvalidRequester",
      "Section": "inbox",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "514611",
      "CodeName": "QuerySystemMessageSuccess",
      "Section": "inbox",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "514620",
      "CodeName": "GetSystemMessageStatsInvalidRequester",
      "Section": "inbox",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "514621",
      "CodeName": "GetSystemMessageStatsSuccess",
      "Section": "inbox",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "514630",
      "CodeName": "UpdateSystemMessagesInvalidRequester",
      "Section": "inbox",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "514631",
      "CodeName": "UpdateSystemMessagesSuccess",
      "Section": "inbox",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "514640",
      "CodeName": "DeleteSystemMessagesInvalidRequester",
      "Section": "inbox",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "514641",
      "CodeName": "DeleteSystemMessagesSuccess",
      "Section": "inbox",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "514650",
      "CodeName": "SaveInboxMessageSuccess",
      "Section": "inbox",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "514651",
      "CodeName": "UpdateInboxMessageSuccess",
      "Section": "inbox",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "514652",
      "CodeName": "UnsendInboxMessageSuccess",
      "Section": "inbox",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "514653",
      "CodeName": "SendInboxMessageSuccess",
      "Section": "inbox",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "514654",
      "CodeName": "UpdateInboxMessageInvalidNamespace",
      "Section": "inbox",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [
        "status"
      ],
      "Code": "514655",
      "CodeName": "UnsendInboxMessageFailed",
      "Section": "inbox",
      "Service": "chat",
      "Text": "unable to unsend a message in the status {{ status }}"
    },
    {
      "Attributes": [
        "status"
      ],
      "Code": "514656",
      "CodeName": "SendInboxMessageFailed",
      "Section": "inbox",
      "Service": "chat",
      "Text": "unable to send a message in the status {{ status }}"
    },
    {
      "Attributes": [],
      "Code": "514657",
      "CodeName": "GetInboxUsersSuccess",
      "Section": "inbox",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [
        "message"
      ],
      "Code": "514658",
      "CodeName": "GetInboxUsersUnableWriteResponse",
      "Section": "inbox",
      "Service": "chat",
      "Text": "{{message}}"
    },
    {
      "Attributes": [],
      "Code": "514660",
      "CodeName": "GetInboxStatsInternalError",
      "Section": "inbox",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "514661",
      "CodeName": "GetInboxStatsSuccess",
      "Section": "inbox",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [
        "status"
      ],
      "Code": "514662",
      "CodeName": "DeleteInboxMessageFailed",
      "Section": "inbox",
      "Service": "chat",
      "Text": "unable to delete a message in the status {{ status }}"
    },
    {
      "Attributes": [],
      "Code": "514670",
      "CodeName": "AddInboxCategorySuccess",
      "Section": "inbox",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "514671",
      "CodeName": "AddInboxCategoryFailed",
      "Section": "inbox",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "514680",
      "CodeName": "GetInboxCategoriesSuccess",
      "Section": "inbox",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "514681",
      "CodeName": "GetInboxCategoriesFailed",
      "Section": "inbox",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "514690",
      "CodeName": "UpdateInboxCategorySuccess",
      "Section": "inbox",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "514691",
      "CodeName": "UpdateInboxCategoriesFailed",
      "Section": "inbox",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "514700",
      "CodeName": "PublicBanTopicMembersSuccess",
      "Section": "public ban",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "514701",
      "CodeName": "PublicBanTopicMembersInvalidRequestBody",
      "Section": "public ban",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "514710",
      "CodeName": "PublicUnbanTopicMembersSuccess",
      "Section": "public ban",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "514711",
      "CodeName": "PublicUnbanTopicMembersInvalidRequestBody",
      "Section": "public ban",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "514800",
      "CodeName": "PublicGetUserMutedTopicsSuccess",
      "Section": "public get muted",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [],
      "Code": "514801",
      "CodeName": "PublicGetUserMutedTopicsError",
      "Section": "public get muted",
      "Service": "chat",
      "Text": ""
    },
    {
      "Attributes": [
        "err"
      ],
      "Code": "514900",
      "CodeName": "GroupServiceError",
      "Section": "external group service",
      "Service": "chat",
      "Text": "unable to request Group Service. Err: {{ err }}"
    },
    {
      "Attributes": [
        "namespace"
      ],
      "Code": "514901",
      "CodeName": "GroupServiceNamespaceNotFound",
      "Section": "external group service",
      "Service": "chat",
      "Text": "unable to locate namespace. Namespace: {{ namespace }}"
    },
    {
      "Attributes": [],
      "Code": "515004",
      "CodeName": "ResourceNotFound",
      "Section": "general",
      "Service": "chat",
      "Text": "resource not found."
    }
  ],
  "x-version": {
    "buildDate": "2025-03-04T05:19:27+00:00",
    "gitHash": "48a84bea9dec68f18f303a6249175509d15c4f3d",
    "name": "justice-chat-service",
    "revisionID": "0.4.42",
    "version": "0.4.42",
    "version-roles-seeding": "1.2.15"
  }
}
{
  "host": "demo.accelbyte.io",
  "info": {
    "contact": {
      "email": "engineering@accelbyte.io",
      "name": "Engineering Team at AccelByte",
      "url": "https://accelbyte.io"
    },
    "description": "Justice Legal Service",
    "title": "justice-legal-service",
    "version": "1.22.4"
  },
  "schemes": [
    "https"
  ],
  "tags": [
    {
      "name": "Admin User Agreement"
    },
    {
      "name": "Admin User Eligibilities"
    },
    {
      "name": "Agreement"
    },
    {
      "name": "Anonymization"
    },
    {
      "name": "Base Legal Policies"
    },
    {
      "name": "Eligibilities"
    },
    {
      "name": "Localized Policy Versions"
    },
    {
      "name": "Policies"
    },
    {
      "name": "Policy Versions"
    },
    {
      "name": "UserInfo"
    },
    {
      "name": "Utility"
    }
  ],
  "securityDefinitions": {
    "HasPermission": {
      "authorizationUrl": "https://dummy.oauth.net/auth",
      "flow": "accessCode",
      "scopes": {
        "ADMIN:NAMESPACE:*:LEGAL [CREATE]": "ADMIN:NAMESPACE:*:LEGAL [CREATE]",
        "ADMIN:NAMESPACE:*:LEGAL [DELETE]": "ADMIN:NAMESPACE:*:LEGAL [DELETE]",
        "ADMIN:NAMESPACE:*:LEGAL [READ]": "ADMIN:NAMESPACE:*:LEGAL [READ]",
        "ADMIN:NAMESPACE:*:LEGAL [UPDATE]": "ADMIN:NAMESPACE:*:LEGAL [UPDATE]",
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:LEGAL [CREATE]": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:LEGAL [CREATE]",
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:LEGAL [READ]": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:LEGAL [READ]",
        "NAMESPACE:{namespace}:LEGAL [CREATE]": "NAMESPACE:{namespace}:LEGAL [CREATE]",
        "NAMESPACE:{namespace}:LEGAL [READ]": "NAMESPACE:{namespace}:LEGAL [READ]"
      },
      "tokenUrl": "https://dumy.oauth.net/token",
      "type": "oauth2"
    },
    "HasScope": {
      "authorizationUrl": "https://dummy.oauth.net/auth",
      "flow": "accessCode",
      "scopes": {},
      "tokenUrl": "https://dumy.oauth.net/token",
      "type": "oauth2"
    },
    "authorization": {
      "in": "header",
      "name": "Authorization",
      "type": "apiKey"
    }
  },
  "swagger": "2.0",
  "paths": {
    "/agreement/admin/agreements/localized-policy-versions/preferences/namespaces/{namespace}/userId/{userId}": {
      "patch": {
        "consumes": [
          "application/json"
        ],
        "operationId": "changePreferenceConsent",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "User Id",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/AcceptAgreementRequest"
              },
              "type": "array"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "tags": [
          "Agreement"
        ]
      }
    },
    "/agreement/admin/agreements/policies/users/{userId}": {
      "get": {
        "description": "This API will return all accepted Legal Agreements for specified user. Other detail info: \u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;ADMIN:NAMESPACE:*:LEGAL\u0026#34;, action=2 (READ)\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "retrieveAcceptedAgreements",
        "parameters": [
          {
            "description": "User Id",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/RetrieveAcceptedAgreementResponse"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:*:LEGAL [READ]"
            ],
            "authorization": []
          }
        ],
        "summary": "Retrieve Accepted Legal Agreements",
        "tags": [
          "Agreement"
        ]
      }
    },
    "/agreement/admin/agreements/policy-versions/users": {
      "get": {
        "description": "This API will return all users who has accepted a specific policy version.Other detail info: \u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;ADMIN:NAMESPACE:*:LEGAL\u0026#34;, action=2 (READ)\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "retrieveAllUsersByPolicyVersion",
        "parameters": [
          {
            "in": "query",
            "name": "policyVersionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "display name or email or username",
            "in": "query",
            "name": "keyword",
            "required": false,
            "type": "string"
          },
          {
            "default": 20,
            "description": "limit",
            "format": "int32",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "default": 0,
            "description": "offset",
            "format": "int32",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/PagedRetrieveUserAcceptedAgreementResponse"
              },
              "type": "array"
            }
          },
          "404": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eNumericErrorCode\u003c/td\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e40035\u003c/td\u003e\u003ctd\u003eerrors.net.accelbyte.platform.legal.policy_version_not_found\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:*:LEGAL [READ]"
            ],
            "authorization": []
          }
        ],
        "summary": "Retrieve All Users Accepting Legal Agreements",
        "tags": [
          "Agreement"
        ]
      }
    },
    "/agreement/admin/base-policies": {
      "get": {
        "description": "Retrieve all base policies.\u0026lt;br\u0026gt;Other detail info: \u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;ADMIN:NAMESPACE:*:LEGAL\u0026#34;, action=2 (READ)\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "retrieveAllLegalPolicies",
        "parameters": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/RetrieveBasePolicyResponse"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:*:LEGAL [READ]"
            ],
            "authorization": []
          }
        ],
        "summary": "Retrieve All Base Legal Policy",
        "tags": [
          "Base Legal Policies"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create a legal policy.\u0026lt;br\u0026gt;Other detail info: \u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;ADMIN:NAMESPACE:*:LEGAL\u0026#34;, action=1 (CREATE)\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "createPolicy",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CreateBasePolicyRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CreateBasePolicyResponse"
            }
          },
          "409": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eNumericErrorCode\u003c/td\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e40030\u003c/td\u003e\u003ctd\u003eerrors.net.accelbyte.platform.legal.invalid_policy_type\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e20002\u003c/td\u003e\u003ctd\u003evalidation error\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:*:LEGAL [CREATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Create a Base Legal Policy",
        "tags": [
          "Base Legal Policies"
        ]
      }
    },
    "/agreement/admin/base-policies/{basePolicyId}": {
      "get": {
        "description": "Retrieve a base policy.\u0026lt;br\u0026gt;Other detail info: \u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;ADMIN:NAMESPACE:*:LEGAL\u0026#34;, action=2 (READ)\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "retrieveSinglePolicy",
        "parameters": [
          {
            "description": "BasePolicy Id",
            "in": "path",
            "name": "basePolicyId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RetrieveBasePolicyResponse"
            }
          },
          "404": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eNumericErrorCode\u003c/td\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e40031\u003c/td\u003e\u003ctd\u003eerrors.net.accelbyte.platform.legal.base_policy_not_found\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:*:LEGAL [READ]"
            ],
            "authorization": []
          }
        ],
        "summary": "Retrieve a Base Legal Policy",
        "tags": [
          "Base Legal Policies"
        ]
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "description": "Update an existing base policy.\u0026lt;br\u0026gt;Other detail info: \u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;ADMIN:NAMESPACE:*:LEGAL\u0026#34;, action=4 (UPDATE)\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "partialUpdatePolicy",
        "parameters": [
          {
            "description": "BasePolicy Id",
            "in": "path",
            "name": "basePolicyId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UpdateBasePolicyRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UpdateBasePolicyResponse"
            }
          },
          "400": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eNumericErrorCode\u003c/td\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e40032\u003c/td\u003e\u003ctd\u003eerrors.net.accelbyte.platform.legal.invalid_base_policy\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:*:LEGAL [UPDATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Update Base Legal Policy",
        "tags": [
          "Base Legal Policies"
        ]
      }
    },
    "/agreement/admin/base-policies/{basePolicyId}/countries/{countryCode}": {
      "get": {
        "description": "Retrieve a Base Legal Policy based on a Particular Country.\u0026lt;br\u0026gt;Other detail info: \u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;ADMIN:NAMESPACE:*:LEGAL\u0026#34;, action=2 (READ)\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "retrievePolicyCountry",
        "parameters": [
          {
            "description": "BasePolicy Id",
            "in": "path",
            "name": "basePolicyId",
            "required": true,
            "type": "string"
          },
          {
            "description": "Country Code",
            "in": "path",
            "name": "countryCode",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RetrievePolicyResponse"
            }
          },
          "404": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eNumericErrorCode\u003c/td\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e40031\u003c/td\u003e\u003ctd\u003eerrors.net.accelbyte.platform.legal.base_policy_not_found\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:*:LEGAL [READ]"
            ],
            "authorization": []
          }
        ],
        "summary": "Retrieve a Base Legal Policy based on a Particular Country",
        "tags": [
          "Base Legal Policies"
        ]
      }
    },
    "/agreement/admin/localized-policy-versions/versions/{policyVersionId}": {
      "get": {
        "description": "Retrieve versions of a particular country-specific policy.\u0026lt;br\u0026gt;Other detail info: \u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;ADMIN:NAMESPACE:*:LEGAL\u0026#34;, action=2 (READ)\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "retrieveLocalizedPolicyVersions",
        "parameters": [
          {
            "description": "Policy Version Id",
            "in": "path",
            "name": "policyVersionId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/RetrieveLocalizedPolicyVersionResponse"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:*:LEGAL [READ]"
            ],
            "authorization": []
          }
        ],
        "summary": "Retrieve Versions from Country-Specific Policy",
        "tags": [
          "Localized Policy Versions"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create a version of a particular country-specific policy.\u0026lt;br\u0026gt;Other detail info: \u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;ADMIN:NAMESPACE:*:LEGAL\u0026#34;, action=1 (CREATE)\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "createLocalizedPolicyVersion",
        "parameters": [
          {
            "description": "Policy Version Id",
            "in": "path",
            "name": "policyVersionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CreateLocalizedPolicyVersionRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CreateLocalizedPolicyVersionResponse"
            }
          },
          "400": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eNumericErrorCode\u003c/td\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e40033\u003c/td\u003e\u003ctd\u003eerrors.net.accelbyte.platform.legal.invalid_policy_version\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "409": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eNumericErrorCode\u003c/td\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e40044\u003c/td\u003e\u003ctd\u003eerrors.net.accelbyte.platform.legal.localized_policy_version_already_exist\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:*:LEGAL [CREATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Create a Localized Version from Country-Specific Policy",
        "tags": [
          "Localized Policy Versions"
        ]
      }
    },
    "/agreement/admin/localized-policy-versions/{localizedPolicyVersionId}": {
      "get": {
        "description": "Retrieve a version of a particular country-specific policy.\u0026lt;br\u0026gt;Other detail info: \u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;ADMIN:NAMESPACE:*:LEGAL\u0026#34;, action=2 (READ)\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "retrieveSingleLocalizedPolicyVersion",
        "parameters": [
          {
            "description": "Localized Policy Version Id",
            "in": "path",
            "name": "localizedPolicyVersionId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RetrieveLocalizedPolicyVersionResponse"
            }
          },
          "400": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eNumericErrorCode\u003c/td\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e2912\u003c/td\u003e\u003ctd\u003eerrors.net.accelbyte.platform.legal.invalid_policy_version\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:*:LEGAL [READ]"
            ],
            "authorization": []
          }
        ],
        "summary": "Retrieve a Localized Version from Country-Specific Policy",
        "tags": [
          "Localized Policy Versions"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update a version of a particular country-specific policy.\u0026lt;br\u0026gt;Other detail info: \u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;ADMIN:NAMESPACE:*:LEGAL\u0026#34;, action=4 (UPDATE)\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "updateLocalizedPolicyVersion",
        "parameters": [
          {
            "description": "Localized Policy Version Id",
            "in": "path",
            "name": "localizedPolicyVersionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UpdateLocalizedPolicyVersionRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UpdateLocalizedPolicyVersionResponse"
            }
          },
          "400": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eNumericErrorCode\u003c/td\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e40035\u003c/td\u003e\u003ctd\u003eerrors.net.accelbyte.platform.legal.invalid_policy_version\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:*:LEGAL [UPDATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Update a Localized Version from Country-Specific Policy",
        "tags": [
          "Localized Policy Versions"
        ]
      }
    },
    "/agreement/admin/localized-policy-versions/{localizedPolicyVersionId}/attachments": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Request presigned URL for  upload attachment for a particular localized version of base policy.\u0026lt;br\u0026gt;Other detail info: \u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;ADMIN:NAMESPACE:*:LEGAL\u0026#34;, action=1 (CREATE)\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "requestPresignedURL",
        "parameters": [
          {
            "description": "Localized Policy Version Id",
            "in": "path",
            "name": "localizedPolicyVersionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UploadPolicyVersionAttachmentRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UploadLocalizedPolicyVersionAttachmentResponse"
            }
          },
          "400": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eNumericErrorCode\u003c/td\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e40034\u003c/td\u003e\u003ctd\u003eerrors.net.accelbyte.platform.legal.invalid_file_type\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e40037\u003c/td\u003e\u003ctd\u003eerrors.net.accelbyte.platform.legal.invalid_localized_policy_version\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e40042\u003c/td\u003e\u003ctd\u003eerrors.net.accelbyte.platform.legal.policy_version_freezed\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:*:LEGAL [CREATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Request Presigned URL for Upload Document",
        "tags": [
          "Localized Policy Versions"
        ]
      }
    },
    "/agreement/admin/localized-policy-versions/{localizedPolicyVersionId}/default": {
      "patch": {
        "description": "Update a localized version policy to be the default.\u0026lt;br\u0026gt;Other detail info: \u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;ADMIN:NAMESPACE:*:LEGAL\u0026#34;, action=4 (UPDATE)\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "setDefaultPolicy",
        "parameters": [
          {
            "description": "Localized Policy Version Id",
            "in": "path",
            "name": "localizedPolicyVersionId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:*:LEGAL [UPDATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Set Default Localized Policy",
        "tags": [
          "Localized Policy Versions"
        ]
      }
    },
    "/agreement/admin/namespaces/{namespace}/users/{userId}/agreements/policies": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Accepts many legal policy versions all at once. Supply with localized version policy id and userId to accept an agreement. Other detail info: \u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:LEGAL\u0026#34;, action=1 (CREATE)\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "indirectBulkAcceptVersionedPolicy",
        "parameters": [
          {
            "description": "Namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "User Id",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "description": "Client Id",
            "in": "query",
            "name": "clientId",
            "required": true,
            "type": "string"
          },
          {
            "description": "Country Code",
            "in": "query",
            "name": "countryCode",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/AcceptAgreementRequest"
              },
              "type": "array"
            }
          },
          {
            "description": "Publisher user Id",
            "in": "query",
            "name": "publisherUserId",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AcceptAgreementResponse"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:USER:{userId}:LEGAL [CREATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Admin bulk accept Policy Versions",
        "tags": [
          "Admin User Agreement"
        ]
      }
    },
    "/agreement/admin/namespaces/{namespace}/users/{userId}/eligibilities": {
      "get": {
        "description": "Retrieve the active policies and its conformance status by userThis process only supports cross-namespace checking between game namespace and publisher namespace , that means if the active policy already accepted by the same user in publisher namespace, then it will also be considered as eligible in non-publisher namespace.\u0026lt;br/\u0026gt;\u0026lt;br/\u0026gt;Other detail info: \u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:LEGAL\u0026#34;, action=2 (READ)\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "adminRetrieveEligibilities",
        "parameters": [
          {
            "description": "Namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "User Id",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "description": "Client Id",
            "in": "query",
            "name": "clientId",
            "required": true,
            "type": "string"
          },
          {
            "description": "Country Code",
            "in": "query",
            "name": "countryCode",
            "required": true,
            "type": "string"
          },
          {
            "description": "Publisher user Id",
            "in": "query",
            "name": "publisherUserId",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RetrieveUserEligibilitiesIndirectResponse"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:USER:{userId}:LEGAL [READ]"
            ],
            "authorization": []
          }
        ],
        "summary": "Check User Legal Eligibility",
        "tags": [
          "Admin User Eligibilities"
        ]
      }
    },
    "/agreement/admin/policies/countries/{countryCode}": {
      "get": {
        "description": "Retrieve all active policies based on a country.\u0026lt;br\u0026gt;Other detail info: \u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;ADMIN:NAMESPACE:*:LEGAL\u0026#34;, action=2 (READ)\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "retrievePolicies",
        "parameters": [
          {
            "description": "Country Code",
            "in": "path",
            "name": "countryCode",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/RetrievePolicyResponse"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:*:LEGAL [READ]"
            ],
            "authorization": []
          }
        ],
        "summary": "Retrieve Policies by Country",
        "tags": [
          "Policies"
        ]
      }
    },
    "/agreement/admin/policies/versions/{policyVersionId}": {
      "patch": {
        "consumes": [
          "application/json"
        ],
        "description": "Update a particular policy version.\u0026lt;br\u0026gt;Other detail info: \u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;ADMIN:NAMESPACE:*:LEGAL\u0026#34;, action=4 (UPDATE)\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "updatePolicyVersion",
        "parameters": [
          {
            "description": "Policy Version Id",
            "in": "path",
            "name": "policyVersionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UpdatePolicyVersionRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UpdatePolicyVersionResponse"
            }
          },
          "400": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eNumericErrorCode\u003c/td\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e40035\u003c/td\u003e\u003ctd\u003eerrors.net.accelbyte.platform.legal.invalid_policy_version\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e40042\u003c/td\u003e\u003ctd\u003eerrors.net.accelbyte.platform.legal.policy_version_freezed\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:*:LEGAL [UPDATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Update a Version of Policy",
        "tags": [
          "Policy Versions"
        ]
      }
    },
    "/agreement/admin/policies/versions/{policyVersionId}/latest": {
      "patch": {
        "description": "Manually publish a version of a particular country-specific policy.\u0026lt;br\u0026gt;Other detail info: \u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;ADMIN:NAMESPACE:*:LEGAL\u0026#34;, action=4 (UPDATE)\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "publishPolicyVersion",
        "parameters": [
          {
            "description": "Policy Version Id",
            "in": "path",
            "name": "policyVersionId",
            "required": true,
            "type": "string"
          },
          {
            "default": true,
            "description": "Should Notify",
            "in": "query",
            "name": "shouldNotify",
            "required": false,
            "type": "boolean",
            "x-omitempty": false
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eNumericErrorCode\u003c/td\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e40033\u003c/td\u003e\u003ctd\u003eerrors.net.accelbyte.platform.legal.invalid_policy_version\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:*:LEGAL [UPDATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Manually Publish a Version from Country-Specific Policy",
        "tags": [
          "Policy Versions"
        ]
      }
    },
    "/agreement/admin/policies/{policyId}": {
      "patch": {
        "consumes": [
          "application/json"
        ],
        "description": "Update country-specific policy.\u0026lt;br\u0026gt;Other detail info: \u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;ADMIN:NAMESPACE:*:LEGAL\u0026#34;, action=4 (UPDATE)\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "updatePolicy",
        "parameters": [
          {
            "description": "Policy Id",
            "in": "path",
            "name": "policyId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UpdatePolicyRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:*:LEGAL [UPDATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Update Country-Specific Policy",
        "tags": [
          "Policies"
        ]
      }
    },
    "/agreement/admin/policies/{policyId}/default": {
      "patch": {
        "description": "Update a policy to be the default.\u0026lt;br\u0026gt;Other detail info: \u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;ADMIN:NAMESPACE:*:LEGAL\u0026#34;, action=4 (UPDATE)\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "setDefaultPolicy_1",
        "parameters": [
          {
            "description": "Policy Id",
            "in": "path",
            "name": "policyId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:*:LEGAL [UPDATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Set Default Policy",
        "tags": [
          "Policies"
        ]
      }
    },
    "/agreement/admin/policies/{policyId}/versions": {
      "get": {
        "description": "Retrieve a version of a particular country specific policy. If version is not provided, the Legal Service will assume caller requesting all versions from country-specific policy.\u0026lt;br\u0026gt;Other detail info: \u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;ADMIN:NAMESPACE:*:LEGAL\u0026#34;, action=2 (READ)\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "retrieveSinglePolicyVersion",
        "parameters": [
          {
            "description": "Policy Id",
            "in": "path",
            "name": "policyId",
            "required": true,
            "type": "string"
          },
          {
            "description": "Version Id",
            "in": "query",
            "name": "versionId",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/RetrievePolicyVersionResponse"
              },
              "type": "array"
            }
          },
          "404": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eNumericErrorCode\u003c/td\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e40035\u003c/td\u003e\u003ctd\u003eerrors.net.accelbyte.platform.legal.policy_version_not_found\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:*:LEGAL [READ]"
            ],
            "authorization": []
          }
        ],
        "summary": "Retrieve a Version from Country-Specific Policy",
        "tags": [
          "Policy Versions"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create a version of a particular country-specific policy.\u0026lt;br\u0026gt;Other detail info: \u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;ADMIN:NAMESPACE:*:LEGAL\u0026#34;, action=1 (CREATE)\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "createPolicyVersion",
        "parameters": [
          {
            "description": "Policy Id",
            "in": "path",
            "name": "policyId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CreatePolicyVersionRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CreatePolicyVersionResponse"
            }
          },
          "400": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eNumericErrorCode\u003c/td\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e40033\u003c/td\u003e\u003ctd\u003eerrors.net.accelbyte.platform.legal.invalid_policy\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:*:LEGAL [CREATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Create a Version from Country-Specific Policy",
        "tags": [
          "Policy Versions"
        ]
      }
    },
    "/agreement/admin/policy-types": {
      "get": {
        "description": "Retrieve all supported policy types.\u0026lt;br\u0026gt;Other detail info: \u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;ADMIN:NAMESPACE:*:LEGAL\u0026#34;, action=2 (READ)\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "retrieveAllPolicyTypes",
        "parameters": [
          {
            "description": "Limit",
            "format": "int32",
            "in": "query",
            "name": "limit",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Offset",
            "format": "int32",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/RetrievePolicyTypeResponse"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:*:LEGAL [READ]"
            ],
            "authorization": []
          }
        ],
        "summary": "Retrieve All Policy Type",
        "tags": [
          "Base Legal Policies"
        ]
      }
    },
    "/agreement/admin/userInfo": {
      "delete": {
        "description": "\u0026lt;b\u0026gt;Important: GOING TO DEPRECATE\u0026lt;/b\u0026gt;\u0026lt;br/\u0026gt;\u0026lt;br/\u0026gt;Invalidate user info cache in agreement service.\u0026lt;br\u0026gt;Other detail info: \u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;ADMIN:NAMESPACE:*:LEGAL\u0026#34;, action=8 (DELETE)\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "invalidateUserInfoCache",
        "parameters": [
          {
            "description": "If null or empty, will invalidate all namespaces",
            "in": "query",
            "name": "namespace",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:*:LEGAL [DELETE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Invalidate user info cache",
        "tags": [
          "UserInfo"
        ]
      },
      "get": {
        "description": "Get user info cache last updated time per namespace.\u0026lt;br\u0026gt;The query parameter namespaces can be a list of namespace separated by comma.\u0026lt;br\u0026gt;If query parameter namespaces is empty, user info cache status for all available namespaces will be returned. \u0026lt;br\u0026gt;Other detail info: \u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;ADMIN:NAMESPACE:*:LEGAL\u0026#34;, action=2 (READ)\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "getUserInfoStatus",
        "parameters": [
          {
            "in": "query",
            "name": "namespaces",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/RetrieveUserInfoCacheStatusResponse"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:*:LEGAL [READ]"
            ],
            "authorization": []
          }
        ],
        "summary": "Get user info cache status",
        "tags": [
          "UserInfo"
        ]
      },
      "put": {
        "description": "\u0026lt;b\u0026gt;Important: GOING TO DEPRECATE\u0026lt;/b\u0026gt;\u0026lt;br/\u0026gt;\u0026lt;br/\u0026gt;Sync user info cache in agreement service with iam service.\u0026lt;br\u0026gt;Other detail info: \u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;ADMIN:NAMESPACE:*:LEGAL\u0026#34;, action=4 (UPDATE)\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "syncUserInfo",
        "parameters": [
          {
            "in": "query",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:*:LEGAL [UPDATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Sync user info with iam service ",
        "tags": [
          "UserInfo"
        ]
      }
    },
    "/agreement/admin/users/{userId}/anonymization/agreements": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "This API will anonymize agreement record for specified user. Other detail info: \u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;ADMIN:NAMESPACE:*:LEGAL\u0026#34;, action=8 (DELETE)\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "anonymizeUserAgreement",
        "parameters": [
          {
            "description": "User Id",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Anonymize successfully"
          },
          "404": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eNumericErrorCode\u003c/td\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e40047\u003c/td\u003e\u003ctd\u003eerrors.net.accelbyte.platform.legal.user_agreement_not_found\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:*:LEGAL [DELETE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Anonymize user's agreement record",
        "tags": [
          "Anonymization"
        ]
      }
    },
    "/agreement/public/agreements/localized-policy-versions/preferences": {
      "patch": {
        "consumes": [
          "application/json"
        ],
        "description": "Change marketing preference consent.\u0026lt;br\u0026gt;Other detail info: \u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: login user\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "changePreferenceConsent_1",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/AcceptAgreementRequest"
              },
              "type": "array"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e40017\u003c/td\u003e\u003ctd\u003ePolicy with id : [{policyId}] is not marketing preference\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Accept/Revoke Marketing Preference Consent",
        "tags": [
          "Agreement"
        ]
      }
    },
    "/agreement/public/agreements/localized-policy-versions/{localizedPolicyVersionId}": {
      "post": {
        "description": "Accepts a legal policy version. Supply with localized version policy id to accept an agreement.\u0026lt;br\u0026gt;Other detail info: \u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: login user\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "acceptVersionedPolicy",
        "parameters": [
          {
            "description": "Localized Policy Version Id",
            "in": "path",
            "name": "localizedPolicyVersionId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Accept a Policy Version",
        "tags": [
          "Agreement"
        ]
      }
    },
    "/agreement/public/agreements/policies": {
      "get": {
        "description": "Retrieve accepted Legal Agreements.\u0026lt;br\u0026gt;Other detail info: \u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: login user\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "retrieveAgreementsPublic",
        "parameters": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/RetrieveAcceptedAgreementResponse"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Retrieve the accepted Legal Agreements",
        "tags": [
          "Agreement"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Accepts many legal policy versions all at once. Supply with localized version policy id to accept an agreement.\u0026lt;br\u0026gt;Other detail info: \u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: login user\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "bulkAcceptVersionedPolicy",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/AcceptAgreementRequest"
              },
              "type": "array"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AcceptAgreementResponse"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Bulk Accept Policy Versions",
        "tags": [
          "Agreement"
        ]
      }
    },
    "/agreement/public/agreements/policies/namespaces/{namespace}/countries/{countryCode}/clients/{clientId}/users/{userId}": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "\u0026lt;b\u0026gt;IMPORTANT: GOING TO DEPRECATE\u0026lt;/b\u0026gt;\u0026lt;br/\u0026gt;\u0026lt;br/\u0026gt;Accepts many legal policy versions all at once. Supply with localized version policy id, version policy id, policy id, userId, namespace, country code and client id to accept an agreement. This endpoint used by APIGateway during new user registration.\u0026lt;br\u0026gt;Other detail info: \u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;NAMESPACE:{namespace}:LEGAL\u0026#34;, action=1 (CREATE)\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "indirectBulkAcceptVersionedPolicyV2",
        "parameters": [
          {
            "description": "Client ID",
            "in": "path",
            "name": "clientId",
            "required": true,
            "type": "string"
          },
          {
            "description": "Country Code",
            "in": "path",
            "name": "countryCode",
            "required": true,
            "type": "string"
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "User Id",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/AcceptAgreementRequest"
              },
              "type": "array"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AcceptAgreementResponse"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:LEGAL [CREATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Bulk Accept Policy Versions (Indirect)",
        "tags": [
          "Agreement"
        ]
      }
    },
    "/agreement/public/agreements/policies/users/{userId}": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Accepts many legal policy versions all at once. Supply with localized version policy id and userId to accept an agreement. This endpoint used by Authentication Service during new user registration.\u0026lt;br\u0026gt;\u0026lt;br/\u0026gt;Available Extra Information to return: \u0026lt;br/\u0026gt;\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;b\u0026gt;userIds\u0026lt;/b\u0026gt; : List of userId mapping (\u0026lt;b\u0026gt;IMPORTANT: GOING TO DEPRECATE\u0026lt;/b\u0026gt;)\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;Other detail info: \u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: login user\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "indirectBulkAcceptVersionedPolicy_1",
        "parameters": [
          {
            "description": "User Id",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/AcceptAgreementRequest"
              },
              "type": "array"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AcceptAgreementResponse"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Bulk Accept Policy Versions (Indirect)",
        "tags": [
          "Agreement"
        ]
      }
    },
    "/agreement/public/eligibilities/namespaces/{namespace}": {
      "get": {
        "description": "Retrieve the active policies and its conformance status by user.\u0026lt;br\u0026gt;This process supports cross-namespace checking, that means if the active policy already accepted by the same user in other namespace, then it will be considered as eligible.\u0026lt;br/\u0026gt;\u0026lt;br/\u0026gt;Other detail info: \u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: login user\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "retrieveEligibilitiesPublic",
        "parameters": [
          {
            "description": "Namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/RetrieveUserEligibilitiesResponse"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Check User Legal Eligibility",
        "tags": [
          "Eligibilities"
        ]
      }
    },
    "/agreement/public/eligibilities/namespaces/{namespace}/countries/{countryCode}/clients/{clientId}/users/{userId}": {
      "get": {
        "description": "Retrieve the active policies and its conformance status by userThis process only supports cross-namespace checking between game namespace and publisher namespace , that means if the active policy already accepted by the same user in publisher namespace, then it will also be considered as eligible in non-publisher namespace.\u0026lt;br/\u0026gt;\u0026lt;br/\u0026gt;Other detail info: \u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: login user\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "retrieveEligibilitiesPublicIndirect",
        "parameters": [
          {
            "description": "Client Id",
            "in": "path",
            "name": "clientId",
            "required": true,
            "type": "string"
          },
          {
            "description": "Country Code",
            "in": "path",
            "name": "countryCode",
            "required": true,
            "type": "string"
          },
          {
            "description": "Namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "User Id",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RetrieveUserEligibilitiesIndirectResponse"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Check User Legal Eligibility",
        "tags": [
          "Eligibilities"
        ]
      }
    },
    "/agreement/public/localized-policy-versions/{localizedPolicyVersionId}": {
      "get": {
        "description": "Retrieve specific localized policy version including the policy version and base policy version where the localized policy version located.\u0026lt;br\u0026gt;Other detail info: \u0026lt;ul\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "retrieveSingleLocalizedPolicyVersion_1",
        "parameters": [
          {
            "description": "Localized Policy Version Id",
            "in": "path",
            "name": "localizedPolicyVersionId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RetrieveLocalizedPolicyVersionPublicResponse"
            }
          },
          "404": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eNumericErrorCode\u003c/td\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e40038\u003c/td\u003e\u003ctd\u003eerrors.net.accelbyte.platform.legal.localized_policy_version_not_found\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "summary": "Retrieve a Localized Version",
        "tags": [
          "Localized Policy Versions"
        ]
      }
    },
    "/agreement/public/policies/countries/{countryCode}": {
      "get": {
        "description": "Retrieve all active latest policies based on a country.\u0026lt;br\u0026gt;Other detail info: \u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Leave the policyType empty if you want to be responded with all policy type\u0026lt;/i\u0026gt;\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Fill the tags if you want to filter the responded policy by tags\u0026lt;/i\u0026gt;\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Fill the defaultOnEmpty with true if you want to be responded with default country-specific policy if your requested country is not exist\u0026lt;/i\u0026gt;\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "retrieveLatestPolicies",
        "parameters": [
          {
            "description": "Country Code",
            "in": "path",
            "name": "countryCode",
            "required": true,
            "type": "string"
          },
          {
            "description": "Default On Empty",
            "in": "query",
            "name": "defaultOnEmpty",
            "required": false,
            "type": "boolean",
            "x-omitempty": false
          },
          {
            "description": "Policy Type",
            "enum": [
              "LEGAL_DOCUMENT_TYPE",
              "MARKETING_PREFERENCE_TYPE"
            ],
            "in": "query",
            "name": "policyType",
            "required": false,
            "type": "string"
          },
          {
            "description": "tags, separate multiple value by commas parameter",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/RetrievePolicyPublicResponse"
              },
              "type": "array"
            }
          }
        },
        "summary": "Retrieve Latest Policies by Country",
        "tags": [
          "Policies"
        ]
      }
    },
    "/agreement/public/policies/namespaces/{namespace}": {
      "get": {
        "description": "Retrieve all active latest policies based on a namespace and country. The country will be read from user token.\u0026lt;br\u0026gt;Other detail info: \u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Leave the policyType empty if you want to be responded with all policy type\u0026lt;/i\u0026gt;\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Fill the tags if you want to filter the responded policy by tags\u0026lt;/i\u0026gt;\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Fill the defaultOnEmpty with true if you want to be responded with default country-specific policy if your requested country is not exist\u0026lt;/i\u0026gt;\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Fill the alwaysIncludeDefault with true if you want to be responded with always include default policy. If there are duplicate policies (default policies and country specific policies with same base policy) it\u0026#39;ll include policy with same country code, for example:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;Document 1 (default): Region US (default), UA\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;Document 2 (default): Region US (default)\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;Document 3 (default): Region US (default)\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;User: Region UA\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;Query: alwaysIncludeDefault: true\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;Response: Document 1 (UA), Document 2 (US), Document 3 (US)\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;\u0026lt;/i\u0026gt;\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission: login user \u0026lt;/i\u0026gt;\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "retrieveLatestPoliciesPublic",
        "parameters": [
          {
            "description": "Namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "Always include default",
            "in": "query",
            "name": "alwaysIncludeDefault",
            "required": false,
            "type": "boolean",
            "x-omitempty": false
          },
          {
            "description": "Default On Empty",
            "in": "query",
            "name": "defaultOnEmpty",
            "required": false,
            "type": "boolean",
            "x-omitempty": false
          },
          {
            "description": "Policy Type",
            "enum": [
              "LEGAL_DOCUMENT_TYPE",
              "MARKETING_PREFERENCE_TYPE"
            ],
            "in": "query",
            "name": "policyType",
            "required": false,
            "type": "string"
          },
          {
            "description": "tags, separate multiple value by commas parameter",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/RetrievePolicyPublicResponse"
              },
              "type": "array"
            }
          },
          "404": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eNumericErrorCode\u003c/td\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e40040\u003c/td\u003e\u003ctd\u003eerrors.net.accelbyte.platform.legal.user_has_no_country\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Retrieve Latest Policies by Namespace and Country",
        "tags": [
          "Policies"
        ]
      }
    },
    "/agreement/public/policies/namespaces/{namespace}/countries/{countryCode}": {
      "get": {
        "description": "Retrieve all active latest policies based on a namespace and country.\u0026lt;br\u0026gt;Other detail info: \u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Leave the policyType empty if you want to be responded with all policy type\u0026lt;/i\u0026gt;\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Fill the tags if you want to filter the responded policy by tags\u0026lt;/i\u0026gt;\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Fill the defaultOnEmpty with true if you want to be responded with default country-specific policy if your requested country is not exist\u0026lt;/i\u0026gt;\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Fill the alwaysIncludeDefault with true if you want to be responded with always include default policy. If there are duplicate policies (default policies and country specific policies with same base policy) it\u0026#39;ll include policy with same country code, for example:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;Document 1 (default): Region US (default), UA\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;Document 2 (default): Region US (default)\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;Document 3 (default): Region US (default)\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;User: Region UA\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;Query: alwaysIncludeDefault: true\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;Response: Document 1 (UA), Document 2 (US), Document 3 (US)\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "retrieveLatestPoliciesByNamespaceAndCountryPublic",
        "parameters": [
          {
            "description": "Country Code",
            "in": "path",
            "name": "countryCode",
            "required": true,
            "type": "string"
          },
          {
            "description": "Namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "Always include default",
            "in": "query",
            "name": "alwaysIncludeDefault",
            "required": false,
            "type": "boolean",
            "x-omitempty": false
          },
          {
            "description": "Default On Empty",
            "in": "query",
            "name": "defaultOnEmpty",
            "required": false,
            "type": "boolean",
            "x-omitempty": false
          },
          {
            "description": "Policy Type",
            "enum": [
              "LEGAL_DOCUMENT_TYPE",
              "MARKETING_PREFERENCE_TYPE"
            ],
            "in": "query",
            "name": "policyType",
            "required": false,
            "type": "string"
          },
          {
            "description": "tags, separate multiple value by commas parameter",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/RetrievePolicyPublicResponse"
              },
              "type": "array"
            }
          }
        },
        "summary": "Retrieve Latest Policies by Namespace and Country",
        "tags": [
          "Policies"
        ]
      }
    },
    "/agreement/public/readiness": {
      "get": {
        "description": "Readiness status defined as at least one legal basePolicy is present and having active basePolicy.\u0026lt;br\u0026gt;Other detail info: \u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;NAMESPACE:{namespace}:LEGAL\u0026#34;, action=2 (READ)\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "checkReadiness",
        "parameters": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/LegalReadinessStatusResponse"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:LEGAL [READ]"
            ],
            "authorization": []
          }
        ],
        "summary": "Check Legal Data Readiness",
        "tags": [
          "Utility"
        ]
      }
    }
  },
  "definitions": {
    "AcceptAgreementRequest": {
      "properties": {
        "isAccepted": {
          "type": "boolean",
          "x-omitempty": false
        },
        "isNeedToSendEventMarketing": {
          "type": "boolean",
          "x-omitempty": false
        },
        "localizedPolicyVersionId": {
          "type": "string"
        },
        "policyId": {
          "type": "string"
        },
        "policyVersionId": {
          "type": "string"
        }
      },
      "required": [
        "isAccepted",
        "localizedPolicyVersionId",
        "policyId",
        "policyVersionId"
      ],
      "type": "object"
    },
    "AcceptAgreementResponse": {
      "properties": {
        "comply": {
          "description": "Eligibility Status after Accept Agreement",
          "type": "boolean",
          "x-omitempty": false
        },
        "ext": {
          "additionalProperties": {
            "type": "object"
          },
          "description": "extra information",
          "type": "object"
        },
        "proceed": {
          "description": "DEPRECATED the name is not clear, changed with comply",
          "type": "boolean",
          "x-omitempty": false
        }
      },
      "required": [
        "comply",
        "proceed"
      ],
      "type": "object"
    },
    "CreateBasePolicyRequest": {
      "properties": {
        "affectedClientIds": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        },
        "affectedCountries": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "basePolicyName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        },
        "typeId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreateBasePolicyResponse": {
      "properties": {
        "affectedClientIds": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        },
        "affectedCountries": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "description": {
          "type": "string"
        },
        "globalPolicyName": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "policyId": {
          "type": "string"
        },
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        },
        "typeId": {
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "CreateLocalizedPolicyVersionRequest": {
      "properties": {
        "contentType": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "localeCode": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreateLocalizedPolicyVersionResponse": {
      "properties": {
        "createdAt": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "localeCode": {
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "CreatePolicyVersionRequest": {
      "properties": {
        "description": {
          "type": "string"
        },
        "displayVersion": {
          "type": "string"
        },
        "isCommitted": {
          "type": "boolean",
          "x-omitempty": false
        }
      },
      "type": "object"
    },
    "CreatePolicyVersionResponse": {
      "properties": {
        "basePolicyId": {
          "readOnly": true,
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "description": {
          "type": "string"
        },
        "displayVersion": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "isCommitted": {
          "type": "boolean",
          "x-omitempty": false
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "ErrorEntity": {
      "properties": {
        "devStackTrace": {
          "description": "internal server error stack trace in configured environment",
          "type": "string"
        },
        "errorCode": {
          "description": "numeric error code",
          "format": "int32",
          "type": "integer"
        },
        "errorMessage": {
          "description": "error message",
          "type": "string"
        },
        "messageVariables": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "message variables",
          "type": "object"
        }
      },
      "required": [
        "errorCode",
        "errorMessage"
      ],
      "type": "object"
    },
    "FieldValidationError": {
      "properties": {
        "errorCode": {
          "type": "string"
        },
        "errorField": {
          "type": "string"
        },
        "errorMessage": {
          "type": "string"
        },
        "errorValue": {
          "type": "string"
        },
        "messageVariables": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "LegalReadinessStatusResponse": {
      "properties": {
        "isReady": {
          "type": "boolean",
          "x-omitempty": false
        }
      },
      "type": "object"
    },
    "LocalizedPolicyVersionObject": {
      "properties": {
        "attachmentChecksum": {
          "type": "string"
        },
        "attachmentLocation": {
          "type": "string"
        },
        "attachmentVersionIdentifier": {
          "type": "string"
        },
        "contentType": {
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "isDefaultSelection": {
          "type": "boolean",
          "x-omitempty": false
        },
        "localeCode": {
          "type": "string"
        },
        "publishedDate": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "status": {
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "id",
        "isDefaultSelection",
        "localeCode"
      ],
      "type": "object"
    },
    "PagedRetrieveUserAcceptedAgreementResponse": {
      "properties": {
        "data": {
          "items": {
            "$ref": "#/definitions/RetrieveUserAcceptedAgreementResponse"
          },
          "type": "array"
        },
        "paging": {
          "$ref": "#/definitions/Paging"
        }
      },
      "type": "object"
    },
    "Paging": {
      "properties": {
        "next": {
          "type": "string"
        },
        "previous": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PolicyObject": {
      "properties": {
        "countryCode": {
          "type": "string"
        },
        "countryGroupCode": {
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "isDefaultOpted": {
          "type": "boolean",
          "x-omitempty": false
        },
        "isDefaultSelection": {
          "type": "boolean",
          "x-omitempty": false
        },
        "isMandatory": {
          "type": "boolean",
          "x-omitempty": false
        },
        "policyName": {
          "type": "string"
        },
        "readableId": {
          "type": "string"
        },
        "shouldNotifyOnUpdate": {
          "type": "boolean",
          "x-omitempty": false
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "countryCode",
        "id",
        "isDefaultOpted",
        "isDefaultSelection",
        "isMandatory",
        "policyName",
        "shouldNotifyOnUpdate"
      ],
      "type": "object"
    },
    "PolicyVersionObject": {
      "properties": {
        "createdAt": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "description": {
          "type": "string"
        },
        "displayVersion": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "isCommitted": {
          "type": "boolean",
          "x-omitempty": false
        },
        "isInEffect": {
          "type": "boolean",
          "x-omitempty": false
        },
        "publishedDate": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "status": {
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "displayVersion",
        "id",
        "isCommitted",
        "isInEffect"
      ],
      "type": "object"
    },
    "PolicyVersionWithLocalizedVersionObject": {
      "properties": {
        "createdAt": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "description": {
          "type": "string"
        },
        "displayVersion": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "isCommitted": {
          "type": "boolean",
          "x-omitempty": false
        },
        "isInEffect": {
          "type": "boolean",
          "x-omitempty": false
        },
        "localizedPolicyVersions": {
          "items": {
            "$ref": "#/definitions/LocalizedPolicyVersionObject"
          },
          "type": "array"
        },
        "publishedDate": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "status": {
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "displayVersion",
        "id",
        "isCommitted",
        "isInEffect"
      ],
      "type": "object"
    },
    "RetrieveAcceptedAgreementResponse": {
      "properties": {
        "countryCode": {
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "description": {
          "type": "string"
        },
        "displayVersion": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "isAccepted": {
          "type": "boolean",
          "x-omitempty": false
        },
        "localizedPolicyVersion": {
          "$ref": "#/definitions/LocalizedPolicyVersionObject"
        },
        "namespace": {
          "type": "string"
        },
        "policyId": {
          "type": "string"
        },
        "policyName": {
          "type": "string"
        },
        "policyType": {
          "type": "string"
        },
        "signingDate": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "userId": {
          "type": "string"
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "RetrieveBasePolicyResponse": {
      "properties": {
        "affectedClientIds": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        },
        "basePolicyName": {
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "policies": {
          "items": {
            "$ref": "#/definitions/PolicyObject"
          },
          "type": "array"
        },
        "policyTypeId": {
          "readOnly": true,
          "type": "string"
        },
        "policyTypeName": {
          "readOnly": true,
          "type": "string"
        },
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "basePolicyName",
        "id",
        "namespace"
      ],
      "type": "object"
    },
    "RetrieveLocalizedPolicyVersionPublicResponse": {
      "properties": {
        "attachmentChecksum": {
          "type": "string"
        },
        "attachmentLocation": {
          "type": "string"
        },
        "attachmentVersionIdentifier": {
          "type": "string"
        },
        "basePolicyId": {
          "type": "string"
        },
        "baseUrls": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "contentType": {
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "localeCode": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "policy": {
          "$ref": "#/definitions/PolicyObject"
        },
        "policyVersion": {
          "$ref": "#/definitions/PolicyVersionObject"
        },
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "id",
        "localeCode",
        "namespace",
        "policy",
        "policyVersion"
      ],
      "type": "object"
    },
    "RetrieveLocalizedPolicyVersionResponse": {
      "properties": {
        "attachmentChecksum": {
          "type": "string"
        },
        "attachmentLocation": {
          "type": "string"
        },
        "attachmentVersionIdentifier": {
          "type": "string"
        },
        "baseUrls": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "contentType": {
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "localeCode": {
          "type": "string"
        },
        "policy": {
          "$ref": "#/definitions/PolicyObject"
        },
        "policyVersion": {
          "$ref": "#/definitions/PolicyVersionObject"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "id",
        "localeCode",
        "policy",
        "policyVersion"
      ],
      "type": "object"
    },
    "RetrievePolicyPublicResponse": {
      "properties": {
        "basePolicyId": {
          "type": "string"
        },
        "baseUrls": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "countryCode": {
          "type": "string"
        },
        "countryGroupCode": {
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "isDefaultOpted": {
          "type": "boolean",
          "x-omitempty": false
        },
        "isDefaultSelection": {
          "type": "boolean",
          "x-omitempty": false
        },
        "isMandatory": {
          "type": "boolean",
          "x-omitempty": false
        },
        "namespace": {
          "type": "string"
        },
        "policyName": {
          "type": "string"
        },
        "policyType": {
          "type": "string"
        },
        "policyVersions": {
          "items": {
            "$ref": "#/definitions/PolicyVersionWithLocalizedVersionObject"
          },
          "type": "array"
        },
        "readableId": {
          "type": "string"
        },
        "shouldNotifyOnUpdate": {
          "type": "boolean",
          "x-omitempty": false
        },
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "basePolicyId",
        "countryCode",
        "id",
        "isDefaultOpted",
        "isDefaultSelection",
        "isMandatory",
        "namespace",
        "policyName",
        "policyType",
        "shouldNotifyOnUpdate"
      ],
      "type": "object"
    },
    "RetrievePolicyResponse": {
      "properties": {
        "countryCode": {
          "type": "string"
        },
        "countryGroupCode": {
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "isDefaultOpted": {
          "type": "boolean",
          "x-omitempty": false
        },
        "isDefaultSelection": {
          "type": "boolean",
          "x-omitempty": false
        },
        "isMandatory": {
          "type": "boolean",
          "x-omitempty": false
        },
        "policyName": {
          "type": "string"
        },
        "policyVersions": {
          "items": {
            "$ref": "#/definitions/PolicyVersionObject"
          },
          "type": "array"
        },
        "readableId": {
          "type": "string"
        },
        "shouldNotifyOnUpdate": {
          "type": "boolean",
          "x-omitempty": false
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "countryCode",
        "id",
        "isDefaultOpted",
        "isDefaultSelection",
        "isMandatory",
        "policyName",
        "shouldNotifyOnUpdate"
      ],
      "type": "object"
    },
    "RetrievePolicyTypeResponse": {
      "properties": {
        "createdAt": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "isNeedDocument": {
          "type": "boolean",
          "x-omitempty": false
        },
        "policyTypeName": {
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "id",
        "isNeedDocument",
        "policyTypeName"
      ],
      "type": "object"
    },
    "RetrievePolicyVersionResponse": {
      "properties": {
        "basePolicyId": {
          "readOnly": true,
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "description": {
          "type": "string"
        },
        "displayVersion": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "isCommitted": {
          "type": "boolean",
          "x-omitempty": false
        },
        "isInEffect": {
          "type": "boolean",
          "x-omitempty": false
        },
        "localizedPolicyVersions": {
          "items": {
            "$ref": "#/definitions/LocalizedPolicyVersionObject"
          },
          "type": "array"
        },
        "policyId": {
          "type": "string"
        },
        "publishedDate": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "status": {
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "displayVersion",
        "id",
        "isCommitted",
        "isInEffect",
        "policyId"
      ],
      "type": "object"
    },
    "RetrieveUserAcceptedAgreementResponse": {
      "properties": {
        "createdAt": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "displayName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "isAccepted": {
          "type": "boolean",
          "x-omitempty": false
        },
        "localizedPolicyVersion": {
          "$ref": "#/definitions/LocalizedPolicyVersionObject"
        },
        "namespace": {
          "type": "string"
        },
        "policyName": {
          "type": "string"
        },
        "policyType": {
          "type": "string"
        },
        "publisherUserId": {
          "type": "string"
        },
        "signingDate": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "userId": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "RetrieveUserEligibilitiesIndirectResponse": {
      "properties": {
        "isComply": {
          "type": "boolean",
          "x-omitempty": false
        }
      },
      "required": [
        "isComply"
      ],
      "type": "object"
    },
    "RetrieveUserEligibilitiesResponse": {
      "properties": {
        "baseUrls": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "countryCode": {
          "type": "string"
        },
        "countryGroupCode": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "isAccepted": {
          "type": "boolean",
          "x-omitempty": false
        },
        "isMandatory": {
          "type": "boolean",
          "x-omitempty": false
        },
        "namespace": {
          "type": "string"
        },
        "policyId": {
          "type": "string"
        },
        "policyName": {
          "type": "string"
        },
        "policyType": {
          "type": "string"
        },
        "policyVersions": {
          "items": {
            "$ref": "#/definitions/PolicyVersionWithLocalizedVersionObject"
          },
          "type": "array"
        },
        "readableId": {
          "type": "string"
        }
      },
      "required": [
        "countryCode",
        "isAccepted",
        "isMandatory",
        "namespace",
        "policyId",
        "policyName",
        "policyType"
      ],
      "type": "object"
    },
    "RetrieveUserInfoCacheStatusResponse": {
      "properties": {
        "lastUpdatedAt": {
          "format": "date-time",
          "type": "string",
          "x-nullable": false
        },
        "namespace": {
          "type": "string"
        }
      },
      "required": [
        "lastUpdatedAt",
        "namespace"
      ],
      "type": "object"
    },
    "UpdateBasePolicyRequest": {
      "properties": {
        "affectedClientIds": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        },
        "affectedCountries": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "basePolicyName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        }
      },
      "type": "object"
    },
    "UpdateBasePolicyResponse": {
      "properties": {
        "affectedClientIds": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        },
        "affectedCountries": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "description": {
          "type": "string"
        },
        "globalPolicyName": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "policyId": {
          "type": "string"
        },
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        },
        "typeId": {
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "UpdateLocalizedPolicyVersionRequest": {
      "properties": {
        "attachmentChecksum": {
          "type": "string"
        },
        "attachmentLocation": {
          "type": "string"
        },
        "attachmentVersionIdentifier": {
          "type": "string"
        },
        "contentType": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "UpdateLocalizedPolicyVersionResponse": {
      "properties": {
        "attachmentChecksum": {
          "type": "string"
        },
        "attachmentLocation": {
          "type": "string"
        },
        "attachmentVersionIdentifier": {
          "type": "string"
        },
        "contentType": {
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "localeCode": {
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "UpdatePolicyRequest": {
      "properties": {
        "description": {
          "type": "string"
        },
        "isDefaultOpted": {
          "type": "boolean",
          "x-omitempty": false
        },
        "isMandatory": {
          "type": "boolean",
          "x-omitempty": false
        },
        "policyName": {
          "type": "string"
        },
        "readableId": {
          "type": "string"
        },
        "shouldNotifyOnUpdate": {
          "type": "boolean",
          "x-omitempty": false
        }
      },
      "required": [
        "isDefaultOpted",
        "isMandatory",
        "policyName",
        "shouldNotifyOnUpdate"
      ],
      "type": "object"
    },
    "UpdatePolicyVersionRequest": {
      "properties": {
        "description": {
          "type": "string"
        },
        "displayVersion": {
          "type": "string"
        },
        "isCommitted": {
          "type": "boolean",
          "x-omitempty": false
        }
      },
      "required": [
        "description",
        "displayVersion",
        "isCommitted"
      ],
      "type": "object"
    },
    "UpdatePolicyVersionResponse": {
      "properties": {
        "basePolicyId": {
          "readOnly": true,
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "description": {
          "type": "string"
        },
        "displayVersion": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "isCommitted": {
          "type": "boolean",
          "x-omitempty": false
        },
        "publishedDate": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "status": {
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "UploadLocalizedPolicyVersionAttachmentResponse": {
      "properties": {
        "attachmentChecksum": {
          "type": "string"
        },
        "attachmentLocation": {
          "type": "string"
        },
        "attachmentUploadUrl": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "UploadPolicyVersionAttachmentRequest": {
      "properties": {
        "contentMD5": {
          "type": "string"
        },
        "contentType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ValidationErrorEntity": {
      "properties": {
        "errorCode": {
          "description": "numeric error code",
          "format": "int32",
          "type": "integer"
        },
        "errorMessage": {
          "description": "error message",
          "type": "string"
        },
        "errors": {
          "items": {
            "$ref": "#/definitions/FieldValidationError"
          },
          "type": "array"
        }
      },
      "required": [
        "errorCode",
        "errorMessage"
      ],
      "type": "object"
    }
  }
}
// Code generated by go-swagger; DO NOT EDIT.

package entitlement

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"io/ioutil"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/AccelByte/accelbyte-go-sdk/platform-sdk/pkg/platformclientmodels"
)

// PublicGetUserDistributionReceiversReader is a Reader for the PublicGetUserDistributionReceivers structure.
type PublicGetUserDistributionReceiversReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PublicGetUserDistributionReceiversReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPublicGetUserDistributionReceiversOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPublicGetUserDistributionReceiversBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewPublicGetUserDistributionReceiversNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		data, err := ioutil.ReadAll(response.Body())
		if err != nil {
			return nil, err
		}

		return nil, fmt.Errorf("Requested GET /public/namespaces/{namespace}/users/{userId}/entitlements/receivers returns an error %d: %s", response.Code(), string(data))
	}
}

// NewPublicGetUserDistributionReceiversOK creates a PublicGetUserDistributionReceiversOK with default headers values
func NewPublicGetUserDistributionReceiversOK() *PublicGetUserDistributionReceiversOK {
	return &PublicGetUserDistributionReceiversOK{}
}

/*PublicGetUserDistributionReceiversOK handles this case with default header values.

  successful operation
*/
type PublicGetUserDistributionReceiversOK struct {
	Payload []*platformclientmodels.DistributionReceiverInfo
}

func (o *PublicGetUserDistributionReceiversOK) Error() string {
	return fmt.Sprintf("[GET /public/namespaces/{namespace}/users/{userId}/entitlements/receivers][%d] publicGetUserDistributionReceiversOK  %+v", 200, o.Payload)
}

func (o *PublicGetUserDistributionReceiversOK) GetPayload() []*platformclientmodels.DistributionReceiverInfo {
	return o.Payload
}

func (o *PublicGetUserDistributionReceiversOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPublicGetUserDistributionReceiversBadRequest creates a PublicGetUserDistributionReceiversBadRequest with default headers values
func NewPublicGetUserDistributionReceiversBadRequest() *PublicGetUserDistributionReceiversBadRequest {
	return &PublicGetUserDistributionReceiversBadRequest{}
}

/*PublicGetUserDistributionReceiversBadRequest handles this case with default header values.

  <table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>31123</td><td>Publisher namespace [{namespace}] is not distributable</td></tr></table>
*/
type PublicGetUserDistributionReceiversBadRequest struct {
	Payload *platformclientmodels.ErrorEntity
}

func (o *PublicGetUserDistributionReceiversBadRequest) Error() string {
	return fmt.Sprintf("[GET /public/namespaces/{namespace}/users/{userId}/entitlements/receivers][%d] publicGetUserDistributionReceiversBadRequest  %+v", 400, o.Payload)
}

func (o *PublicGetUserDistributionReceiversBadRequest) GetPayload() *platformclientmodels.ErrorEntity {
	return o.Payload
}

func (o *PublicGetUserDistributionReceiversBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(platformclientmodels.ErrorEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPublicGetUserDistributionReceiversNotFound creates a PublicGetUserDistributionReceiversNotFound with default headers values
func NewPublicGetUserDistributionReceiversNotFound() *PublicGetUserDistributionReceiversNotFound {
	return &PublicGetUserDistributionReceiversNotFound{}
}

/*PublicGetUserDistributionReceiversNotFound handles this case with default header values.

  <table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20017</td><td>user [{userId}] in namespace [{namespaceA}] does not linked in [{namespaceB}]</td></tr></table>
*/
type PublicGetUserDistributionReceiversNotFound struct {
	Payload *platformclientmodels.ErrorEntity
}

func (o *PublicGetUserDistributionReceiversNotFound) Error() string {
	return fmt.Sprintf("[GET /public/namespaces/{namespace}/users/{userId}/entitlements/receivers][%d] publicGetUserDistributionReceiversNotFound  %+v", 404, o.Payload)
}

func (o *PublicGetUserDistributionReceiversNotFound) GetPayload() *platformclientmodels.ErrorEntity {
	return o.Payload
}

func (o *PublicGetUserDistributionReceiversNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(platformclientmodels.ErrorEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

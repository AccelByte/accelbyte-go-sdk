// Code generated by go-swagger; DO NOT EDIT.

package notification

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"io/ioutil"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/AccelByte/accelbyte-go-sdk/lobby-sdk/pkg/lobbyclientmodels"
)

// GetAllStoredNotificationsV1Reader is a Reader for the GetAllStoredNotificationsV1 structure.
type GetAllStoredNotificationsV1Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllStoredNotificationsV1Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllStoredNotificationsV1OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAllStoredNotificationsV1BadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAllStoredNotificationsV1Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGetAllStoredNotificationsV1Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetAllStoredNotificationsV1NotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		data, err := ioutil.ReadAll(response.Body())
		if err != nil {
			return nil, err
		}

		return nil, fmt.Errorf("Requested GET /lobby/v1/public/notification/namespaces/{namespace}/users/me returns an error %d: %s", response.Code(), string(data))
	}
}

// NewGetAllStoredNotificationsV1OK creates a GetAllStoredNotificationsV1OK with default headers values
func NewGetAllStoredNotificationsV1OK() *GetAllStoredNotificationsV1OK {
	return &GetAllStoredNotificationsV1OK{}
}

/*GetAllStoredNotificationsV1OK handles this case with default header values.

  OK
*/
type GetAllStoredNotificationsV1OK struct {
	Payload []*lobbyclientmodels.ModelGetStoredNotificationResp
}

func (o *GetAllStoredNotificationsV1OK) Error() string {
	return fmt.Sprintf("[GET /lobby/v1/public/notification/namespaces/{namespace}/users/me][%d] getAllStoredNotificationsV1OK  %+v", 200, o.Payload)
}

func (o *GetAllStoredNotificationsV1OK) GetPayload() []*lobbyclientmodels.ModelGetStoredNotificationResp {
	return o.Payload
}

func (o *GetAllStoredNotificationsV1OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllStoredNotificationsV1BadRequest creates a GetAllStoredNotificationsV1BadRequest with default headers values
func NewGetAllStoredNotificationsV1BadRequest() *GetAllStoredNotificationsV1BadRequest {
	return &GetAllStoredNotificationsV1BadRequest{}
}

/*GetAllStoredNotificationsV1BadRequest handles this case with default header values.

  Bad Request
*/
type GetAllStoredNotificationsV1BadRequest struct {
	Payload *lobbyclientmodels.RestapiErrorResponseV1
}

func (o *GetAllStoredNotificationsV1BadRequest) Error() string {
	return fmt.Sprintf("[GET /lobby/v1/public/notification/namespaces/{namespace}/users/me][%d] getAllStoredNotificationsV1BadRequest  %+v", 400, o.Payload)
}

func (o *GetAllStoredNotificationsV1BadRequest) GetPayload() *lobbyclientmodels.RestapiErrorResponseV1 {
	return o.Payload
}

func (o *GetAllStoredNotificationsV1BadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(lobbyclientmodels.RestapiErrorResponseV1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllStoredNotificationsV1Unauthorized creates a GetAllStoredNotificationsV1Unauthorized with default headers values
func NewGetAllStoredNotificationsV1Unauthorized() *GetAllStoredNotificationsV1Unauthorized {
	return &GetAllStoredNotificationsV1Unauthorized{}
}

/*GetAllStoredNotificationsV1Unauthorized handles this case with default header values.

  Unauthorized
*/
type GetAllStoredNotificationsV1Unauthorized struct {
	Payload *lobbyclientmodels.RestapiErrorResponseV1
}

func (o *GetAllStoredNotificationsV1Unauthorized) Error() string {
	return fmt.Sprintf("[GET /lobby/v1/public/notification/namespaces/{namespace}/users/me][%d] getAllStoredNotificationsV1Unauthorized  %+v", 401, o.Payload)
}

func (o *GetAllStoredNotificationsV1Unauthorized) GetPayload() *lobbyclientmodels.RestapiErrorResponseV1 {
	return o.Payload
}

func (o *GetAllStoredNotificationsV1Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(lobbyclientmodels.RestapiErrorResponseV1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllStoredNotificationsV1Forbidden creates a GetAllStoredNotificationsV1Forbidden with default headers values
func NewGetAllStoredNotificationsV1Forbidden() *GetAllStoredNotificationsV1Forbidden {
	return &GetAllStoredNotificationsV1Forbidden{}
}

/*GetAllStoredNotificationsV1Forbidden handles this case with default header values.

  Forbidden
*/
type GetAllStoredNotificationsV1Forbidden struct {
	Payload *lobbyclientmodels.RestapiErrorResponseV1
}

func (o *GetAllStoredNotificationsV1Forbidden) Error() string {
	return fmt.Sprintf("[GET /lobby/v1/public/notification/namespaces/{namespace}/users/me][%d] getAllStoredNotificationsV1Forbidden  %+v", 403, o.Payload)
}

func (o *GetAllStoredNotificationsV1Forbidden) GetPayload() *lobbyclientmodels.RestapiErrorResponseV1 {
	return o.Payload
}

func (o *GetAllStoredNotificationsV1Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(lobbyclientmodels.RestapiErrorResponseV1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllStoredNotificationsV1NotFound creates a GetAllStoredNotificationsV1NotFound with default headers values
func NewGetAllStoredNotificationsV1NotFound() *GetAllStoredNotificationsV1NotFound {
	return &GetAllStoredNotificationsV1NotFound{}
}

/*GetAllStoredNotificationsV1NotFound handles this case with default header values.

  Not Found
*/
type GetAllStoredNotificationsV1NotFound struct {
	Payload *lobbyclientmodels.RestapiErrorResponseV1
}

func (o *GetAllStoredNotificationsV1NotFound) Error() string {
	return fmt.Sprintf("[GET /lobby/v1/public/notification/namespaces/{namespace}/users/me][%d] getAllStoredNotificationsV1NotFound  %+v", 404, o.Payload)
}

func (o *GetAllStoredNotificationsV1NotFound) GetPayload() *lobbyclientmodels.RestapiErrorResponseV1 {
	return o.Payload
}

func (o *GetAllStoredNotificationsV1NotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(lobbyclientmodels.RestapiErrorResponseV1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

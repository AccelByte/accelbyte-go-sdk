// Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// Code generated by go-swagger; DO NOT EDIT.

package public_follow

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"
	"io/ioutil"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/AccelByte/accelbyte-go-sdk/ugc-sdk/pkg/ugcclientmodels"
)

// GetPublicFollowersReader is a Reader for the GetPublicFollowers structure.
type GetPublicFollowersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPublicFollowersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPublicFollowersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetPublicFollowersUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetPublicFollowersNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewGetPublicFollowersInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		data, err := ioutil.ReadAll(response.Body())
		if err != nil {
			return nil, err
		}

		return nil, fmt.Errorf("Requested GET /ugc/v1/public/namespaces/{namespace}/users/{userId}/followers returns an error %d: %s", response.Code(), string(data))
	}
}

// NewGetPublicFollowersOK creates a GetPublicFollowersOK with default headers values
func NewGetPublicFollowersOK() *GetPublicFollowersOK {
	return &GetPublicFollowersOK{}
}

/*GetPublicFollowersOK handles this case with default header values.

  OK
*/
type GetPublicFollowersOK struct {
	Payload *ugcclientmodels.ModelsPaginatedCreatorOverviewResponse
}

func (o *GetPublicFollowersOK) Error() string {
	return fmt.Sprintf("[GET /ugc/v1/public/namespaces/{namespace}/users/{userId}/followers][%d] getPublicFollowersOK  %+v", 200, o.ToJSONString())
}

func (o *GetPublicFollowersOK) ToJSONString() string {
	if o.Payload == nil {
		return "{}"
	}

	b, err := json.Marshal(o.Payload)
	if err != nil {
		fmt.Println(err)

		return fmt.Sprintf("Failed to marshal the payload: %+v", o.Payload)
	}

	return fmt.Sprintf("%+v", string(b))
}

func (o *GetPublicFollowersOK) GetPayload() *ugcclientmodels.ModelsPaginatedCreatorOverviewResponse {
	return o.Payload
}

func (o *GetPublicFollowersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ugcclientmodels.ModelsPaginatedCreatorOverviewResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPublicFollowersUnauthorized creates a GetPublicFollowersUnauthorized with default headers values
func NewGetPublicFollowersUnauthorized() *GetPublicFollowersUnauthorized {
	return &GetPublicFollowersUnauthorized{}
}

/*GetPublicFollowersUnauthorized handles this case with default header values.

  Unauthorized
*/
type GetPublicFollowersUnauthorized struct {
	Payload *ugcclientmodels.ResponseError
}

func (o *GetPublicFollowersUnauthorized) Error() string {
	return fmt.Sprintf("[GET /ugc/v1/public/namespaces/{namespace}/users/{userId}/followers][%d] getPublicFollowersUnauthorized  %+v", 401, o.ToJSONString())
}

func (o *GetPublicFollowersUnauthorized) ToJSONString() string {
	if o.Payload == nil {
		return "{}"
	}

	b, err := json.Marshal(o.Payload)
	if err != nil {
		fmt.Println(err)

		return fmt.Sprintf("Failed to marshal the payload: %+v", o.Payload)
	}

	return fmt.Sprintf("%+v", string(b))
}

func (o *GetPublicFollowersUnauthorized) GetPayload() *ugcclientmodels.ResponseError {
	return o.Payload
}

func (o *GetPublicFollowersUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ugcclientmodels.ResponseError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPublicFollowersNotFound creates a GetPublicFollowersNotFound with default headers values
func NewGetPublicFollowersNotFound() *GetPublicFollowersNotFound {
	return &GetPublicFollowersNotFound{}
}

/*GetPublicFollowersNotFound handles this case with default header values.

  Not Found
*/
type GetPublicFollowersNotFound struct {
	Payload *ugcclientmodels.ResponseError
}

func (o *GetPublicFollowersNotFound) Error() string {
	return fmt.Sprintf("[GET /ugc/v1/public/namespaces/{namespace}/users/{userId}/followers][%d] getPublicFollowersNotFound  %+v", 404, o.ToJSONString())
}

func (o *GetPublicFollowersNotFound) ToJSONString() string {
	if o.Payload == nil {
		return "{}"
	}

	b, err := json.Marshal(o.Payload)
	if err != nil {
		fmt.Println(err)

		return fmt.Sprintf("Failed to marshal the payload: %+v", o.Payload)
	}

	return fmt.Sprintf("%+v", string(b))
}

func (o *GetPublicFollowersNotFound) GetPayload() *ugcclientmodels.ResponseError {
	return o.Payload
}

func (o *GetPublicFollowersNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ugcclientmodels.ResponseError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPublicFollowersInternalServerError creates a GetPublicFollowersInternalServerError with default headers values
func NewGetPublicFollowersInternalServerError() *GetPublicFollowersInternalServerError {
	return &GetPublicFollowersInternalServerError{}
}

/*GetPublicFollowersInternalServerError handles this case with default header values.

  Internal Server Error
*/
type GetPublicFollowersInternalServerError struct {
	Payload *ugcclientmodels.ResponseError
}

func (o *GetPublicFollowersInternalServerError) Error() string {
	return fmt.Sprintf("[GET /ugc/v1/public/namespaces/{namespace}/users/{userId}/followers][%d] getPublicFollowersInternalServerError  %+v", 500, o.ToJSONString())
}

func (o *GetPublicFollowersInternalServerError) ToJSONString() string {
	if o.Payload == nil {
		return "{}"
	}

	b, err := json.Marshal(o.Payload)
	if err != nil {
		fmt.Println(err)

		return fmt.Sprintf("Failed to marshal the payload: %+v", o.Payload)
	}

	return fmt.Sprintf("%+v", string(b))
}

func (o *GetPublicFollowersInternalServerError) GetPayload() *ugcclientmodels.ResponseError {
	return o.Payload
}

func (o *GetPublicFollowersInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ugcclientmodels.ResponseError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

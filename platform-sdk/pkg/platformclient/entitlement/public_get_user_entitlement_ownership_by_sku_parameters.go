// Code generated by go-swagger; DO NOT EDIT.

package entitlement

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewPublicGetUserEntitlementOwnershipBySkuParams creates a new PublicGetUserEntitlementOwnershipBySkuParams object
// with the default values initialized.
func NewPublicGetUserEntitlementOwnershipBySkuParams() *PublicGetUserEntitlementOwnershipBySkuParams {
	var ()
	return &PublicGetUserEntitlementOwnershipBySkuParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPublicGetUserEntitlementOwnershipBySkuParamsWithTimeout creates a new PublicGetUserEntitlementOwnershipBySkuParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPublicGetUserEntitlementOwnershipBySkuParamsWithTimeout(timeout time.Duration) *PublicGetUserEntitlementOwnershipBySkuParams {
	var ()
	return &PublicGetUserEntitlementOwnershipBySkuParams{

		timeout: timeout,
	}
}

// NewPublicGetUserEntitlementOwnershipBySkuParamsWithContext creates a new PublicGetUserEntitlementOwnershipBySkuParams object
// with the default values initialized, and the ability to set a context for a request
func NewPublicGetUserEntitlementOwnershipBySkuParamsWithContext(ctx context.Context) *PublicGetUserEntitlementOwnershipBySkuParams {
	var ()
	return &PublicGetUserEntitlementOwnershipBySkuParams{

		Context: ctx,
	}
}

// NewPublicGetUserEntitlementOwnershipBySkuParamsWithHTTPClient creates a new PublicGetUserEntitlementOwnershipBySkuParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPublicGetUserEntitlementOwnershipBySkuParamsWithHTTPClient(client *http.Client) *PublicGetUserEntitlementOwnershipBySkuParams {
	var ()
	return &PublicGetUserEntitlementOwnershipBySkuParams{
		HTTPClient: client,
	}
}

/*PublicGetUserEntitlementOwnershipBySkuParams contains all the parameters to send to the API endpoint
for the public get user entitlement ownership by sku operation typically these are written to a http.Request
*/
type PublicGetUserEntitlementOwnershipBySkuParams struct {

	/*EntitlementClazz*/
	EntitlementClazz *string
	/*Namespace*/
	Namespace string
	/*Sku*/
	Sku string
	/*UserID*/
	UserID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the public get user entitlement ownership by sku params
func (o *PublicGetUserEntitlementOwnershipBySkuParams) WithTimeout(timeout time.Duration) *PublicGetUserEntitlementOwnershipBySkuParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the public get user entitlement ownership by sku params
func (o *PublicGetUserEntitlementOwnershipBySkuParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the public get user entitlement ownership by sku params
func (o *PublicGetUserEntitlementOwnershipBySkuParams) WithContext(ctx context.Context) *PublicGetUserEntitlementOwnershipBySkuParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the public get user entitlement ownership by sku params
func (o *PublicGetUserEntitlementOwnershipBySkuParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the public get user entitlement ownership by sku params
func (o *PublicGetUserEntitlementOwnershipBySkuParams) WithHTTPClient(client *http.Client) *PublicGetUserEntitlementOwnershipBySkuParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the public get user entitlement ownership by sku params
func (o *PublicGetUserEntitlementOwnershipBySkuParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithEntitlementClazz adds the entitlementClazz to the public get user entitlement ownership by sku params
func (o *PublicGetUserEntitlementOwnershipBySkuParams) WithEntitlementClazz(entitlementClazz *string) *PublicGetUserEntitlementOwnershipBySkuParams {
	o.SetEntitlementClazz(entitlementClazz)
	return o
}

// SetEntitlementClazz adds the entitlementClazz to the public get user entitlement ownership by sku params
func (o *PublicGetUserEntitlementOwnershipBySkuParams) SetEntitlementClazz(entitlementClazz *string) {
	o.EntitlementClazz = entitlementClazz
}

// WithNamespace adds the namespace to the public get user entitlement ownership by sku params
func (o *PublicGetUserEntitlementOwnershipBySkuParams) WithNamespace(namespace string) *PublicGetUserEntitlementOwnershipBySkuParams {
	o.SetNamespace(namespace)
	return o
}

// SetNamespace adds the namespace to the public get user entitlement ownership by sku params
func (o *PublicGetUserEntitlementOwnershipBySkuParams) SetNamespace(namespace string) {
	o.Namespace = namespace
}

// WithSku adds the sku to the public get user entitlement ownership by sku params
func (o *PublicGetUserEntitlementOwnershipBySkuParams) WithSku(sku string) *PublicGetUserEntitlementOwnershipBySkuParams {
	o.SetSku(sku)
	return o
}

// SetSku adds the sku to the public get user entitlement ownership by sku params
func (o *PublicGetUserEntitlementOwnershipBySkuParams) SetSku(sku string) {
	o.Sku = sku
}

// WithUserID adds the userID to the public get user entitlement ownership by sku params
func (o *PublicGetUserEntitlementOwnershipBySkuParams) WithUserID(userID string) *PublicGetUserEntitlementOwnershipBySkuParams {
	o.SetUserID(userID)
	return o
}

// SetUserID adds the userId to the public get user entitlement ownership by sku params
func (o *PublicGetUserEntitlementOwnershipBySkuParams) SetUserID(userID string) {
	o.UserID = userID
}

// WriteToRequest writes these params to a swagger request
func (o *PublicGetUserEntitlementOwnershipBySkuParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.EntitlementClazz != nil {

		// query param entitlementClazz
		var qrEntitlementClazz string
		if o.EntitlementClazz != nil {
			qrEntitlementClazz = *o.EntitlementClazz
		}
		qEntitlementClazz := qrEntitlementClazz
		if qEntitlementClazz != "" {
			if err := r.SetQueryParam("entitlementClazz", qEntitlementClazz); err != nil {
				return err
			}
		}

	}

	// path param namespace
	if err := r.SetPathParam("namespace", o.Namespace); err != nil {
		return err
	}

	// query param sku
	qrSku := o.Sku
	qSku := qrSku
	if qSku != "" {
		if err := r.SetQueryParam("sku", qSku); err != nil {
			return err
		}
	}

	// path param userId
	if err := r.SetPathParam("userId", o.UserID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

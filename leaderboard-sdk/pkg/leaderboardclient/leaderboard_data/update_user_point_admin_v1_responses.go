// Code generated by go-swagger; DO NOT EDIT.

package leaderboard_data

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"io/ioutil"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/AccelByte/accelbyte-go-sdk/leaderboard-sdk/pkg/leaderboardclientmodels"
)

// UpdateUserPointAdminV1Reader is a Reader for the UpdateUserPointAdminV1 structure.
type UpdateUserPointAdminV1Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateUserPointAdminV1Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateUserPointAdminV1OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateUserPointAdminV1BadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateUserPointAdminV1Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewUpdateUserPointAdminV1Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewUpdateUserPointAdminV1NotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewUpdateUserPointAdminV1InternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		data, err := ioutil.ReadAll(response.Body())
		if err != nil {
			return nil, err
		}

		return nil, fmt.Errorf("Requested PUT /leaderboard/v1/admin/namespaces/{namespace}/leaderboards/{leaderboardCode}/users/{userId} returns an error %d: %s", response.Code(), string(data))
	}
}

// NewUpdateUserPointAdminV1OK creates a UpdateUserPointAdminV1OK with default headers values
func NewUpdateUserPointAdminV1OK() *UpdateUserPointAdminV1OK {
	return &UpdateUserPointAdminV1OK{}
}

/*UpdateUserPointAdminV1OK handles this case with default header values.

  OK
*/
type UpdateUserPointAdminV1OK struct {
	Payload *leaderboardclientmodels.ModelsUpdateUserPointAdminV1Response
}

func (o *UpdateUserPointAdminV1OK) Error() string {
	return fmt.Sprintf("[PUT /leaderboard/v1/admin/namespaces/{namespace}/leaderboards/{leaderboardCode}/users/{userId}][%d] updateUserPointAdminV1OK  %+v", 200, o.Payload)
}

func (o *UpdateUserPointAdminV1OK) GetPayload() *leaderboardclientmodels.ModelsUpdateUserPointAdminV1Response {
	return o.Payload
}

func (o *UpdateUserPointAdminV1OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(leaderboardclientmodels.ModelsUpdateUserPointAdminV1Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateUserPointAdminV1BadRequest creates a UpdateUserPointAdminV1BadRequest with default headers values
func NewUpdateUserPointAdminV1BadRequest() *UpdateUserPointAdminV1BadRequest {
	return &UpdateUserPointAdminV1BadRequest{}
}

/*UpdateUserPointAdminV1BadRequest handles this case with default header values.

  Bad Request
*/
type UpdateUserPointAdminV1BadRequest struct {
	Payload *leaderboardclientmodels.ResponseErrorResponse
}

func (o *UpdateUserPointAdminV1BadRequest) Error() string {
	return fmt.Sprintf("[PUT /leaderboard/v1/admin/namespaces/{namespace}/leaderboards/{leaderboardCode}/users/{userId}][%d] updateUserPointAdminV1BadRequest  %+v", 400, o.Payload)
}

func (o *UpdateUserPointAdminV1BadRequest) GetPayload() *leaderboardclientmodels.ResponseErrorResponse {
	return o.Payload
}

func (o *UpdateUserPointAdminV1BadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(leaderboardclientmodels.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateUserPointAdminV1Unauthorized creates a UpdateUserPointAdminV1Unauthorized with default headers values
func NewUpdateUserPointAdminV1Unauthorized() *UpdateUserPointAdminV1Unauthorized {
	return &UpdateUserPointAdminV1Unauthorized{}
}

/*UpdateUserPointAdminV1Unauthorized handles this case with default header values.

  Unauthorized
*/
type UpdateUserPointAdminV1Unauthorized struct {
	Payload *leaderboardclientmodels.ResponseErrorResponse
}

func (o *UpdateUserPointAdminV1Unauthorized) Error() string {
	return fmt.Sprintf("[PUT /leaderboard/v1/admin/namespaces/{namespace}/leaderboards/{leaderboardCode}/users/{userId}][%d] updateUserPointAdminV1Unauthorized  %+v", 401, o.Payload)
}

func (o *UpdateUserPointAdminV1Unauthorized) GetPayload() *leaderboardclientmodels.ResponseErrorResponse {
	return o.Payload
}

func (o *UpdateUserPointAdminV1Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(leaderboardclientmodels.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateUserPointAdminV1Forbidden creates a UpdateUserPointAdminV1Forbidden with default headers values
func NewUpdateUserPointAdminV1Forbidden() *UpdateUserPointAdminV1Forbidden {
	return &UpdateUserPointAdminV1Forbidden{}
}

/*UpdateUserPointAdminV1Forbidden handles this case with default header values.

  Forbidden
*/
type UpdateUserPointAdminV1Forbidden struct {
	Payload *leaderboardclientmodels.ResponseErrorResponse
}

func (o *UpdateUserPointAdminV1Forbidden) Error() string {
	return fmt.Sprintf("[PUT /leaderboard/v1/admin/namespaces/{namespace}/leaderboards/{leaderboardCode}/users/{userId}][%d] updateUserPointAdminV1Forbidden  %+v", 403, o.Payload)
}

func (o *UpdateUserPointAdminV1Forbidden) GetPayload() *leaderboardclientmodels.ResponseErrorResponse {
	return o.Payload
}

func (o *UpdateUserPointAdminV1Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(leaderboardclientmodels.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateUserPointAdminV1NotFound creates a UpdateUserPointAdminV1NotFound with default headers values
func NewUpdateUserPointAdminV1NotFound() *UpdateUserPointAdminV1NotFound {
	return &UpdateUserPointAdminV1NotFound{}
}

/*UpdateUserPointAdminV1NotFound handles this case with default header values.

  Not Found
*/
type UpdateUserPointAdminV1NotFound struct {
	Payload *leaderboardclientmodels.ResponseErrorResponse
}

func (o *UpdateUserPointAdminV1NotFound) Error() string {
	return fmt.Sprintf("[PUT /leaderboard/v1/admin/namespaces/{namespace}/leaderboards/{leaderboardCode}/users/{userId}][%d] updateUserPointAdminV1NotFound  %+v", 404, o.Payload)
}

func (o *UpdateUserPointAdminV1NotFound) GetPayload() *leaderboardclientmodels.ResponseErrorResponse {
	return o.Payload
}

func (o *UpdateUserPointAdminV1NotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(leaderboardclientmodels.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateUserPointAdminV1InternalServerError creates a UpdateUserPointAdminV1InternalServerError with default headers values
func NewUpdateUserPointAdminV1InternalServerError() *UpdateUserPointAdminV1InternalServerError {
	return &UpdateUserPointAdminV1InternalServerError{}
}

/*UpdateUserPointAdminV1InternalServerError handles this case with default header values.

  Internal Server Error
*/
type UpdateUserPointAdminV1InternalServerError struct {
	Payload *leaderboardclientmodels.ResponseErrorResponse
}

func (o *UpdateUserPointAdminV1InternalServerError) Error() string {
	return fmt.Sprintf("[PUT /leaderboard/v1/admin/namespaces/{namespace}/leaderboards/{leaderboardCode}/users/{userId}][%d] updateUserPointAdminV1InternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateUserPointAdminV1InternalServerError) GetPayload() *leaderboardclientmodels.ResponseErrorResponse {
	return o.Payload
}

func (o *UpdateUserPointAdminV1InternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(leaderboardclientmodels.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// Code generated by go-swagger; DO NOT EDIT.

package admin_game_record

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/AccelByte/accelbyte-go-sdk/cloudsave-sdk/pkg/cloudsaveclientmodels"
)

// NewPutAdminGameRecordHandlerV1Params creates a new PutAdminGameRecordHandlerV1Params object
// with the default values initialized.
func NewPutAdminGameRecordHandlerV1Params() *PutAdminGameRecordHandlerV1Params {
	var ()
	return &PutAdminGameRecordHandlerV1Params{

		timeout: cr.DefaultTimeout,
	}
}

// NewPutAdminGameRecordHandlerV1ParamsWithTimeout creates a new PutAdminGameRecordHandlerV1Params object
// with the default values initialized, and the ability to set a timeout on a request
func NewPutAdminGameRecordHandlerV1ParamsWithTimeout(timeout time.Duration) *PutAdminGameRecordHandlerV1Params {
	var ()
	return &PutAdminGameRecordHandlerV1Params{

		timeout: timeout,
	}
}

// NewPutAdminGameRecordHandlerV1ParamsWithContext creates a new PutAdminGameRecordHandlerV1Params object
// with the default values initialized, and the ability to set a context for a request
func NewPutAdminGameRecordHandlerV1ParamsWithContext(ctx context.Context) *PutAdminGameRecordHandlerV1Params {
	var ()
	return &PutAdminGameRecordHandlerV1Params{

		Context: ctx,
	}
}

// NewPutAdminGameRecordHandlerV1ParamsWithHTTPClient creates a new PutAdminGameRecordHandlerV1Params object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPutAdminGameRecordHandlerV1ParamsWithHTTPClient(client *http.Client) *PutAdminGameRecordHandlerV1Params {
	var ()
	return &PutAdminGameRecordHandlerV1Params{
		HTTPClient: client,
	}
}

/*PutAdminGameRecordHandlerV1Params contains all the parameters to send to the API endpoint
for the put admin game record handler v1 operation typically these are written to a http.Request
*/
type PutAdminGameRecordHandlerV1Params struct {

	/*Body*/
	Body cloudsaveclientmodels.ModelsGameRecordRequest
	/*Key
	  key of record

	*/
	Key string
	/*Namespace
	  namespace of the game

	*/
	Namespace string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the put admin game record handler v1 params
func (o *PutAdminGameRecordHandlerV1Params) WithTimeout(timeout time.Duration) *PutAdminGameRecordHandlerV1Params {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the put admin game record handler v1 params
func (o *PutAdminGameRecordHandlerV1Params) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the put admin game record handler v1 params
func (o *PutAdminGameRecordHandlerV1Params) WithContext(ctx context.Context) *PutAdminGameRecordHandlerV1Params {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the put admin game record handler v1 params
func (o *PutAdminGameRecordHandlerV1Params) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the put admin game record handler v1 params
func (o *PutAdminGameRecordHandlerV1Params) WithHTTPClient(client *http.Client) *PutAdminGameRecordHandlerV1Params {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the put admin game record handler v1 params
func (o *PutAdminGameRecordHandlerV1Params) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the put admin game record handler v1 params
func (o *PutAdminGameRecordHandlerV1Params) WithBody(body cloudsaveclientmodels.ModelsGameRecordRequest) *PutAdminGameRecordHandlerV1Params {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the put admin game record handler v1 params
func (o *PutAdminGameRecordHandlerV1Params) SetBody(body cloudsaveclientmodels.ModelsGameRecordRequest) {
	o.Body = body
}

// WithKey adds the key to the put admin game record handler v1 params
func (o *PutAdminGameRecordHandlerV1Params) WithKey(key string) *PutAdminGameRecordHandlerV1Params {
	o.SetKey(key)
	return o
}

// SetKey adds the key to the put admin game record handler v1 params
func (o *PutAdminGameRecordHandlerV1Params) SetKey(key string) {
	o.Key = key
}

// WithNamespace adds the namespace to the put admin game record handler v1 params
func (o *PutAdminGameRecordHandlerV1Params) WithNamespace(namespace string) *PutAdminGameRecordHandlerV1Params {
	o.SetNamespace(namespace)
	return o
}

// SetNamespace adds the namespace to the put admin game record handler v1 params
func (o *PutAdminGameRecordHandlerV1Params) SetNamespace(namespace string) {
	o.Namespace = namespace
}

// WriteToRequest writes these params to a swagger request
func (o *PutAdminGameRecordHandlerV1Params) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param key
	if err := r.SetPathParam("key", o.Key); err != nil {
		return err
	}

	// path param namespace
	if err := r.SetPathParam("namespace", o.Namespace); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

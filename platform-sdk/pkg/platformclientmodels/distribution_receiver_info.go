// Code generated by go-swagger; DO NOT EDIT.

package platformclientmodels

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// DistributionReceiverInfo distribution receiver info
//
// swagger:model DistributionReceiverInfo
type DistributionReceiverInfo struct {

	// receiver custom attributes
	Attributes map[string]string `json:"attributes,omitempty"`

	// external user id, commonly it's the character id
	// Required: true
	ExtUserID *string `json:"extUserId"`

	// name that this receiver located in
	// Required: true
	Namespace *string `json:"namespace"`

	// user that this receiver belong to
	// Required: true
	UserID *string `json:"userId"`
}

// Validate validates this distribution receiver info
func (m *DistributionReceiverInfo) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateExtUserID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNamespace(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUserID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DistributionReceiverInfo) validateExtUserID(formats strfmt.Registry) error {

	if err := validate.Required("extUserId", "body", m.ExtUserID); err != nil {
		return err
	}

	return nil
}

func (m *DistributionReceiverInfo) validateNamespace(formats strfmt.Registry) error {

	if err := validate.Required("namespace", "body", m.Namespace); err != nil {
		return err
	}

	return nil
}

func (m *DistributionReceiverInfo) validateUserID(formats strfmt.Registry) error {

	if err := validate.Required("userId", "body", m.UserID); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *DistributionReceiverInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DistributionReceiverInfo) UnmarshalBinary(b []byte) error {
	var res DistributionReceiverInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

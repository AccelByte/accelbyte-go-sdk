// Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// Code generated by go-swagger; DO NOT EDIT.

package profanity

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"io/ioutil"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/AccelByte/accelbyte-go-sdk/lobby-sdk/pkg/lobbyclientmodels"
)

// AdminDeleteProfanityFilterReader is a Reader for the AdminDeleteProfanityFilter structure.
type AdminDeleteProfanityFilterReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AdminDeleteProfanityFilterReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAdminDeleteProfanityFilterOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAdminDeleteProfanityFilterBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewAdminDeleteProfanityFilterUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewAdminDeleteProfanityFilterForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewAdminDeleteProfanityFilterNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewAdminDeleteProfanityFilterInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		data, err := ioutil.ReadAll(response.Body())
		if err != nil {
			return nil, err
		}

		return nil, fmt.Errorf("Requested POST /lobby/v1/admin/profanity/namespaces/{namespace}/list/{list}/filters/delete returns an error %d: %s", response.Code(), string(data))
	}
}

// NewAdminDeleteProfanityFilterOK creates a AdminDeleteProfanityFilterOK with default headers values
func NewAdminDeleteProfanityFilterOK() *AdminDeleteProfanityFilterOK {
	return &AdminDeleteProfanityFilterOK{}
}

/*AdminDeleteProfanityFilterOK handles this case with default header values.

  OK
*/
type AdminDeleteProfanityFilterOK struct {
	Payload []*lobbyclientmodels.ModelsProfanityFilter
}

func (o *AdminDeleteProfanityFilterOK) Error() string {
	return fmt.Sprintf("[POST /lobby/v1/admin/profanity/namespaces/{namespace}/list/{list}/filters/delete][%d] adminDeleteProfanityFilterOK  %+v", 200, o.Payload)
}

func (o *AdminDeleteProfanityFilterOK) GetPayload() []*lobbyclientmodels.ModelsProfanityFilter {
	return o.Payload
}

func (o *AdminDeleteProfanityFilterOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAdminDeleteProfanityFilterBadRequest creates a AdminDeleteProfanityFilterBadRequest with default headers values
func NewAdminDeleteProfanityFilterBadRequest() *AdminDeleteProfanityFilterBadRequest {
	return &AdminDeleteProfanityFilterBadRequest{}
}

/*AdminDeleteProfanityFilterBadRequest handles this case with default header values.

  Bad Request
*/
type AdminDeleteProfanityFilterBadRequest struct {
	Payload *lobbyclientmodels.RestapiErrorResponseBody
}

func (o *AdminDeleteProfanityFilterBadRequest) Error() string {
	return fmt.Sprintf("[POST /lobby/v1/admin/profanity/namespaces/{namespace}/list/{list}/filters/delete][%d] adminDeleteProfanityFilterBadRequest  %+v", 400, o.Payload)
}

func (o *AdminDeleteProfanityFilterBadRequest) GetPayload() *lobbyclientmodels.RestapiErrorResponseBody {
	return o.Payload
}

func (o *AdminDeleteProfanityFilterBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(lobbyclientmodels.RestapiErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAdminDeleteProfanityFilterUnauthorized creates a AdminDeleteProfanityFilterUnauthorized with default headers values
func NewAdminDeleteProfanityFilterUnauthorized() *AdminDeleteProfanityFilterUnauthorized {
	return &AdminDeleteProfanityFilterUnauthorized{}
}

/*AdminDeleteProfanityFilterUnauthorized handles this case with default header values.

  Unauthorized
*/
type AdminDeleteProfanityFilterUnauthorized struct {
	Payload *lobbyclientmodels.RestapiErrorResponseBody
}

func (o *AdminDeleteProfanityFilterUnauthorized) Error() string {
	return fmt.Sprintf("[POST /lobby/v1/admin/profanity/namespaces/{namespace}/list/{list}/filters/delete][%d] adminDeleteProfanityFilterUnauthorized  %+v", 401, o.Payload)
}

func (o *AdminDeleteProfanityFilterUnauthorized) GetPayload() *lobbyclientmodels.RestapiErrorResponseBody {
	return o.Payload
}

func (o *AdminDeleteProfanityFilterUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(lobbyclientmodels.RestapiErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAdminDeleteProfanityFilterForbidden creates a AdminDeleteProfanityFilterForbidden with default headers values
func NewAdminDeleteProfanityFilterForbidden() *AdminDeleteProfanityFilterForbidden {
	return &AdminDeleteProfanityFilterForbidden{}
}

/*AdminDeleteProfanityFilterForbidden handles this case with default header values.

  Forbidden
*/
type AdminDeleteProfanityFilterForbidden struct {
	Payload *lobbyclientmodels.RestapiErrorResponseBody
}

func (o *AdminDeleteProfanityFilterForbidden) Error() string {
	return fmt.Sprintf("[POST /lobby/v1/admin/profanity/namespaces/{namespace}/list/{list}/filters/delete][%d] adminDeleteProfanityFilterForbidden  %+v", 403, o.Payload)
}

func (o *AdminDeleteProfanityFilterForbidden) GetPayload() *lobbyclientmodels.RestapiErrorResponseBody {
	return o.Payload
}

func (o *AdminDeleteProfanityFilterForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(lobbyclientmodels.RestapiErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAdminDeleteProfanityFilterNotFound creates a AdminDeleteProfanityFilterNotFound with default headers values
func NewAdminDeleteProfanityFilterNotFound() *AdminDeleteProfanityFilterNotFound {
	return &AdminDeleteProfanityFilterNotFound{}
}

/*AdminDeleteProfanityFilterNotFound handles this case with default header values.

  Not Found
*/
type AdminDeleteProfanityFilterNotFound struct {
	Payload *lobbyclientmodels.RestapiErrorResponseBody
}

func (o *AdminDeleteProfanityFilterNotFound) Error() string {
	return fmt.Sprintf("[POST /lobby/v1/admin/profanity/namespaces/{namespace}/list/{list}/filters/delete][%d] adminDeleteProfanityFilterNotFound  %+v", 404, o.Payload)
}

func (o *AdminDeleteProfanityFilterNotFound) GetPayload() *lobbyclientmodels.RestapiErrorResponseBody {
	return o.Payload
}

func (o *AdminDeleteProfanityFilterNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(lobbyclientmodels.RestapiErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAdminDeleteProfanityFilterInternalServerError creates a AdminDeleteProfanityFilterInternalServerError with default headers values
func NewAdminDeleteProfanityFilterInternalServerError() *AdminDeleteProfanityFilterInternalServerError {
	return &AdminDeleteProfanityFilterInternalServerError{}
}

/*AdminDeleteProfanityFilterInternalServerError handles this case with default header values.

  Internal Server Error
*/
type AdminDeleteProfanityFilterInternalServerError struct {
	Payload *lobbyclientmodels.RestapiErrorResponseBody
}

func (o *AdminDeleteProfanityFilterInternalServerError) Error() string {
	return fmt.Sprintf("[POST /lobby/v1/admin/profanity/namespaces/{namespace}/list/{list}/filters/delete][%d] adminDeleteProfanityFilterInternalServerError  %+v", 500, o.Payload)
}

func (o *AdminDeleteProfanityFilterInternalServerError) GetPayload() *lobbyclientmodels.RestapiErrorResponseBody {
	return o.Payload
}

func (o *AdminDeleteProfanityFilterInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(lobbyclientmodels.RestapiErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

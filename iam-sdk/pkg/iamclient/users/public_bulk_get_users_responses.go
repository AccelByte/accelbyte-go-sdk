// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"io/ioutil"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/AccelByte/accelbyte-go-sdk/iam-sdk/pkg/iamclientmodels"
)

// PublicBulkGetUsersReader is a Reader for the PublicBulkGetUsers structure.
type PublicBulkGetUsersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PublicBulkGetUsersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPublicBulkGetUsersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPublicBulkGetUsersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewPublicBulkGetUsersInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		data, err := ioutil.ReadAll(response.Body())
		if err != nil {
			return nil, err
		}

		return nil, fmt.Errorf("Requested POST /iam/v3/public/namespaces/{namespace}/users/bulk/basic returns an error %d: %s", response.Code(), string(data))
	}
}

// NewPublicBulkGetUsersOK creates a PublicBulkGetUsersOK with default headers values
func NewPublicBulkGetUsersOK() *PublicBulkGetUsersOK {
	return &PublicBulkGetUsersOK{}
}

/*PublicBulkGetUsersOK handles this case with default header values.

  OK
*/
type PublicBulkGetUsersOK struct {
	Payload *iamclientmodels.ModelListBulkUserResponse
}

func (o *PublicBulkGetUsersOK) Error() string {
	return fmt.Sprintf("[POST /iam/v3/public/namespaces/{namespace}/users/bulk/basic][%d] publicBulkGetUsersOK  %+v", 200, o.Payload)
}

func (o *PublicBulkGetUsersOK) GetPayload() *iamclientmodels.ModelListBulkUserResponse {
	return o.Payload
}

func (o *PublicBulkGetUsersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(iamclientmodels.ModelListBulkUserResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPublicBulkGetUsersBadRequest creates a PublicBulkGetUsersBadRequest with default headers values
func NewPublicBulkGetUsersBadRequest() *PublicBulkGetUsersBadRequest {
	return &PublicBulkGetUsersBadRequest{}
}

/*PublicBulkGetUsersBadRequest handles this case with default header values.

  <table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr><tr><td>10185</td><td>publisher namespace not allowed</td></tr></table>
*/
type PublicBulkGetUsersBadRequest struct {
	Payload *iamclientmodels.RestErrorResponse
}

func (o *PublicBulkGetUsersBadRequest) Error() string {
	return fmt.Sprintf("[POST /iam/v3/public/namespaces/{namespace}/users/bulk/basic][%d] publicBulkGetUsersBadRequest  %+v", 400, o.Payload)
}

func (o *PublicBulkGetUsersBadRequest) GetPayload() *iamclientmodels.RestErrorResponse {
	return o.Payload
}

func (o *PublicBulkGetUsersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(iamclientmodels.RestErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPublicBulkGetUsersInternalServerError creates a PublicBulkGetUsersInternalServerError with default headers values
func NewPublicBulkGetUsersInternalServerError() *PublicBulkGetUsersInternalServerError {
	return &PublicBulkGetUsersInternalServerError{}
}

/*PublicBulkGetUsersInternalServerError handles this case with default header values.

  <table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>20000</td><td>internal server error</td></tr></table>
*/
type PublicBulkGetUsersInternalServerError struct {
	Payload *iamclientmodels.RestErrorResponse
}

func (o *PublicBulkGetUsersInternalServerError) Error() string {
	return fmt.Sprintf("[POST /iam/v3/public/namespaces/{namespace}/users/bulk/basic][%d] publicBulkGetUsersInternalServerError  %+v", 500, o.Payload)
}

func (o *PublicBulkGetUsersInternalServerError) GetPayload() *iamclientmodels.RestErrorResponse {
	return o.Payload
}

func (o *PublicBulkGetUsersInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(iamclientmodels.RestErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// Code generated by go-swagger; DO NOT EDIT.

package pod_config

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"
	"io/ioutil"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/AccelByte/accelbyte-go-sdk/dsmc-sdk/pkg/dsmcclientmodels"
)

// DeletePodConfigReader is a Reader for the DeletePodConfig structure.
type DeletePodConfigReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeletePodConfigReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeletePodConfigNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeletePodConfigBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeletePodConfigUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewDeletePodConfigNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 409:
		result := NewDeletePodConfigConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewDeletePodConfigInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		data, err := ioutil.ReadAll(response.Body())
		if err != nil {
			return nil, err
		}

		return nil, fmt.Errorf("Requested DELETE /dsmcontroller/admin/namespaces/{namespace}/configs/pods/{name} returns an error %d: %s", response.Code(), string(data))
	}
}

// NewDeletePodConfigNoContent creates a DeletePodConfigNoContent with default headers values
func NewDeletePodConfigNoContent() *DeletePodConfigNoContent {
	return &DeletePodConfigNoContent{}
}

/*DeletePodConfigNoContent handles this case with default header values.

  pod config deleted
*/
type DeletePodConfigNoContent struct {
}

func (o *DeletePodConfigNoContent) Error() string {
	return fmt.Sprintf("[DELETE /dsmcontroller/admin/namespaces/{namespace}/configs/pods/{name}][%d] deletePodConfigNoContent ", 204)
}

func (o *DeletePodConfigNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeletePodConfigBadRequest creates a DeletePodConfigBadRequest with default headers values
func NewDeletePodConfigBadRequest() *DeletePodConfigBadRequest {
	return &DeletePodConfigBadRequest{}
}

/*DeletePodConfigBadRequest handles this case with default header values.

  malformed request
*/
type DeletePodConfigBadRequest struct {
	Payload *dsmcclientmodels.ResponseError
}

func (o *DeletePodConfigBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /dsmcontroller/admin/namespaces/{namespace}/configs/pods/{name}][%d] deletePodConfigBadRequest  %+v", 400, o.ToJSONString())
}

func (o *DeletePodConfigBadRequest) ToJSONString() string {
	if o.Payload == nil {
		return "{}"
	}

	b, err := json.Marshal(o.Payload)
	if err != nil {
		fmt.Println(err)

		return fmt.Sprintf("Failed to marshal the payload: %+v", o.Payload)
	}

	return fmt.Sprintf("%+v", string(b))
}

func (o *DeletePodConfigBadRequest) GetPayload() *dsmcclientmodels.ResponseError {
	return o.Payload
}

func (o *DeletePodConfigBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(dsmcclientmodels.ResponseError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeletePodConfigUnauthorized creates a DeletePodConfigUnauthorized with default headers values
func NewDeletePodConfigUnauthorized() *DeletePodConfigUnauthorized {
	return &DeletePodConfigUnauthorized{}
}

/*DeletePodConfigUnauthorized handles this case with default header values.

  Unauthorized
*/
type DeletePodConfigUnauthorized struct {
	Payload *dsmcclientmodels.ResponseError
}

func (o *DeletePodConfigUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /dsmcontroller/admin/namespaces/{namespace}/configs/pods/{name}][%d] deletePodConfigUnauthorized  %+v", 401, o.ToJSONString())
}

func (o *DeletePodConfigUnauthorized) ToJSONString() string {
	if o.Payload == nil {
		return "{}"
	}

	b, err := json.Marshal(o.Payload)
	if err != nil {
		fmt.Println(err)

		return fmt.Sprintf("Failed to marshal the payload: %+v", o.Payload)
	}

	return fmt.Sprintf("%+v", string(b))
}

func (o *DeletePodConfigUnauthorized) GetPayload() *dsmcclientmodels.ResponseError {
	return o.Payload
}

func (o *DeletePodConfigUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(dsmcclientmodels.ResponseError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeletePodConfigNotFound creates a DeletePodConfigNotFound with default headers values
func NewDeletePodConfigNotFound() *DeletePodConfigNotFound {
	return &DeletePodConfigNotFound{}
}

/*DeletePodConfigNotFound handles this case with default header values.

  pod config not found
*/
type DeletePodConfigNotFound struct {
	Payload *dsmcclientmodels.ResponseError
}

func (o *DeletePodConfigNotFound) Error() string {
	return fmt.Sprintf("[DELETE /dsmcontroller/admin/namespaces/{namespace}/configs/pods/{name}][%d] deletePodConfigNotFound  %+v", 404, o.ToJSONString())
}

func (o *DeletePodConfigNotFound) ToJSONString() string {
	if o.Payload == nil {
		return "{}"
	}

	b, err := json.Marshal(o.Payload)
	if err != nil {
		fmt.Println(err)

		return fmt.Sprintf("Failed to marshal the payload: %+v", o.Payload)
	}

	return fmt.Sprintf("%+v", string(b))
}

func (o *DeletePodConfigNotFound) GetPayload() *dsmcclientmodels.ResponseError {
	return o.Payload
}

func (o *DeletePodConfigNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(dsmcclientmodels.ResponseError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeletePodConfigConflict creates a DeletePodConfigConflict with default headers values
func NewDeletePodConfigConflict() *DeletePodConfigConflict {
	return &DeletePodConfigConflict{}
}

/*DeletePodConfigConflict handles this case with default header values.

  pod config in use
*/
type DeletePodConfigConflict struct {
	Payload *dsmcclientmodels.ResponseError
}

func (o *DeletePodConfigConflict) Error() string {
	return fmt.Sprintf("[DELETE /dsmcontroller/admin/namespaces/{namespace}/configs/pods/{name}][%d] deletePodConfigConflict  %+v", 409, o.ToJSONString())
}

func (o *DeletePodConfigConflict) ToJSONString() string {
	if o.Payload == nil {
		return "{}"
	}

	b, err := json.Marshal(o.Payload)
	if err != nil {
		fmt.Println(err)

		return fmt.Sprintf("Failed to marshal the payload: %+v", o.Payload)
	}

	return fmt.Sprintf("%+v", string(b))
}

func (o *DeletePodConfigConflict) GetPayload() *dsmcclientmodels.ResponseError {
	return o.Payload
}

func (o *DeletePodConfigConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(dsmcclientmodels.ResponseError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeletePodConfigInternalServerError creates a DeletePodConfigInternalServerError with default headers values
func NewDeletePodConfigInternalServerError() *DeletePodConfigInternalServerError {
	return &DeletePodConfigInternalServerError{}
}

/*DeletePodConfigInternalServerError handles this case with default header values.

  Internal Server Error
*/
type DeletePodConfigInternalServerError struct {
	Payload *dsmcclientmodels.ResponseError
}

func (o *DeletePodConfigInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /dsmcontroller/admin/namespaces/{namespace}/configs/pods/{name}][%d] deletePodConfigInternalServerError  %+v", 500, o.ToJSONString())
}

func (o *DeletePodConfigInternalServerError) ToJSONString() string {
	if o.Payload == nil {
		return "{}"
	}

	b, err := json.Marshal(o.Payload)
	if err != nil {
		fmt.Println(err)

		return fmt.Sprintf("Failed to marshal the payload: %+v", o.Payload)
	}

	return fmt.Sprintf("%+v", string(b))
}

func (o *DeletePodConfigInternalServerError) GetPayload() *dsmcclientmodels.ResponseError {
	return o.Payload
}

func (o *DeletePodConfigInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(dsmcclientmodels.ResponseError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

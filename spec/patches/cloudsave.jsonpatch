[
  {
    "op": "remove",
    "path": "/security"
  },
  {
    "op": "add",
    "path": "/host",
    "value": "demo.accelbyte.io"
  },
  {
    "op": "add",
    "path": "/schemes",
    "value": [
      "https"
    ]
  },
  {
    "op": "add",
    "path": "/securityDefinitions/HasScope",
    "value": {
      "authorizationUrl": "https://dummy.oauth.net/auth",
      "flow": "accessCode",
      "scopes": {
        "social": "social"
      },
      "tokenUrl": "https://dumy.oauth.net/token",
      "type": "oauth2"
    }
  },
  {
    "op": "add",
    "path": "/securityDefinitions/HasPermission",
    "value": {
      "authorizationUrl": "https://dummy.oauth.net/auth",
      "flow": "accessCode",
      "scopes": {
        "ADMIN:NAMESPACE:{namespace}:CLOUDSAVE:RECORD [DELETE]": "ADMIN:NAMESPACE:{namespace}:CLOUDSAVE:RECORD [DELETE]",
        "ADMIN:NAMESPACE:{namespace}:CLOUDSAVE:RECORD [READ]": "ADMIN:NAMESPACE:{namespace}:CLOUDSAVE:RECORD [READ]",
        "ADMIN:NAMESPACE:{namespace}:CLOUDSAVE:RECORD [UPDATE]": "ADMIN:NAMESPACE:{namespace}:CLOUDSAVE:RECORD [UPDATE]",
        "ADMIN:NAMESPACE:{namespace}:CLOUDSAVE:RECORD [WRITE]": "ADMIN:NAMESPACE:{namespace}:CLOUDSAVE:RECORD [WRITE]",
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:CLOUDSAVE:RECORD [CREATE]": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:CLOUDSAVE:RECORD [CREATE]",
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:CLOUDSAVE:RECORD [DELETE]": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:CLOUDSAVE:RECORD [DELETE]",
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:CLOUDSAVE:RECORD [READ]": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:CLOUDSAVE:RECORD [READ]",
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:CLOUDSAVE:RECORD [UPDATE]": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:CLOUDSAVE:RECORD [UPDATE]",
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:PUBLIC:CLOUDSAVE:RECORD [CREATE]": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:PUBLIC:CLOUDSAVE:RECORD [CREATE]",
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:PUBLIC:CLOUDSAVE:RECORD [DELETE]": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:PUBLIC:CLOUDSAVE:RECORD [DELETE]",
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:PUBLIC:CLOUDSAVE:RECORD [READ]": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:PUBLIC:CLOUDSAVE:RECORD [READ]",
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:PUBLIC:CLOUDSAVE:RECORD [UPDATE]": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:PUBLIC:CLOUDSAVE:RECORD [UPDATE]",
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:RECORD [READ]": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:RECORD [READ]",
        "NAMESPACE:{namespace}:CLOUDSAVE:RECORD [CREATE]": "NAMESPACE:{namespace}:CLOUDSAVE:RECORD [CREATE]",
        "NAMESPACE:{namespace}:CLOUDSAVE:RECORD [DELETE]": "NAMESPACE:{namespace}:CLOUDSAVE:RECORD [DELETE]",
        "NAMESPACE:{namespace}:CLOUDSAVE:RECORD [READ]": "NAMESPACE:{namespace}:CLOUDSAVE:RECORD [READ]",
        "NAMESPACE:{namespace}:CLOUDSAVE:RECORD [UPDATE]": "NAMESPACE:{namespace}:CLOUDSAVE:RECORD [UPDATE]",
        "NAMESPACE:{namespace}:PUBLIC:CLOUDSAVE:RECORD [READ]": "NAMESPACE:{namespace}:PUBLIC:CLOUDSAVE:RECORD [READ]",
        "NAMESPACE:{namespace}:USER:{userId}:CLOUDSAVE:RECORD [DELETE]": "NAMESPACE:{namespace}:USER:{userId}:CLOUDSAVE:RECORD [DELETE]",
        "NAMESPACE:{namespace}:USER:{userId}:CLOUDSAVE:RECORD [READ]": "NAMESPACE:{namespace}:USER:{userId}:CLOUDSAVE:RECORD [READ]",
        "NAMESPACE:{namespace}:USER:{userId}:CLOUDSAVE:RECORD [UPDATE]": "NAMESPACE:{namespace}:USER:{userId}:CLOUDSAVE:RECORD [UPDATE]",
        "NAMESPACE:{namespace}:USER:{userId}:CLOUDSAVE:RECORD [WRITE]": "NAMESPACE:{namespace}:USER:{userId}:CLOUDSAVE:RECORD [WRITE]",
        "NAMESPACE:{namespace}:USER:{userId}:PUBLIC:CLOUDSAVE:RECORD [READ]": "NAMESPACE:{namespace}:USER:{userId}:PUBLIC:CLOUDSAVE:RECORD [READ]",
        "NAMESPACE:{namespace}:USER:{userId}:PUBLIC:CLOUDSAVE:RECORD [UPDATE]": "NAMESPACE:{namespace}:USER:{userId}:PUBLIC:CLOUDSAVE:RECORD [UPDATE]",
        "NAMESPACE:{namespace}:USER:{userId}:PUBLIC:CLOUDSAVE:RECORD [WRITE]": "NAMESPACE:{namespace}:USER:{userId}:PUBLIC:CLOUDSAVE:RECORD [WRITE]"
      },
      "tokenUrl": "https://dumy.oauth.net/token",
      "type": "oauth2"
    }
  },
  {
    "op": "add",
    "path": "/paths/~1cloudsave~1v1~1admin~1namespaces~1{namespace}~1users~1{userId}~1records~1{key}~1public/delete/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:USER:{userId}:PUBLIC:CLOUDSAVE:RECORD [DELETE]"
        ],
        "HasScope": [
          "social"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "add",
    "path": "/paths/~1cloudsave~1v1~1admin~1namespaces~1{namespace}~1users~1{userId}~1records~1{key}~1public/get/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:USER:{userId}:PUBLIC:CLOUDSAVE:RECORD [READ]"
        ],
        "HasScope": [
          "social"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "add",
    "path": "/paths/~1cloudsave~1v1~1admin~1namespaces~1{namespace}~1users~1{userId}~1records~1{key}~1public/post/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:USER:{userId}:PUBLIC:CLOUDSAVE:RECORD [CREATE]"
        ],
        "HasScope": [
          "social"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1cloudsave~1v1~1admin~1namespaces~1{namespace}~1users~1{userId}~1records~1{key}~1public/post/description",
    "value": "Required permission: ADMIN:NAMESPACE:{namespace}:USER:{userId}:PUBLIC:CLOUDSAVE:RECORD [CREATE]\n\nRequired scope: social\n\nSave a record (arbitrary JSON data) in user-level.\nIf a record already exist with given record key, this endpoint will try to merge.\nSame top level key inside body will be replaced, different top level key will be appended.\nRecord saved will be a public record.\nIf existing record is not public (is_public false) then this endpoint won&#39;t make it public."
  },
  {
    "op": "add",
    "path": "/paths/~1cloudsave~1v1~1admin~1namespaces~1{namespace}~1users~1{userId}~1records~1{key}~1public/put/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:USER:{userId}:PUBLIC:CLOUDSAVE:RECORD [UPDATE]"
        ],
        "HasScope": [
          "social"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "add",
    "path": "/paths/~1cloudsave~1v1~1namespaces~1{namespace}~1concurrent~1records~1{key}/put/security",
    "value": [
      {
        "HasPermission": [
          "NAMESPACE:{namespace}:CLOUDSAVE:RECORD [UPDATE]"
        ],
        "HasScope": [
          "social"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1cloudsave~1v1~1namespaces~1{namespace}~1concurrent~1records~1{key}/put/description",
    "value": "&lt;table&gt;\n\t&lt;tr&gt;\n\t\t&lt;td&gt;Required Permission&lt;/td&gt;\n\t\t&lt;td&gt;&lt;code&gt;NAMESPACE:{namespace}:CLOUDSAVE:RECORD [UPDATE]&lt;/code&gt;&lt;/td&gt;\n\t&lt;/tr&gt;\n\t&lt;tr&gt;\n\t\t&lt;td&gt;Required Scope&lt;/td&gt;\n\t\t&lt;td&gt;&lt;code&gt;social&lt;/code&gt;&lt;/td&gt;\n\t&lt;/tr&gt;\n&lt;/table&gt;\n&lt;br/&gt;\n\nIf record already exists, it will be replaced with the one from request body (all fields will be\ndeleted). If record is not exists, it will create a new one with value from request body.\n\nExample:\n\nReplace all records\n&lt;pre&gt;\n\t// existed record\n\t{\n\t\t&#34;foo&#34;: &#34;bar&#34;\n\t}\n\n\t// new update (request body)\n\t{\n\t\t&#34;foo_new&#34;: &#34;bar_new&#34;\n\t}\n\n\t// result\n\t{\n\t\t&#34;foo_new&#34;: &#34;bar_new&#34;\n\t}\n&lt;/pre&gt;\n\n&lt;b&gt;Optimistic Concurrency Control&lt;/b&gt;&lt;br&gt;\nThis endpoint implement optimistic concurrency control to avoid race condition.\nIf the record has been updated since the client fetch it, the server will return HTTP status code 412 (precondition failed) \nand client need to redo the operation (fetch data and do update).\nOtherwise, the server will process the request.\n"
  },
  {
    "op": "add",
    "path": "/paths/~1cloudsave~1v1~1namespaces~1{namespace}~1users~1{userId}~1records~1{key}~1public/get/security",
    "value": [
      {
        "HasPermission": [
          "NAMESPACE:{namespace}:USER:{userId}:PUBLIC:CLOUDSAVE:RECORD [READ]"
        ],
        "HasScope": [
          "social"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1cloudsave~1v1~1namespaces~1{namespace}~1users~1{userId}~1records~1{key}~1public/get/description",
    "value": "&lt;table&gt;\n\t&lt;tr&gt;\n\t\t&lt;td&gt;Required Permission&lt;/td&gt;\n\t\t&lt;td&gt;&lt;code&gt;NAMESPACE:{namespace}:USER:{userId}:PUBLIC:CLOUDSAVE:RECORD [READ]&lt;/code&gt;&lt;/td&gt;\n\t&lt;/tr&gt;\n\t&lt;tr&gt;\n\t\t&lt;td&gt;Required Scope&lt;/td&gt;\n\t\t&lt;td&gt;&lt;code&gt;social&lt;/code&gt;&lt;/td&gt;\n\t&lt;/tr&gt;\n&lt;/table&gt;\n&lt;br/&gt;\n\nGet other player&#39;s record that is public. Only record with &lt;code&gt;isPublic=true&lt;/code&gt; that can be\nretrieved using this endpoint.\n"
  },
  {
    "op": "add",
    "path": "/paths/~1cloudsave~1v1~1namespaces~1{namespace}~1users~1{userId}~1records~1{key}~1public/post/security",
    "value": [
      {
        "HasPermission": [
          "NAMESPACE:{namespace}:USER:{userId}:PUBLIC:CLOUDSAVE:RECORD [WRITE]"
        ],
        "HasScope": [
          "social"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1cloudsave~1v1~1namespaces~1{namespace}~1users~1{userId}~1records~1{key}~1public/post/description",
    "value": "&lt;table&gt;\n\t&lt;tr&gt;\n\t\t&lt;td&gt;Required Permission&lt;/td&gt;\n\t\t&lt;td&gt;&lt;code&gt;NAMESPACE:{namespace}:USER:{userId}:PUBLIC:CLOUDSAVE:RECORD [WRITE]&lt;/code&gt;&lt;/td&gt;\n\t&lt;/tr&gt;\n\t&lt;tr&gt;\n\t\t&lt;td&gt;Required Scope&lt;/td&gt;\n\t\t&lt;td&gt;&lt;code&gt;social&lt;/code&gt;&lt;/td&gt;\n\t&lt;/tr&gt;\n&lt;/table&gt;\n&lt;br/&gt;\n\nThis endpoint will create or update player record with &lt;code&gt;isPublic=true&lt;/code&gt; meaning that the\nrecord will be available for other player to be retrieved. Other player can only retrieve the record\nand not create, update or even delete.\n\nThis endpoint will create public player record if it is not exists otherwise merge with these criteria:\n- If field name is already exists, replace the value\n- If field name is not exists, append it\n\nExample\n\nReplace value:\n&lt;pre&gt;\n\t// existed record\n\t{\n\t\t&#34;foo&#34;: &#34;bar&#34;\n\t}\n\n\t// new record (request body)\n\t{\n\t\t&#34;foo&#34;: &#34;bar_updated&#34;\n\t}\n\n\t// result\n\t{\n\t\t&#34;foo&#34;: &#34;bar_updated&#34;\n\t}\n&lt;/pre&gt;\n\nAppend value:\n&lt;pre&gt;\n\t// existed record\n\t{\n\t\t&#34;foo&#34;: &#34;bar&#34;\n\t}\n\n\t// new record (request body)\n\t{\n\t\t&#34;foo_new&#34;: &#34;bar_new&#34;\n\t}\n\n\t// result\n\t{\n\t\t&#34;foo&#34;: &#34;bar&#34;,\n\t\t&#34;foo_new&#34;: &#34;bar_new&#34;\n\t}\n&lt;/pre&gt;\n"
  },
  {
    "op": "add",
    "path": "/paths/~1cloudsave~1v1~1namespaces~1{namespace}~1users~1{userId}~1records~1{key}~1public/put/security",
    "value": [
      {
        "HasPermission": [
          "NAMESPACE:{namespace}:USER:{userId}:PUBLIC:CLOUDSAVE:RECORD [UPDATE]"
        ],
        "HasScope": [
          "social"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1cloudsave~1v1~1namespaces~1{namespace}~1users~1{userId}~1records~1{key}~1public/put/description",
    "value": "&lt;table&gt;\n\t&lt;tr&gt;\n\t\t&lt;td&gt;Required Permission&lt;/td&gt;\n\t\t&lt;td&gt;&lt;code&gt;NAMESPACE:{namespace}:USER:{userId}:PUBLIC:CLOUDSAVE:RECORD [UPDATE]&lt;/code&gt;&lt;/td&gt;\n\t&lt;/tr&gt;\n\t&lt;tr&gt;\n\t\t&lt;td&gt;Required Scope&lt;/td&gt;\n\t\t&lt;td&gt;&lt;code&gt;social&lt;/code&gt;&lt;/td&gt;\n\t&lt;/tr&gt;\n&lt;/table&gt;\n&lt;br/&gt;\n\nIf the record is not exist, it will create. If the record already exist, it will replace the record\ninstead. And this operation can only be applied to record with &lt;code&gt;isPublic=true&lt;/code&gt;.\n\nExample\n\nReplace record\n&lt;pre&gt;\n// existed record\n{\n\t&#34;foo&#34;: &#34;bar&#34;\n}\n\n// new record (request body)\n{\n\t&#34;foo_new&#34;: &#34;bar_new&#34;\n}\n\n// result\n{\n\t&#34;foo_new&#34;: &#34;bar_new&#34;\n}\n&lt;/pre&gt;\n"
  },
  {
    "op": "add",
    "path": "/paths/~1cloudsave~1v1~1namespaces~1{namespace}~1users~1{userId}~1records~1{key}/delete/security",
    "value": [
      {
        "HasPermission": [
          "NAMESPACE:{namespace}:USER:{userId}:CLOUDSAVE:RECORD [DELETE]"
        ],
        "HasScope": [
          "social"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1cloudsave~1v1~1namespaces~1{namespace}~1users~1{userId}~1records~1{key}/delete/description",
    "value": "&lt;table&gt;\n\t&lt;tr&gt;\n\t\t&lt;td&gt;Required Permission&lt;/td&gt;\n\t\t&lt;td&gt;&lt;code&gt;NAMESPACE:{namespace}:USER:{userId}:CLOUDSAVE:RECORD [DELETE]&lt;/code&gt;&lt;/td&gt;\n\t&lt;/tr&gt;\n\t&lt;tr&gt;\n\t\t&lt;td&gt;Required Scope&lt;/td&gt;\n\t\t&lt;td&gt;&lt;code&gt;social&lt;/code&gt;&lt;/td&gt;\n\t&lt;/tr&gt;\n&lt;/table&gt;\n&lt;br/&gt;\n\nDelete player record by its key"
  },
  {
    "op": "add",
    "path": "/paths/~1cloudsave~1v1~1namespaces~1{namespace}~1users~1{userId}~1records~1{key}/get/security",
    "value": [
      {
        "HasPermission": [
          "NAMESPACE:{namespace}:USER:{userId}:CLOUDSAVE:RECORD [READ]"
        ],
        "HasScope": [
          "social"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1cloudsave~1v1~1namespaces~1{namespace}~1users~1{userId}~1records~1{key}/get/description",
    "value": "&lt;table&gt;\n\t&lt;tr&gt;\n\t\t&lt;td&gt;Required Permission&lt;/td&gt;\n\t\t&lt;td&gt;&lt;code&gt;NAMESPACE:{namespace}:USER:{userId}:CLOUDSAVE:RECORD [READ]&lt;/code&gt;&lt;/td&gt;\n\t&lt;/tr&gt;\n\t&lt;tr&gt;\n\t\t&lt;td&gt;Required Scope&lt;/td&gt;\n\t\t&lt;td&gt;&lt;code&gt;social&lt;/code&gt;&lt;/td&gt;\n\t&lt;/tr&gt;\n&lt;/table&gt;\n&lt;br/&gt;\n\nGet player record by its key"
  },
  {
    "op": "add",
    "path": "/paths/~1cloudsave~1v1~1namespaces~1{namespace}~1users~1{userId}~1records~1{key}/post/security",
    "value": [
      {
        "HasPermission": [
          "NAMESPACE:{namespace}:USER:{userId}:CLOUDSAVE:RECORD [WRITE]"
        ],
        "HasScope": [
          "social"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1cloudsave~1v1~1namespaces~1{namespace}~1users~1{userId}~1records~1{key}/post/description",
    "value": "&lt;table&gt;\n\t&lt;tr&gt;\n\t\t&lt;td&gt;Required Permission&lt;/td&gt;\n\t\t&lt;td&gt;&lt;code&gt;NAMESPACE:{namespace}:USER:{userId}:CLOUDSAVE:RECORD [WRITE]&lt;/code&gt;&lt;/td&gt;\n\t&lt;/tr&gt;\n\t&lt;tr&gt;\n\t\t&lt;td&gt;Required Scope&lt;/td&gt;\n\t\t&lt;td&gt;&lt;code&gt;social&lt;/code&gt;&lt;/td&gt;\n\t&lt;/tr&gt;\n&lt;/table&gt;\n&lt;br/&gt;\n\nCreate player record if it is not exists otherwise merge with these criteria:\n- If field name is already exists, replace the value\n- If field name is not exists, append it\n\nExample\n\nReplace value:\n&lt;pre&gt;\n\t// existed record\n\t{\n\t\t&#34;foo&#34;: &#34;bar&#34;\n\t}\n\n\t// new record (request body)\n\t{\n\t\t&#34;foo&#34;: &#34;bar_updated&#34;\n\t}\n\n\t// result\n\t{\n\t\t&#34;foo&#34;: &#34;bar_updated&#34;\n\t}\n&lt;/pre&gt;\n\nAppend value:\n&lt;pre&gt;\n\t// existed record\n\t{\n\t\t&#34;foo&#34;: &#34;bar&#34;\n\t}\n\n\t// new record (request body)\n\t{\n\t\t&#34;foo_new&#34;: &#34;bar_new&#34;\n\t}\n\n\t// result\n\t{\n\t\t&#34;foo&#34;: &#34;bar&#34;,\n\t\t&#34;foo_new&#34;: &#34;bar_new&#34;\n\t}\n&lt;/pre&gt;\n"
  },
  {
    "op": "add",
    "path": "/paths/~1cloudsave~1v1~1namespaces~1{namespace}~1users~1{userId}~1records~1{key}/put/security",
    "value": [
      {
        "HasPermission": [
          "NAMESPACE:{namespace}:USER:{userId}:CLOUDSAVE:RECORD [UPDATE]"
        ],
        "HasScope": [
          "social"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1cloudsave~1v1~1namespaces~1{namespace}~1users~1{userId}~1records~1{key}/put/description",
    "value": "&lt;table&gt;\n\t&lt;tr&gt;\n\t\t&lt;td&gt;Required Permission&lt;/td&gt;\n\t\t&lt;td&gt;&lt;code&gt;NAMESPACE:{namespace}:USER:{userId}:CLOUDSAVE:RECORD [UPDATE]&lt;/code&gt;&lt;/td&gt;\n\t&lt;/tr&gt;\n\t&lt;tr&gt;\n\t\t&lt;td&gt;Required Scope&lt;/td&gt;\n\t\t&lt;td&gt;&lt;code&gt;social&lt;/code&gt;&lt;/td&gt;\n\t&lt;/tr&gt;\n&lt;/table&gt;\n&lt;br/&gt;\n\nThis endpoint will create new record if it is not exists and it will replace if already exists.\n\nExample\n\nReplace record\n&lt;pre&gt;\n// existed record\n{\n\t&#34;foo&#34;: &#34;bar&#34;\n}\n\n// new record (request body)\n{\n\t&#34;foo_new&#34;: &#34;bar_new&#34;\n}\n\n// result\n{\n\t&#34;foo_new&#34;: &#34;bar_new&#34;\n}\n&lt;/pre&gt;\n"
  },
  {
    "op": "add",
    "path": "/paths/~1cloudsave~1v1~1admin~1namespaces~1{namespace}~1records~1{key}/delete/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:CLOUDSAVE:RECORD [DELETE]"
        ],
        "HasScope": [
          "social"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1cloudsave~1v1~1admin~1namespaces~1{namespace}~1records~1{key}/delete/operationId",
    "value": "adminDeleteGameRecordHandlerV1"
  },
  {
    "op": "add",
    "path": "/paths/~1cloudsave~1v1~1admin~1namespaces~1{namespace}~1records~1{key}/get/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:CLOUDSAVE:RECORD [READ]"
        ],
        "HasScope": [
          "social"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1cloudsave~1v1~1admin~1namespaces~1{namespace}~1records~1{key}/get/operationId",
    "value": "adminGetGameRecordHandlerV1"
  },
  {
    "op": "add",
    "path": "/paths/~1cloudsave~1v1~1admin~1namespaces~1{namespace}~1records~1{key}/post/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:CLOUDSAVE:RECORD [WRITE]"
        ],
        "HasScope": [
          "social"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1cloudsave~1v1~1admin~1namespaces~1{namespace}~1records~1{key}/post/operationId",
    "value": "adminPostGameRecordHandlerV1"
  },
  {
    "op": "add",
    "path": "/paths/~1cloudsave~1v1~1admin~1namespaces~1{namespace}~1records~1{key}/put/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:CLOUDSAVE:RECORD [UPDATE]"
        ],
        "HasScope": [
          "social"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1cloudsave~1v1~1admin~1namespaces~1{namespace}~1records~1{key}/put/operationId",
    "value": "adminPutGameRecordHandlerV1"
  },
  {
    "op": "add",
    "path": "/paths/~1cloudsave~1v1~1namespaces~1{namespace}~1users~1{userId}~1concurrent~1records~1{key}~1public/put/security",
    "value": [
      {
        "HasPermission": [
          "NAMESPACE:{namespace}:USER:{userId}:PUBLIC:CLOUDSAVE:RECORD [UPDATE]"
        ],
        "HasScope": [
          "social"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1cloudsave~1v1~1namespaces~1{namespace}~1users~1{userId}~1concurrent~1records~1{key}~1public/put/description",
    "value": "&lt;table&gt;\n\t&lt;tr&gt;\n\t\t&lt;td&gt;Required Permission&lt;/td&gt;\n\t\t&lt;td&gt;&lt;code&gt;NAMESPACE:{namespace}:USER:{userId}:PUBLIC:CLOUDSAVE:RECORD [UPDATE]&lt;/code&gt;&lt;/td&gt;\n\t&lt;/tr&gt;\n\t&lt;tr&gt;\n\t\t&lt;td&gt;Required Scope&lt;/td&gt;\n\t\t&lt;td&gt;&lt;code&gt;social&lt;/code&gt;&lt;/td&gt;\n\t&lt;/tr&gt;\n&lt;/table&gt;\n&lt;br/&gt;\n\nIf the record is not exist, it will create. If the record already exist, it will replace the record\ninstead. And this operation can only be applied to record with &lt;code&gt;isPublic=true&lt;/code&gt;.\n\nExample\n\nReplace record\n&lt;pre&gt;\n// existed record\n{\n\t&#34;foo&#34;: &#34;bar&#34;\n}\n\n// new record (request body)\n{\n\t&#34;foo_new&#34;: &#34;bar_new&#34;\n}\n\n// result\n{\n\t&#34;foo_new&#34;: &#34;bar_new&#34;\n}\n&lt;/pre&gt;\n\t\n&lt;b&gt;Optimistic Concurrency Control&lt;/b&gt;&lt;br&gt;\nThis endpoint implement optimistic concurrency control to avoid race condition.\nIf the record has been updated since the client fetch it, the server will return HTTP status code 412 (precondition failed)\nand client need to redo the operation (fetch data and do update).\nOtherwise, the server will process the request.\n"
  },
  {
    "op": "add",
    "path": "/paths/~1cloudsave~1v1~1namespaces~1{namespace}~1users~1me~1records~1{key}~1public/delete/security",
    "value": [
      {
        "HasPermission": [],
        "HasScope": [
          "social"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "add",
    "path": "/paths/~1cloudsave~1v1~1admin~1namespaces~1{namespace}~1users~1{userId}~1records/get/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:USER:{userId}:RECORD [READ]"
        ],
        "HasScope": [
          "social"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "add",
    "path": "/paths/~1cloudsave~1v1~1admin~1namespaces~1{namespace}~1users~1records/get/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:CLOUDSAVE:RECORD [READ]"
        ],
        "HasScope": [
          "social"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "add",
    "path": "/paths/~1cloudsave~1v1~1namespaces~1{namespace}~1records~1{key}/delete/security",
    "value": [
      {
        "HasPermission": [
          "NAMESPACE:{namespace}:CLOUDSAVE:RECORD [DELETE]"
        ],
        "HasScope": [
          "social"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1cloudsave~1v1~1namespaces~1{namespace}~1records~1{key}/delete/description",
    "value": "&lt;table&gt;\n\t&lt;tr&gt;\n\t\t&lt;td&gt;Required Permission&lt;/td&gt;\n\t\t&lt;td&gt;&lt;code&gt;NAMESPACE:{namespace}:CLOUDSAVE:RECORD [DELETE]&lt;/code&gt;&lt;/td&gt;\n\t&lt;/tr&gt;\n\t&lt;tr&gt;\n\t\t&lt;td&gt;Required Scope&lt;/td&gt;\n\t\t&lt;td&gt;&lt;code&gt;social&lt;/code&gt;&lt;/td&gt;\n\t&lt;/tr&gt;\n&lt;/table&gt;\n&lt;br/&gt;\n\nDelete records by its key\n"
  },
  {
    "op": "add",
    "path": "/paths/~1cloudsave~1v1~1namespaces~1{namespace}~1records~1{key}/get/security",
    "value": [
      {
        "HasPermission": [
          "NAMESPACE:{namespace}:CLOUDSAVE:RECORD [READ]"
        ],
        "HasScope": [
          "social"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1cloudsave~1v1~1namespaces~1{namespace}~1records~1{key}/get/description",
    "value": "&lt;table&gt;\n\t&lt;tr&gt;\n\t\t&lt;td&gt;Required Permission&lt;/td&gt;\n\t\t&lt;td&gt;&lt;code&gt;NAMESPACE:{namespace}:CLOUDSAVE:RECORD [READ]&lt;/code&gt;&lt;/td&gt;\n\t&lt;/tr&gt;\n\t&lt;tr&gt;\n\t\t&lt;td&gt;Required Scope&lt;/td&gt;\n\t\t&lt;td&gt;&lt;code&gt;social&lt;/code&gt;&lt;/td&gt;\n\t&lt;/tr&gt;\n&lt;/table&gt;\n&lt;br/&gt;\nGet game record by its key.\n"
  },
  {
    "op": "add",
    "path": "/paths/~1cloudsave~1v1~1namespaces~1{namespace}~1records~1{key}/post/security",
    "value": [
      {
        "HasPermission": [
          "NAMESPACE:{namespace}:CLOUDSAVE:RECORD [CREATE]"
        ],
        "HasScope": [
          "social"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1cloudsave~1v1~1namespaces~1{namespace}~1records~1{key}/post/description",
    "value": "&lt;table&gt;\n\t&lt;tr&gt;\n\t\t&lt;td&gt;Required Permission&lt;/td&gt;\n\t\t&lt;td&gt;&lt;code&gt;NAMESPACE:{namespace}:CLOUDSAVE:RECORD [CREATE]&lt;/code&gt;&lt;/td&gt;\n\t&lt;/tr&gt;\n\t&lt;tr&gt;\n\t\t&lt;td&gt;Required Scope&lt;/td&gt;\n\t\t&lt;td&gt;&lt;code&gt;social&lt;/code&gt;&lt;/td&gt;\n\t&lt;/tr&gt;\n&lt;/table&gt;\n&lt;br/&gt;\n\nIf there&#39;s already record, the record will be merged with conditions:\n- If field name is already exist, the value will be replaced\n- If field name is not exists it will append the field and its value\n\nExample:\n\nReplace value in a specific JSON key\n&lt;pre&gt;\n// existed record\n{\n\t&#34;foo&#34;: &#34;bar&#34;\n}\n\n// new update (request body)\n{\n\t&#34;foo&#34;: &#34;barUpdated&#34;\n}\n\n// result\n{\n\t&#34;foo&#34;: &#34;barUpdated&#34;\n}\n&lt;/pre&gt;\n\nAppend new json item\n&lt;pre&gt;\n// existed record\n{\n\t&#34;foo&#34;: &#34;bar&#34;\n}\n\n// new update (request body)\n{\n\t&#34;foo_new&#34;: &#34;bar_new&#34;\n}\n\n// result\n{\n\t&#34;foo&#34;: &#34;bar&#34;,\n\t&#34;foo_new&#34;: &#34;bar_new&#34;\n}\n&lt;/pre&gt;\n"
  },
  {
    "op": "add",
    "path": "/paths/~1cloudsave~1v1~1namespaces~1{namespace}~1records~1{key}/put/security",
    "value": [
      {
        "HasPermission": [
          "NAMESPACE:{namespace}:CLOUDSAVE:RECORD [UPDATE]"
        ],
        "HasScope": [
          "social"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1cloudsave~1v1~1namespaces~1{namespace}~1records~1{key}/put/description",
    "value": "&lt;table&gt;\n\t&lt;tr&gt;\n\t\t&lt;td&gt;Required Permission&lt;/td&gt;\n\t\t&lt;td&gt;&lt;code&gt;NAMESPACE:{namespace}:CLOUDSAVE:RECORD [UPDATE]&lt;/code&gt;&lt;/td&gt;\n\t&lt;/tr&gt;\n\t&lt;tr&gt;\n\t\t&lt;td&gt;Required Scope&lt;/td&gt;\n\t\t&lt;td&gt;&lt;code&gt;social&lt;/code&gt;&lt;/td&gt;\n\t&lt;/tr&gt;\n&lt;/table&gt;\n&lt;br/&gt;\n\nIf record already exists, it will be replaced with the one from request body (all fields will be\ndeleted). If record is not exists, it will create a new one with value from request body.\n\nExample:\n\nReplace all records\n&lt;pre&gt;\n\t// existed record\n\t{\n\t\t&#34;foo&#34;: &#34;bar&#34;\n\t}\n\n\t// new update (request body)\n\t{\n\t\t&#34;foo_new&#34;: &#34;bar_new&#34;\n\t}\n\n\t// result\n\t{\n\t\t&#34;foo_new&#34;: &#34;bar_new&#34;\n\t}\n&lt;/pre&gt;\n"
  },
  {
    "op": "add",
    "path": "/paths/~1cloudsave~1v1~1namespaces~1{namespace}~1users~1bulk~1records~1{key}~1public/post/security",
    "value": [
      {
        "HasPermission": [
          "NAMESPACE:{namespace}:PUBLIC:CLOUDSAVE:RECORD [READ]"
        ],
        "HasScope": [
          "social"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1cloudsave~1v1~1namespaces~1{namespace}~1users~1bulk~1records~1{key}~1public/post/description",
    "value": "&lt;table&gt;\n\t&lt;tr&gt;\n\t\t&lt;td&gt;Required Permission&lt;/td&gt;\n\t\t&lt;td&gt;&lt;code&gt;NAMESPACE:{namespace}:PUBLIC:CLOUDSAVE:RECORD [READ]&lt;/code&gt;&lt;/td&gt;\n\t&lt;/tr&gt;\n\t&lt;tr&gt;\n\t\t&lt;td&gt;Required Scope&lt;/td&gt;\n\t\t&lt;td&gt;&lt;code&gt;social&lt;/code&gt;&lt;/td&gt;\n\t&lt;/tr&gt;\n&lt;/table&gt;\n&lt;br/&gt;\n\t\nBulk get other player&#39;s record that is public by userIds, max allowed 20 at a time. Only record with &lt;code&gt;isPublic=true&lt;/code&gt; that can be\nretrieved using this endpoint.\n"
  },
  {
    "op": "add",
    "path": "/paths/~1cloudsave~1v1~1admin~1namespaces~1{namespace}~1users~1{userId}~1records~1{key}/delete/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:USER:{userId}:CLOUDSAVE:RECORD [DELETE]"
        ],
        "HasScope": [
          "social"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1cloudsave~1v1~1admin~1namespaces~1{namespace}~1users~1{userId}~1records~1{key}/delete/description",
    "value": "Required permission: ADMIN:NAMESPACE:{namespace}:USER:{userId}:CLOUDSAVE:RECORD [DELETE]\n\nRequired scope: social\n\nDelete a record (arbitrary JSON data) in user-level with given key. It will delete the record whether it&#39;s private or public record."
  },
  {
    "op": "add",
    "path": "/paths/~1cloudsave~1v1~1admin~1namespaces~1{namespace}~1users~1{userId}~1records~1{key}/get/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:USER:{userId}:CLOUDSAVE:RECORD [READ]"
        ],
        "HasScope": [
          "social"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "add",
    "path": "/paths/~1cloudsave~1v1~1admin~1namespaces~1{namespace}~1users~1{userId}~1records~1{key}/post/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:USER:{userId}:CLOUDSAVE:RECORD [CREATE]"
        ],
        "HasScope": [
          "social"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "add",
    "path": "/paths/~1cloudsave~1v1~1admin~1namespaces~1{namespace}~1users~1{userId}~1records~1{key}/put/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:USER:{userId}:CLOUDSAVE:RECORD [UPDATE]"
        ],
        "HasScope": [
          "social"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "add",
    "path": "/paths/~1cloudsave~1v1~1admin~1namespaces~1{namespace}~1records/get/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:CLOUDSAVE:RECORD [READ]"
        ],
        "HasScope": [
          "social"
        ],
        "authorization": []
      }
    ]
  }
]

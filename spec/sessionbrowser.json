{
  "host": "demo.accelbyte.io",
  "info": {
    "description": "Justice Session Browser Service",
    "title": "justice-session-browser-service",
    "version": ""
  },
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "HasPermission": {
      "authorizationUrl": "https://dummy.oauth.net/auth",
      "flow": "accessCode",
      "scopes": {
        "ADMIN:NAMESPACE:{namespace}:SESSION [Read]": "ADMIN:NAMESPACE:{namespace}:SESSION [Read]",
        "ADMIN:NAMESPACE:{namespace}:SESSIONBROWSER:SESSION [DELETE]": "ADMIN:NAMESPACE:{namespace}:SESSIONBROWSER:SESSION [DELETE]",
        "ADMIN:NAMESPACE:{namespace}:SESSIONBROWSER:SESSION [READ]": "ADMIN:NAMESPACE:{namespace}:SESSIONBROWSER:SESSION [READ]",
        "ADMIN:NAMESPACE:{namespace}:SESSIONBROWSER:SESSION [Read]": "ADMIN:NAMESPACE:{namespace}:SESSIONBROWSER:SESSION [Read]",
        "NAMESPACE:{namespace}:SESSIONBROWSER:RECENTPLAYER [READ]": "NAMESPACE:{namespace}:SESSIONBROWSER:RECENTPLAYER [READ]",
        "NAMESPACE:{namespace}:SESSIONBROWSER:SESSION [CREATE]": "NAMESPACE:{namespace}:SESSIONBROWSER:SESSION [CREATE]",
        "NAMESPACE:{namespace}:SESSIONBROWSER:SESSION [DELETE]": "NAMESPACE:{namespace}:SESSIONBROWSER:SESSION [DELETE]",
        "NAMESPACE:{namespace}:SESSIONBROWSER:SESSION [READ]": "NAMESPACE:{namespace}:SESSIONBROWSER:SESSION [READ]",
        "NAMESPACE:{namespace}:SESSIONBROWSER:SESSION [UPDATE]": "NAMESPACE:{namespace}:SESSIONBROWSER:SESSION [UPDATE]"
      },
      "tokenUrl": "https://dumy.oauth.net/token",
      "type": "oauth2"
    },
    "HasScope": {
      "authorizationUrl": "https://dummy.oauth.net/auth",
      "flow": "accessCode",
      "scopes": {
        "social": "social"
      },
      "tokenUrl": "https://dumy.oauth.net/token",
      "type": "oauth2"
    },
    "authorization": {
      "in": "header",
      "name": "Authorization",
      "type": "apiKey"
    }
  },
  "swagger": "2.0",
  "paths": {
    "/sessionbrowser/admin/namespaces/{namespace}/gamesession/active/count": {
      "get": {
        "description": "Required permission: ADMIN:NAMESPACE:{namespace}:SESSIONBROWSER:SESSION [READ]\n\nRequired scope: social",
        "operationId": "GetTotalActiveSession",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "session type to query, accept 'dedicated' or 'p2p'",
            "in": "query",
            "name": "session_type",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "total active session, p2p session will only have 'total' attribute",
            "schema": {
              "$ref": "#/definitions/models.CountActiveSessionResponse"
            }
          },
          "400": {
            "description": "malformed request",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseV2"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseV2"
            }
          }
        },
        "security": [
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:SESSIONBROWSER:SESSION [READ]"
            ],
            "HasScope": [
              "social"
            ],
            "authorization": []
          }
        ],
        "summary": "Get all active session",
        "tags": [
          "Session"
        ]
      }
    },
    "/sessionbrowser/admin/namespaces/{namespace}/gamesession/active/custom-game": {
      "get": {
        "description": "Required permission: ADMIN:NAMESPACE:{namespace}:SESSIONBROWSER:SESSION [READ]\n\nRequired scope: social",
        "operationId": "GetActiveCustomGameSessions",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "server region",
            "in": "query",
            "name": "server_region",
            "type": "string"
          },
          {
            "description": "game session ID",
            "in": "query",
            "name": "session_id",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "custom game session list",
            "schema": {
              "$ref": "#/definitions/models.ActiveCustomGameResponse"
            }
          },
          "400": {
            "description": "malformed request",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseV2"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseV2"
            }
          }
        },
        "security": [
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:SESSIONBROWSER:SESSION [READ]"
            ],
            "HasScope": [
              "social"
            ],
            "authorization": []
          }
        ],
        "summary": "Get all active session for custom game, this return only dedicated session type",
        "tags": [
          "Session"
        ]
      }
    },
    "/sessionbrowser/admin/namespaces/{namespace}/gamesession/active/matchmaking-game": {
      "get": {
        "description": "Required permission: ADMIN:NAMESPACE:{namespace}:SESSIONBROWSER:SESSION [READ]\n\nRequired scope: social",
        "operationId": "GetActiveMatchmakingGameSessions",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "matchmaking ID",
            "in": "query",
            "name": "match_id",
            "type": "string"
          },
          {
            "description": "server region",
            "in": "query",
            "name": "server_region",
            "type": "string"
          },
          {
            "description": "game session ID",
            "in": "query",
            "name": "session_id",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "matchmaking game session list",
            "schema": {
              "$ref": "#/definitions/models.ActiveMatchmakingGameResponse"
            }
          },
          "400": {
            "description": "malformed request",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseV2"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseV2"
            }
          }
        },
        "security": [
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:SESSIONBROWSER:SESSION [READ]"
            ],
            "HasScope": [
              "social"
            ],
            "authorization": []
          }
        ],
        "summary": "Get all active session for matchmaking game, this return only dedicated session type",
        "tags": [
          "Session"
        ]
      }
    },
    "/sessionbrowser/admin/namespaces/{namespace}/gamesession/{sessionID}": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Required permission: ADMIN:NAMESPACE:{namespace}:SESSIONBROWSER:SESSION [DELETE]\n\nRequired scope: social\n\nAdmin delete the session by session ID",
        "operationId": "AdminDeleteSession",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "session ID",
            "in": "path",
            "name": "sessionID",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "session deleted",
            "schema": {
              "$ref": "#/definitions/models.AdminSessionResponse"
            }
          },
          "400": {
            "description": "malformed request",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseV2"
            }
          },
          "404": {
            "description": "session not found",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseV2"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseV2"
            }
          }
        },
        "security": [
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:SESSIONBROWSER:SESSION [DELETE]"
            ],
            "HasScope": [
              "social"
            ],
            "authorization": []
          }
        ],
        "summary": "Admin delete specified session by session ID",
        "tags": [
          "Session"
        ]
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Required permission: ADMIN:NAMESPACE:{namespace}:SESSIONBROWSER:SESSION [READ]\n\nRequired scope: social\n\nGet the session by session ID for admin user",
        "operationId": "AdminGetSession",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "session ID",
            "in": "path",
            "name": "sessionID",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "session get",
            "schema": {
              "$ref": "#/definitions/models.AdminSessionResponse"
            }
          },
          "404": {
            "description": "session not found",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseV2"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseV2"
            }
          }
        },
        "security": [
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:SESSIONBROWSER:SESSION [READ]"
            ],
            "HasScope": [
              "social"
            ],
            "authorization": []
          }
        ],
        "summary": "Admin get specified session by session ID",
        "tags": [
          "Session"
        ]
      }
    },
    "/sessionbrowser/admin/namespaces/{namespace}/sessions/history/search": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Required Permission: ADMIN:NAMESPACE:{namespace}:SESSION [Read]\n\t\nRequired Scope: social\n\t\nSearch sessions. Optimize the query by differentiating query with filter namespace only and filter with namespace \u0026amp; other filter (partyID, userID, matchID).\nQuery with filter namespace only will not group whole session data while query with filter namespace \u0026amp; other filter will include session data.",
        "operationId": "AdminSearchSessionsV2",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "limit",
            "in": "query",
            "name": "limit",
            "required": true,
            "type": "integer"
          },
          {
            "description": "offset",
            "in": "query",
            "name": "offset",
            "required": true,
            "type": "integer"
          },
          {
            "description": "ID of the channel",
            "in": "query",
            "name": "channel",
            "type": "string"
          },
          {
            "description": "only deleted session",
            "in": "query",
            "name": "deleted",
            "type": "boolean",
            "x-omitempty": false
          },
          {
            "description": "ID of the match session",
            "in": "query",
            "name": "matchID",
            "type": "string"
          },
          {
            "description": "ID of the party",
            "in": "query",
            "name": "partyID",
            "type": "string"
          },
          {
            "description": "ID of the user",
            "in": "query",
            "name": "userID",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Operation succeeded",
            "schema": {
              "$ref": "#/definitions/models.GetSessionHistorySearchResponseV2"
            }
          },
          "400": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eerrorCode\u003c/td\u003e\u003ctd\u003eerrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e20002\u003c/td\u003e\u003ctd\u003evalidation error\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e20019\u003c/td\u003e\u003ctd\u003eunable to parse request body\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorV1"
            }
          },
          "401": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eerrorCode\u003c/td\u003e\u003ctd\u003eerrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e20001\u003c/td\u003e\u003ctd\u003eunauthorized access\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorV1"
            }
          },
          "403": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eerrorCode\u003c/td\u003e\u003ctd\u003eerrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e20013\u003c/td\u003e\u003ctd\u003einsufficient permissions\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e20014\u003c/td\u003e\u003ctd\u003einvalid audience\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e20015\u003c/td\u003e\u003ctd\u003einsufficient scope\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorV1"
            }
          },
          "500": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eerrorCode\u003c/td\u003e\u003ctd\u003eerrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e20000\u003c/td\u003e\u003ctd\u003einternal server error\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        },
        "security": [
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:SESSION [Read]"
            ],
            "HasScope": [
              "social"
            ],
            "authorization": []
          }
        ],
        "summary": "Search sessions",
        "tags": [
          "Session"
        ]
      }
    },
    "/sessionbrowser/admin/namespaces/{namespace}/sessions/{matchID}/history/detailed": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Required Permission: ADMIN:NAMESPACE:{namespace}:SESSIONBROWSER:SESSION [Read]\n\t\nRequired Scope: social\n\t\nGet session history detailed.\n\nif party_id value empty/null, field will not show in response body.",
        "operationId": "GetSessionHistoryDetailed",
        "parameters": [
          {
            "description": "ID of the match session",
            "in": "path",
            "name": "matchID",
            "required": true,
            "type": "string"
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Operation succeeded",
            "schema": {
              "items": {
                "$ref": "#/definitions/models.GetSessionHistoryDetailedResponseItem"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eerrorCode\u003c/td\u003e\u003ctd\u003eerrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e20002\u003c/td\u003e\u003ctd\u003evalidation error\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e20019\u003c/td\u003e\u003ctd\u003eunable to parse request body\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorV1"
            }
          },
          "401": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eerrorCode\u003c/td\u003e\u003ctd\u003eerrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e20001\u003c/td\u003e\u003ctd\u003eunauthorized access\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorV1"
            }
          },
          "403": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eerrorCode\u003c/td\u003e\u003ctd\u003eerrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e20013\u003c/td\u003e\u003ctd\u003einsufficient permissions\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e20014\u003c/td\u003e\u003ctd\u003einvalid audience\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e20015\u003c/td\u003e\u003ctd\u003einsufficient scope\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorV1"
            }
          },
          "500": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eerrorCode\u003c/td\u003e\u003ctd\u003eerrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e20000\u003c/td\u003e\u003ctd\u003einternal server error\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorV1"
            }
          }
        },
        "security": [
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:SESSIONBROWSER:SESSION [Read]"
            ],
            "HasScope": [
              "social"
            ],
            "authorization": []
          }
        ],
        "summary": "Get session history detailed",
        "tags": [
          "Session"
        ]
      }
    },
    "/sessionbrowser/namespaces/{namespace}/gamesession": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Required permission: NAMESPACE:{namespace}:SESSIONBROWSER:SESSION [READ]\n\nRequired scope: social\n\nQuery available game session",
        "operationId": "QuerySession",
        "parameters": [
          {
            "description": "namespace of the game",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "Session type to query, value is 'p2p' or 'dedicated'",
            "in": "query",
            "name": "session_type",
            "required": true,
            "type": "string"
          },
          {
            "description": "Game mode of the session to query",
            "in": "query",
            "name": "game_mode",
            "type": "string"
          },
          {
            "description": "Game version of the session to query",
            "in": "query",
            "name": "game_version",
            "type": "string"
          },
          {
            "description": "filter session if joinable or not, accept 'true' or 'false'",
            "in": "query",
            "name": "joinable",
            "type": "string"
          },
          {
            "description": "max item to be returned",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "description": "filter session by match existence, accept 'true' or 'false'",
            "in": "query",
            "name": "match_exist",
            "type": "string"
          },
          {
            "description": "filter session by matchmaking ID",
            "in": "query",
            "name": "match_id",
            "type": "string"
          },
          {
            "description": "skip some item(s), offset=3, will skip 3 first items",
            "in": "query",
            "name": "offset",
            "type": "integer"
          },
          {
            "description": "filter session by server status, accept CREATING,READY,BUSY,REMOVING,UNREACHABLE",
            "in": "query",
            "name": "server_status",
            "type": "string"
          },
          {
            "description": "Owner of the P2P session. Dedicated server does not have user_id",
            "in": "query",
            "name": "user_id",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "session get",
            "schema": {
              "$ref": "#/definitions/models.SessionQueryResponse"
            }
          },
          "400": {
            "description": "malformed request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        },
        "security": [
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:SESSIONBROWSER:SESSION [READ]"
            ],
            "HasScope": [
              "social"
            ],
            "authorization": []
          }
        ],
        "summary": "Query to available game session",
        "tags": [
          "Session"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Required permission: NAMESPACE:{namespace}:SESSIONBROWSER:SESSION [CREATE]\n\nRequired scope: social\n\nThis end point intended to be called directly by P2P game client host or by DSMC",
        "operationId": "CreateSession",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.CreateSessionRequest"
            }
          },
          {
            "description": "namespace of the game",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "session created",
            "schema": {
              "$ref": "#/definitions/models.SessionResponse"
            }
          },
          "400": {
            "description": "malformed request",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseV2"
            }
          },
          "403": {
            "description": "user is banned from creating session",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseV2"
            }
          },
          "409": {
            "description": "session already exists",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseV2"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        },
        "security": [
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:SESSIONBROWSER:SESSION [CREATE]"
            ],
            "HasScope": [
              "social"
            ],
            "authorization": []
          }
        ],
        "summary": "Register a new game session",
        "tags": [
          "Session"
        ]
      }
    },
    "/sessionbrowser/namespaces/{namespace}/gamesession/bulk": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Required permission: NAMESPACE:{namespace}:SESSIONBROWSER:SESSION [READ]\n\nRequired scope: social\n\nQuery game sessions by comma separated user ids",
        "operationId": "GetSessionByUserIDs",
        "parameters": [
          {
            "description": "namespace of the game",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "comma separated user ids",
            "in": "query",
            "name": "user_ids",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "session get",
            "schema": {
              "$ref": "#/definitions/models.SessionByUserIDsResponse"
            }
          },
          "400": {
            "description": "malformed request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        },
        "security": [
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:SESSIONBROWSER:SESSION [READ]"
            ],
            "HasScope": [
              "social"
            ],
            "authorization": []
          }
        ],
        "summary": "Query game sessions by comma separated user ids",
        "tags": [
          "Session"
        ]
      }
    },
    "/sessionbrowser/namespaces/{namespace}/gamesession/{sessionID}": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Required permission: NAMESPACE:{namespace}:SESSIONBROWSER:SESSION [DELETE]\n\nRequired scope: social\n\nDelete the session (p2p) by session ID",
        "operationId": "DeleteSession",
        "parameters": [
          {
            "description": "namespace of the game",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "session ID",
            "in": "path",
            "name": "sessionID",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "session get",
            "schema": {
              "$ref": "#/definitions/models.SessionResponse"
            }
          },
          "400": {
            "description": "malformed request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "session not found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        },
        "security": [
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:SESSIONBROWSER:SESSION [DELETE]"
            ],
            "HasScope": [
              "social"
            ],
            "authorization": []
          }
        ],
        "summary": "Delete specified (p2p) session by session ID",
        "tags": [
          "Session"
        ]
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Required permission: NAMESPACE:{namespace}:SESSIONBROWSER:SESSION [READ]\n\nRequired scope: social\n\nGet the session by session ID",
        "operationId": "GetSession",
        "parameters": [
          {
            "description": "namespace of the game",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "session ID",
            "in": "path",
            "name": "sessionID",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "session get",
            "schema": {
              "$ref": "#/definitions/models.SessionResponse"
            }
          },
          "404": {
            "description": "session not found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        },
        "security": [
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:SESSIONBROWSER:SESSION [READ]"
            ],
            "HasScope": [
              "social"
            ],
            "authorization": []
          }
        ],
        "summary": "Get specified session by session ID",
        "tags": [
          "Session"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Required permission: NAMESPACE:{namespace}:SESSIONBROWSER:SESSION [UPDATE]\n\nRequired scope: social\n\nUpdate game session, used to update the current player",
        "operationId": "UpdateSession",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.UpdateSessionRequest"
            }
          },
          {
            "description": "namespace of the game",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "session ID",
            "in": "path",
            "name": "sessionID",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "session updated",
            "schema": {
              "$ref": "#/definitions/models.SessionResponse"
            }
          },
          "400": {
            "description": "malformed request",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseV2"
            }
          },
          "404": {
            "description": "session not found",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseV2"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseV2"
            }
          }
        },
        "security": [
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:SESSIONBROWSER:SESSION [UPDATE]"
            ],
            "HasScope": [
              "social"
            ],
            "authorization": []
          }
        ],
        "summary": "Update session",
        "tags": [
          "Session"
        ]
      }
    },
    "/sessionbrowser/namespaces/{namespace}/gamesession/{sessionID}/join": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Required permission: NAMESPACE:{namespace}:SESSIONBROWSER:SESSION [READ]\n\nRequired scope: social\n\nJoin the specified session by session ID. Possible the game required a password to join",
        "operationId": "JoinSession",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.JoinGameSessionRequest"
            }
          },
          {
            "description": "namespace of the game",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "session ID",
            "in": "path",
            "name": "sessionID",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "session get",
            "schema": {
              "$ref": "#/definitions/models.SessionResponse"
            }
          },
          "400": {
            "description": "malformed request",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseV2"
            }
          },
          "403": {
            "description": "user is banned from joining session",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseV2"
            }
          },
          "404": {
            "description": "session not found",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseV2"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseV2"
            }
          }
        },
        "security": [
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:SESSIONBROWSER:SESSION [READ]"
            ],
            "HasScope": [
              "social"
            ],
            "authorization": []
          }
        ],
        "summary": "Join specified session by session ID",
        "tags": [
          "Session"
        ]
      }
    },
    "/sessionbrowser/namespaces/{namespace}/gamesession/{sessionID}/localds": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Required permission: NAMESPACE:{namespace}:SESSIONBROWSER:SESSION [DELETE]\n\nRequired scope: social\n\nOnly use for local DS entry, will error when calling non local DS entry",
        "operationId": "DeleteSessionLocalDS",
        "parameters": [
          {
            "description": "namespace of the game",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "session ID",
            "in": "path",
            "name": "sessionID",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "session get",
            "schema": {
              "$ref": "#/definitions/models.SessionResponse"
            }
          },
          "400": {
            "description": "malformed request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "session not found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        },
        "security": [
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:SESSIONBROWSER:SESSION [DELETE]"
            ],
            "HasScope": [
              "social"
            ],
            "authorization": []
          }
        ],
        "summary": "Only use for local DS entry, will error when calling non local DS entry",
        "tags": [
          "Session"
        ]
      }
    },
    "/sessionbrowser/namespaces/{namespace}/gamesession/{sessionID}/player": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Required permission: NAMESPACE:{namespace}:SESSIONBROWSER:SESSION [UPDATE]\n\nRequired scope: social\n\nAdd player to game session",
        "operationId": "AddPlayerToSession",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.AddPlayerRequest"
            }
          },
          {
            "description": "namespace of the game",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "session ID",
            "in": "path",
            "name": "sessionID",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "session updated",
            "schema": {
              "$ref": "#/definitions/models.AddPlayerResponse"
            }
          },
          "400": {
            "description": "malformed request",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseV2"
            }
          },
          "404": {
            "description": "session not found",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseV2"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseV2"
            }
          }
        },
        "security": [
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:SESSIONBROWSER:SESSION [UPDATE]"
            ],
            "HasScope": [
              "social"
            ],
            "authorization": []
          }
        ],
        "summary": "Add player to game session",
        "tags": [
          "Session"
        ]
      }
    },
    "/sessionbrowser/namespaces/{namespace}/gamesession/{sessionID}/player/{userID}": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Required permission: NAMESPACE:{namespace}:SESSIONBROWSER:SESSION [UPDATE]\n\nRequired scope: social\n\nRemove player from game session",
        "operationId": "RemovePlayerFromSession",
        "parameters": [
          {
            "description": "namespace of the game",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "session ID",
            "in": "path",
            "name": "sessionID",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "player removed",
            "schema": {
              "$ref": "#/definitions/models.AddPlayerResponse"
            }
          },
          "400": {
            "description": "malformed request",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseV2"
            }
          },
          "404": {
            "description": "session not found",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseV2"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseV2"
            }
          }
        },
        "security": [
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:SESSIONBROWSER:SESSION [UPDATE]"
            ],
            "HasScope": [
              "social"
            ],
            "authorization": []
          }
        ],
        "summary": "remove player from game session",
        "tags": [
          "Session"
        ]
      }
    },
    "/sessionbrowser/namespaces/{namespace}/gamesession/{sessionID}/settings": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Required permission: NAMESPACE:{namespace}:SESSIONBROWSER:SESSION [UPDATE]\n\nRequired scope: social\n\nUpdate game session, used to update OtherSettings",
        "operationId": "UpdateSettings",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.UpdateSettingsRequest"
            }
          },
          {
            "description": "namespace of the game",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "session ID",
            "in": "path",
            "name": "sessionID",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "session updated",
            "schema": {
              "$ref": "#/definitions/models.SessionResponse"
            }
          },
          "400": {
            "description": "malformed request",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseV2"
            }
          },
          "404": {
            "description": "session not found",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseV2"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/restapi.ErrorResponseV2"
            }
          }
        },
        "security": [
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:SESSIONBROWSER:SESSION [UPDATE]"
            ],
            "HasScope": [
              "social"
            ],
            "authorization": []
          }
        ],
        "summary": "Update settings",
        "tags": [
          "Session"
        ]
      }
    },
    "/sessionbrowser/namespaces/{namespace}/recentplayer/{userID}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Required permission: NAMESPACE:{namespace}:SESSIONBROWSER:RECENTPLAYER [READ]\n\nRequired scope: social\n\nQuery recent player by user ID",
        "operationId": "GetRecentPlayer",
        "parameters": [
          {
            "description": "namespace of the game",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "recent player get",
            "schema": {
              "$ref": "#/definitions/models.RecentPlayerQueryResponse"
            }
          },
          "400": {
            "description": "malformed request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        },
        "security": [
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:SESSIONBROWSER:RECENTPLAYER [READ]"
            ],
            "HasScope": [
              "social"
            ],
            "authorization": []
          }
        ],
        "summary": "Query recent players with given user id",
        "tags": [
          "Session"
        ]
      }
    }
  },
  "definitions": {
    "models.ActiveCustomGameResponse": {
      "properties": {
        "pagination": {
          "$ref": "#/definitions/models.PagingCursor"
        },
        "sessions": {
          "items": {
            "$ref": "#/definitions/models.CustomGameResponse"
          },
          "type": "array"
        }
      },
      "required": [
        "pagination",
        "sessions"
      ]
    },
    "models.ActiveMatchmakingGameResponse": {
      "properties": {
        "pagination": {
          "$ref": "#/definitions/models.PagingCursor"
        },
        "sessions": {
          "items": {
            "$ref": "#/definitions/models.GameSession"
          },
          "type": "array"
        }
      },
      "required": [
        "pagination",
        "sessions"
      ]
    },
    "models.AddPlayerRequest": {
      "properties": {
        "as_spectator": {
          "type": "boolean",
          "x-omitempty": false
        },
        "user_id": {
          "type": "string"
        }
      },
      "required": [
        "as_spectator",
        "user_id"
      ]
    },
    "models.AddPlayerResponse": {
      "properties": {
        "status": {
          "type": "boolean",
          "x-omitempty": false
        }
      },
      "required": [
        "status"
      ]
    },
    "models.AdminSessionResponse": {
      "properties": {
        "all_players": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-nullable": false
        },
        "game_session_setting": {
          "$ref": "#/definitions/models.GameSessionSetting"
        },
        "game_version": {
          "type": "string"
        },
        "joinable": {
          "type": "boolean",
          "x-omitempty": false
        },
        "match": {
          "$ref": "#/definitions/models.MatchMaking"
        },
        "namespace": {
          "type": "string"
        },
        "players": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "server": {
          "$ref": "#/definitions/models.Server"
        },
        "session_id": {
          "type": "string"
        },
        "session_type": {
          "type": "string"
        },
        "spectators": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "user_id": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      },
      "required": [
        "all_players",
        "created_at",
        "game_session_setting",
        "game_version",
        "joinable",
        "match",
        "namespace",
        "players",
        "server",
        "session_id",
        "session_type",
        "spectators",
        "user_id",
        "username"
      ]
    },
    "models.CountActiveSessionResponse": {
      "properties": {
        "custom_game": {
          "format": "int64",
          "type": "integer"
        },
        "matchmaking_game": {
          "format": "int64",
          "type": "integer"
        },
        "total": {
          "format": "int64",
          "type": "integer"
        }
      },
      "required": [
        "custom_game",
        "matchmaking_game",
        "total"
      ]
    },
    "models.CreateSessionRequest": {
      "properties": {
        "game_session_setting": {
          "$ref": "#/definitions/models.GameSessionSetting"
        },
        "game_version": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "session_type": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      },
      "required": [
        "game_session_setting",
        "game_version",
        "namespace",
        "session_type",
        "username"
      ]
    },
    "models.CustomGameResponse": {
      "properties": {
        "all_players": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-nullable": false
        },
        "game_session_setting": {
          "$ref": "#/definitions/models.GameSessionSetting"
        },
        "joinable": {
          "type": "boolean",
          "x-omitempty": false
        },
        "namespace": {
          "type": "string"
        },
        "players": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "server": {
          "$ref": "#/definitions/models.Server"
        },
        "session_id": {
          "type": "string"
        },
        "session_type": {
          "type": "string"
        },
        "spectators": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "all_players",
        "created_at",
        "game_session_setting",
        "joinable",
        "namespace",
        "players",
        "server",
        "session_id",
        "session_type",
        "spectators"
      ]
    },
    "models.GameSession": {
      "properties": {
        "all_players": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-nullable": false
        },
        "game_session_setting": {
          "$ref": "#/definitions/models.GameSessionSetting"
        },
        "game_version": {
          "type": "string"
        },
        "joinable": {
          "type": "boolean",
          "x-omitempty": false
        },
        "match": {
          "$ref": "#/definitions/models.MatchMaking"
        },
        "namespace": {
          "type": "string"
        },
        "players": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "server": {
          "$ref": "#/definitions/models.Server"
        },
        "session_id": {
          "type": "string"
        },
        "session_type": {
          "type": "string"
        },
        "spectators": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "user_id": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      },
      "required": [
        "all_players",
        "created_at",
        "game_session_setting",
        "game_version",
        "joinable",
        "match",
        "namespace",
        "players",
        "server",
        "session_id",
        "session_type",
        "spectators",
        "user_id",
        "username"
      ]
    },
    "models.GameSessionSetting": {
      "properties": {
        "allow_join_in_progress": {
          "type": "boolean",
          "x-omitempty": false
        },
        "current_internal_player": {
          "format": "int32",
          "type": "integer"
        },
        "current_player": {
          "format": "int32",
          "type": "integer"
        },
        "map_name": {
          "type": "string"
        },
        "max_internal_player": {
          "format": "int32",
          "type": "integer"
        },
        "max_player": {
          "format": "int32",
          "type": "integer"
        },
        "mode": {
          "type": "string"
        },
        "num_bot": {
          "format": "int32",
          "type": "integer"
        },
        "password": {
          "type": "string"
        },
        "settings": {
          "type": "object"
        }
      },
      "required": [
        "allow_join_in_progress",
        "current_internal_player",
        "current_player",
        "map_name",
        "max_internal_player",
        "max_player",
        "mode",
        "num_bot",
        "password",
        "settings"
      ]
    },
    "models.GetSessionHistoryDetailedResponseItem": {
      "properties": {
        "_id": {
          "type": "string",
          "x-nullable": true
        },
        "channel": {
          "type": "string",
          "x-nullable": false
        },
        "client_version": {
          "type": "string",
          "x-nullable": false
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-nullable": false
        },
        "event_description": {
          "type": "string",
          "x-nullable": true
        },
        "event_name": {
          "type": "string",
          "x-nullable": false
        },
        "game_mode": {
          "type": "string",
          "x-nullable": false
        },
        "joinable": {
          "type": "boolean",
          "x-nullable": false,
          "x-omitempty": false
        },
        "match_id": {
          "type": "string",
          "x-nullable": false
        },
        "matching_allies": {
          "items": {
            "$ref": "#/definitions/models.MatchingAlly"
          },
          "type": "array",
          "x-nullable": false
        },
        "namespace": {
          "type": "string",
          "x-nullable": false
        },
        "party_id": {
          "type": "string",
          "x-nullable": false
        },
        "region": {
          "type": "string",
          "x-nullable": false
        },
        "server_name": {
          "type": "string",
          "x-nullable": false
        },
        "status": {
          "type": "string",
          "x-nullable": false
        }
      },
      "required": [
        "_id",
        "channel",
        "client_version",
        "created_at",
        "event_description",
        "event_name",
        "game_mode",
        "joinable",
        "match_id",
        "matching_allies",
        "namespace",
        "region",
        "server_name",
        "status"
      ]
    },
    "models.GetSessionHistorySearchResponseItemV2": {
      "properties": {
        "_id": {
          "type": "string",
          "x-nullable": false
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-nullable": false
        },
        "game_mode": {
          "type": "string",
          "x-nullable": false
        },
        "joinable": {
          "type": "boolean",
          "x-nullable": false,
          "x-omitempty": false
        },
        "match_id": {
          "type": "string",
          "x-nullable": false
        },
        "namespace": {
          "type": "string",
          "x-nullable": false
        },
        "status": {
          "type": "string",
          "x-nullable": false
        },
        "sub_game_mode": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "_id",
        "created_at",
        "game_mode",
        "joinable",
        "match_id",
        "namespace",
        "status",
        "sub_game_mode"
      ]
    },
    "models.GetSessionHistorySearchResponseV2": {
      "properties": {
        "data": {
          "items": {
            "$ref": "#/definitions/models.GetSessionHistorySearchResponseItemV2"
          },
          "type": "array"
        },
        "pagination": {
          "$ref": "#/definitions/models.Pagination"
        }
      },
      "required": [
        "data",
        "pagination"
      ]
    },
    "models.JoinGameSessionRequest": {
      "properties": {
        "password": {
          "type": "string"
        }
      },
      "required": [
        "password"
      ]
    },
    "models.MatchAttributes": {
      "properties": {
        "first_ticket_created_at": {
          "format": "int64",
          "type": "integer"
        }
      },
      "required": [
        "first_ticket_created_at"
      ]
    },
    "models.MatchMaking": {
      "properties": {
        "channel": {
          "type": "string",
          "x-nullable": false
        },
        "client_version": {
          "type": "string",
          "x-nullable": false
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-nullable": false
        },
        "deployment": {
          "type": "string",
          "x-nullable": false
        },
        "event": {
          "type": "string"
        },
        "game_mode": {
          "type": "string",
          "x-nullable": false
        },
        "joinable": {
          "type": "boolean",
          "x-nullable": true,
          "x-omitempty": false
        },
        "match_id": {
          "type": "string",
          "x-nullable": false
        },
        "matching_allies": {
          "items": {
            "$ref": "#/definitions/models.MatchingAlly"
          },
          "type": "array"
        },
        "namespace": {
          "type": "string",
          "x-nullable": false
        },
        "party_attributes": {
          "type": "object"
        },
        "party_id": {
          "type": "string",
          "x-nullable": true
        },
        "queued_at": {
          "format": "int64",
          "type": "integer",
          "x-nullable": false
        },
        "region": {
          "type": "string",
          "x-nullable": false
        },
        "server_name": {
          "type": "string",
          "x-nullable": false
        },
        "status": {
          "type": "string",
          "x-nullable": false
        },
        "sub_game_mode": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "channel",
        "client_version",
        "created_at",
        "deployment",
        "event",
        "game_mode",
        "match_id",
        "matching_allies",
        "namespace",
        "party_attributes",
        "queued_at",
        "region",
        "server_name",
        "status",
        "sub_game_mode"
      ]
    },
    "models.MatchingAlly": {
      "properties": {
        "matching_parties": {
          "items": {
            "$ref": "#/definitions/models.MatchingParty"
          },
          "type": "array"
        }
      },
      "required": [
        "matching_parties"
      ]
    },
    "models.MatchingParty": {
      "properties": {
        "match_attributes": {
          "$ref": "#/definitions/models.MatchAttributes"
        },
        "party_attributes": {
          "type": "object"
        },
        "party_id": {
          "type": "string",
          "x-nullable": false
        },
        "party_members": {
          "items": {
            "$ref": "#/definitions/models.PartyMember"
          },
          "type": "array"
        }
      },
      "required": [
        "match_attributes",
        "party_attributes",
        "party_id",
        "party_members"
      ]
    },
    "models.Pagination": {
      "properties": {
        "first": {
          "type": "string"
        },
        "last": {
          "type": "string"
        },
        "next": {
          "type": "string"
        },
        "previous": {
          "type": "string"
        }
      },
      "required": [
        "first",
        "last",
        "next",
        "previous"
      ]
    },
    "models.PagingCursor": {
      "properties": {
        "next": {
          "type": "string"
        },
        "previous": {
          "type": "string"
        }
      },
      "required": [
        "next",
        "previous"
      ]
    },
    "models.PartyMember": {
      "properties": {
        "extra_attributes": {
          "type": "object"
        },
        "user_id": {
          "type": "string",
          "x-nullable": false
        }
      },
      "required": [
        "extra_attributes",
        "user_id"
      ]
    },
    "models.RecentPlayerHistory": {
      "properties": {
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-nullable": false
        },
        "namespace": {
          "type": "string"
        },
        "other_display_name": {
          "type": "string"
        },
        "other_id": {
          "type": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-nullable": false
        },
        "user_id": {
          "type": "string"
        }
      },
      "required": [
        "created_at",
        "namespace",
        "other_display_name",
        "other_id",
        "updated_at",
        "user_id"
      ]
    },
    "models.RecentPlayerQueryResponse": {
      "properties": {
        "data": {
          "items": {
            "$ref": "#/definitions/models.RecentPlayerHistory"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ]
    },
    "models.Server": {
      "properties": {
        "allocation_id": {
          "type": "string"
        },
        "alternate_ips": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "cpu_limit": {
          "format": "int32",
          "type": "integer"
        },
        "cpu_request": {
          "type": "string"
        },
        "deployment": {
          "type": "string"
        },
        "game_version": {
          "type": "string"
        },
        "image_version": {
          "type": "string"
        },
        "ip": {
          "type": "string"
        },
        "is_override_game_version": {
          "type": "boolean",
          "x-omitempty": false
        },
        "last_update": {
          "format": "date-time",
          "type": "string",
          "x-nullable": false
        },
        "mem_limit": {
          "format": "int32",
          "type": "integer"
        },
        "mem_request": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "params": {
          "type": "string"
        },
        "pod_name": {
          "type": "string"
        },
        "port": {
          "format": "int32",
          "type": "integer"
        },
        "ports": {
          "additionalProperties": {
            "type": "integer"
          },
          "type": "object"
        },
        "provider": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "session_id": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "status_history": {
          "items": {
            "$ref": "#/definitions/models.StatusHistory"
          },
          "type": "array"
        }
      },
      "required": [
        "allocation_id",
        "alternate_ips",
        "cpu_limit",
        "cpu_request",
        "deployment",
        "game_version",
        "image_version",
        "ip",
        "is_override_game_version",
        "last_update",
        "mem_limit",
        "mem_request",
        "namespace",
        "params",
        "pod_name",
        "port",
        "ports",
        "provider",
        "region",
        "session_id",
        "status",
        "status_history"
      ]
    },
    "models.SessionByUserIDsResponse": {
      "properties": {
        "data": {
          "items": {
            "$ref": "#/definitions/models.GameSession"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ]
    },
    "models.SessionQueryResponse": {
      "properties": {
        "pagination": {
          "$ref": "#/definitions/models.PagingCursor"
        },
        "sessions": {
          "items": {
            "$ref": "#/definitions/models.GameSession"
          },
          "type": "array"
        }
      },
      "required": [
        "pagination",
        "sessions"
      ]
    },
    "models.SessionResponse": {
      "properties": {
        "all_players": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-nullable": false
        },
        "game_session_setting": {
          "$ref": "#/definitions/models.GameSessionSetting"
        },
        "game_version": {
          "type": "string"
        },
        "joinable": {
          "type": "boolean",
          "x-omitempty": false
        },
        "match": {
          "$ref": "#/definitions/models.MatchMaking"
        },
        "namespace": {
          "type": "string"
        },
        "players": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "server": {
          "$ref": "#/definitions/models.Server"
        },
        "session_id": {
          "type": "string"
        },
        "session_type": {
          "type": "string"
        },
        "spectators": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "user_id": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      },
      "required": [
        "all_players",
        "created_at",
        "game_session_setting",
        "game_version",
        "joinable",
        "match",
        "namespace",
        "players",
        "server",
        "session_id",
        "session_type",
        "spectators",
        "user_id",
        "username"
      ]
    },
    "models.StatusHistory": {
      "properties": {
        "status": {
          "type": "string"
        },
        "time_stamp": {
          "format": "date-time",
          "type": "string",
          "x-nullable": false
        }
      },
      "required": [
        "status",
        "time_stamp"
      ]
    },
    "models.UpdateSessionRequest": {
      "properties": {
        "game_max_player": {
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [
        "game_max_player"
      ]
    },
    "models.UpdateSettingsRequest": {
      "type": "object"
    },
    "response.Error": {
      "properties": {
        "errorCode": {
          "format": "int32",
          "type": "integer"
        },
        "errorMessage": {
          "type": "string"
        }
      },
      "required": [
        "errorCode",
        "errorMessage"
      ]
    },
    "restapi.ErrorResponseV2": {
      "properties": {
        "attributes": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "errorCode": {
          "format": "int32",
          "type": "integer"
        },
        "errorMessage": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "attributes",
        "errorCode",
        "errorMessage",
        "message",
        "name"
      ]
    },
    "restapi.ErrorV1": {
      "properties": {
        "errorCode": {
          "format": "int32",
          "type": "integer",
          "x-nullable": false
        },
        "errorMessage": {
          "type": "string",
          "x-nullable": false
        }
      },
      "required": [
        "errorCode",
        "errorMessage"
      ]
    }
  }
}
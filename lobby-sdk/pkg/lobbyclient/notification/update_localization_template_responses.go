// Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// Code generated by go-swagger; DO NOT EDIT.

package notification

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"io/ioutil"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/AccelByte/accelbyte-go-sdk/lobby-sdk/pkg/lobbyclientmodels"
)

// UpdateLocalizationTemplateReader is a Reader for the UpdateLocalizationTemplate structure.
type UpdateLocalizationTemplateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateLocalizationTemplateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewUpdateLocalizationTemplateNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateLocalizationTemplateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateLocalizationTemplateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewUpdateLocalizationTemplateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewUpdateLocalizationTemplateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		data, err := ioutil.ReadAll(response.Body())
		if err != nil {
			return nil, err
		}

		return nil, fmt.Errorf("Requested PUT /notification/namespaces/{namespace}/templates/{templateSlug}/languages/{templateLanguage} returns an error %d: %s", response.Code(), string(data))
	}
}

// NewUpdateLocalizationTemplateNoContent creates a UpdateLocalizationTemplateNoContent with default headers values
func NewUpdateLocalizationTemplateNoContent() *UpdateLocalizationTemplateNoContent {
	return &UpdateLocalizationTemplateNoContent{}
}

/*UpdateLocalizationTemplateNoContent handles this case with default header values.

  No Content
*/
type UpdateLocalizationTemplateNoContent struct {
}

func (o *UpdateLocalizationTemplateNoContent) Error() string {
	return fmt.Sprintf("[PUT /notification/namespaces/{namespace}/templates/{templateSlug}/languages/{templateLanguage}][%d] updateLocalizationTemplateNoContent ", 204)
}

func (o *UpdateLocalizationTemplateNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateLocalizationTemplateBadRequest creates a UpdateLocalizationTemplateBadRequest with default headers values
func NewUpdateLocalizationTemplateBadRequest() *UpdateLocalizationTemplateBadRequest {
	return &UpdateLocalizationTemplateBadRequest{}
}

/*UpdateLocalizationTemplateBadRequest handles this case with default header values.

  Bad Request
*/
type UpdateLocalizationTemplateBadRequest struct {
	Payload *lobbyclientmodels.RestapiErrorResponseBody
}

func (o *UpdateLocalizationTemplateBadRequest) Error() string {
	return fmt.Sprintf("[PUT /notification/namespaces/{namespace}/templates/{templateSlug}/languages/{templateLanguage}][%d] updateLocalizationTemplateBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateLocalizationTemplateBadRequest) GetPayload() *lobbyclientmodels.RestapiErrorResponseBody {
	return o.Payload
}

func (o *UpdateLocalizationTemplateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(lobbyclientmodels.RestapiErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateLocalizationTemplateUnauthorized creates a UpdateLocalizationTemplateUnauthorized with default headers values
func NewUpdateLocalizationTemplateUnauthorized() *UpdateLocalizationTemplateUnauthorized {
	return &UpdateLocalizationTemplateUnauthorized{}
}

/*UpdateLocalizationTemplateUnauthorized handles this case with default header values.

  Unauthorized
*/
type UpdateLocalizationTemplateUnauthorized struct {
	Payload *lobbyclientmodels.RestapiErrorResponseBody
}

func (o *UpdateLocalizationTemplateUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /notification/namespaces/{namespace}/templates/{templateSlug}/languages/{templateLanguage}][%d] updateLocalizationTemplateUnauthorized  %+v", 401, o.Payload)
}

func (o *UpdateLocalizationTemplateUnauthorized) GetPayload() *lobbyclientmodels.RestapiErrorResponseBody {
	return o.Payload
}

func (o *UpdateLocalizationTemplateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(lobbyclientmodels.RestapiErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateLocalizationTemplateForbidden creates a UpdateLocalizationTemplateForbidden with default headers values
func NewUpdateLocalizationTemplateForbidden() *UpdateLocalizationTemplateForbidden {
	return &UpdateLocalizationTemplateForbidden{}
}

/*UpdateLocalizationTemplateForbidden handles this case with default header values.

  Forbidden
*/
type UpdateLocalizationTemplateForbidden struct {
	Payload *lobbyclientmodels.RestapiErrorResponseBody
}

func (o *UpdateLocalizationTemplateForbidden) Error() string {
	return fmt.Sprintf("[PUT /notification/namespaces/{namespace}/templates/{templateSlug}/languages/{templateLanguage}][%d] updateLocalizationTemplateForbidden  %+v", 403, o.Payload)
}

func (o *UpdateLocalizationTemplateForbidden) GetPayload() *lobbyclientmodels.RestapiErrorResponseBody {
	return o.Payload
}

func (o *UpdateLocalizationTemplateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(lobbyclientmodels.RestapiErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateLocalizationTemplateNotFound creates a UpdateLocalizationTemplateNotFound with default headers values
func NewUpdateLocalizationTemplateNotFound() *UpdateLocalizationTemplateNotFound {
	return &UpdateLocalizationTemplateNotFound{}
}

/*UpdateLocalizationTemplateNotFound handles this case with default header values.

  Not Found
*/
type UpdateLocalizationTemplateNotFound struct {
	Payload *lobbyclientmodels.RestapiErrorResponseBody
}

func (o *UpdateLocalizationTemplateNotFound) Error() string {
	return fmt.Sprintf("[PUT /notification/namespaces/{namespace}/templates/{templateSlug}/languages/{templateLanguage}][%d] updateLocalizationTemplateNotFound  %+v", 404, o.Payload)
}

func (o *UpdateLocalizationTemplateNotFound) GetPayload() *lobbyclientmodels.RestapiErrorResponseBody {
	return o.Payload
}

func (o *UpdateLocalizationTemplateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(lobbyclientmodels.RestapiErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

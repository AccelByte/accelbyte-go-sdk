// Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// Code generated by go-swagger; DO NOT EDIT.

package agreement

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"
	"io/ioutil"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/AccelByte/accelbyte-go-sdk/legal-sdk/pkg/legalclientmodels"
)

// BulkAcceptVersionedPolicyReader is a Reader for the BulkAcceptVersionedPolicy structure.
type BulkAcceptVersionedPolicyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *BulkAcceptVersionedPolicyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewBulkAcceptVersionedPolicyCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		data, err := ioutil.ReadAll(response.Body())
		if err != nil {
			return nil, err
		}

		return nil, fmt.Errorf("Requested POST /agreement/public/agreements/policies returns an error %d: %s", response.Code(), string(data))
	}
}

// NewBulkAcceptVersionedPolicyCreated creates a BulkAcceptVersionedPolicyCreated with default headers values
func NewBulkAcceptVersionedPolicyCreated() *BulkAcceptVersionedPolicyCreated {
	return &BulkAcceptVersionedPolicyCreated{}
}

/*BulkAcceptVersionedPolicyCreated handles this case with default header values.

  successful operation
*/
type BulkAcceptVersionedPolicyCreated struct {
	Payload *legalclientmodels.AcceptAgreementResponse
}

func (o *BulkAcceptVersionedPolicyCreated) Error() string {
	return fmt.Sprintf("[POST /agreement/public/agreements/policies][%d] bulkAcceptVersionedPolicyCreated  %+v", 201, o.ToJSONString())
}

func (o *BulkAcceptVersionedPolicyCreated) ToJSONString() string {
	if o.Payload == nil {
		return "{}"
	}

	b, err := json.Marshal(o.Payload)
	if err != nil {
		fmt.Println(err)

		return fmt.Sprintf("Failed to marshal the payload: %+v", o.Payload)
	}

	return fmt.Sprintf("%+v", string(b))
}

func (o *BulkAcceptVersionedPolicyCreated) GetPayload() *legalclientmodels.AcceptAgreementResponse {
	return o.Payload
}

func (o *BulkAcceptVersionedPolicyCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(legalclientmodels.AcceptAgreementResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

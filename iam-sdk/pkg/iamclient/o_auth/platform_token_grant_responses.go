// Code generated by go-swagger; DO NOT EDIT.

package o_auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"io/ioutil"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/AccelByte/accelbyte-go-sdk/iam-sdk/pkg/iamclientmodels"
)

// PlatformTokenGrantReader is a Reader for the PlatformTokenGrant structure.
type PlatformTokenGrantReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PlatformTokenGrantReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPlatformTokenGrantOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPlatformTokenGrantBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewPlatformTokenGrantUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		data, err := ioutil.ReadAll(response.Body())
		if err != nil {
			return nil, err
		}

		return nil, fmt.Errorf("Requested POST /iam/oauth/platforms/{platformId}/token returns an error %d: %s", response.Code(), string(data))
	}
}

// NewPlatformTokenGrantOK creates a PlatformTokenGrantOK with default headers values
func NewPlatformTokenGrantOK() *PlatformTokenGrantOK {
	return &PlatformTokenGrantOK{}
}

/*PlatformTokenGrantOK handles this case with default header values.

  Token returned
*/
type PlatformTokenGrantOK struct {
	Payload *iamclientmodels.OauthmodelTokenResponse
}

func (o *PlatformTokenGrantOK) Error() string {
	return fmt.Sprintf("[POST /iam/oauth/platforms/{platformId}/token][%d] platformTokenGrantOK  %+v", 200, o.Payload)
}

func (o *PlatformTokenGrantOK) GetPayload() *iamclientmodels.OauthmodelTokenResponse {
	return o.Payload
}

func (o *PlatformTokenGrantOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(iamclientmodels.OauthmodelTokenResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPlatformTokenGrantBadRequest creates a PlatformTokenGrantBadRequest with default headers values
func NewPlatformTokenGrantBadRequest() *PlatformTokenGrantBadRequest {
	return &PlatformTokenGrantBadRequest{}
}

/*PlatformTokenGrantBadRequest handles this case with default header values.

  General request error
*/
type PlatformTokenGrantBadRequest struct {
	Payload *iamclientmodels.OauthmodelErrorResponse
}

func (o *PlatformTokenGrantBadRequest) Error() string {
	return fmt.Sprintf("[POST /iam/oauth/platforms/{platformId}/token][%d] platformTokenGrantBadRequest  %+v", 400, o.Payload)
}

func (o *PlatformTokenGrantBadRequest) GetPayload() *iamclientmodels.OauthmodelErrorResponse {
	return o.Payload
}

func (o *PlatformTokenGrantBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(iamclientmodels.OauthmodelErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPlatformTokenGrantUnauthorized creates a PlatformTokenGrantUnauthorized with default headers values
func NewPlatformTokenGrantUnauthorized() *PlatformTokenGrantUnauthorized {
	return &PlatformTokenGrantUnauthorized{}
}

/*PlatformTokenGrantUnauthorized handles this case with default header values.

  Client authentication failed
*/
type PlatformTokenGrantUnauthorized struct {
	Payload *iamclientmodels.OauthmodelErrorResponse
}

func (o *PlatformTokenGrantUnauthorized) Error() string {
	return fmt.Sprintf("[POST /iam/oauth/platforms/{platformId}/token][%d] platformTokenGrantUnauthorized  %+v", 401, o.Payload)
}

func (o *PlatformTokenGrantUnauthorized) GetPayload() *iamclientmodels.OauthmodelErrorResponse {
	return o.Payload
}

func (o *PlatformTokenGrantUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(iamclientmodels.OauthmodelErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

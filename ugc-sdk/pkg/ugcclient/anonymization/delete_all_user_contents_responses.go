// Code generated by go-swagger; DO NOT EDIT.

package anonymization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"io/ioutil"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/AccelByte/accelbyte-go-sdk/ugc-sdk/pkg/ugcclientmodels"
)

// DeleteAllUserContentsReader is a Reader for the DeleteAllUserContents structure.
type DeleteAllUserContentsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteAllUserContentsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteAllUserContentsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteAllUserContentsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewDeleteAllUserContentsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewDeleteAllUserContentsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		data, err := ioutil.ReadAll(response.Body())
		if err != nil {
			return nil, err
		}

		return nil, fmt.Errorf("Requested DELETE /ugc/v1/public/namespaces/{namespace}/users/{userId}/contents returns an error %d: %s", response.Code(), string(data))
	}
}

// NewDeleteAllUserContentsOK creates a DeleteAllUserContentsOK with default headers values
func NewDeleteAllUserContentsOK() *DeleteAllUserContentsOK {
	return &DeleteAllUserContentsOK{}
}

/*DeleteAllUserContentsOK handles this case with default header values.

  OK
*/
type DeleteAllUserContentsOK struct {
}

func (o *DeleteAllUserContentsOK) Error() string {
	return fmt.Sprintf("[DELETE /ugc/v1/public/namespaces/{namespace}/users/{userId}/contents][%d] deleteAllUserContentsOK ", 200)
}

func (o *DeleteAllUserContentsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteAllUserContentsUnauthorized creates a DeleteAllUserContentsUnauthorized with default headers values
func NewDeleteAllUserContentsUnauthorized() *DeleteAllUserContentsUnauthorized {
	return &DeleteAllUserContentsUnauthorized{}
}

/*DeleteAllUserContentsUnauthorized handles this case with default header values.

  Unauthorized
*/
type DeleteAllUserContentsUnauthorized struct {
	Payload *ugcclientmodels.ResponseError
}

func (o *DeleteAllUserContentsUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /ugc/v1/public/namespaces/{namespace}/users/{userId}/contents][%d] deleteAllUserContentsUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteAllUserContentsUnauthorized) GetPayload() *ugcclientmodels.ResponseError {
	return o.Payload
}

func (o *DeleteAllUserContentsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ugcclientmodels.ResponseError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAllUserContentsNotFound creates a DeleteAllUserContentsNotFound with default headers values
func NewDeleteAllUserContentsNotFound() *DeleteAllUserContentsNotFound {
	return &DeleteAllUserContentsNotFound{}
}

/*DeleteAllUserContentsNotFound handles this case with default header values.

  Not Found
*/
type DeleteAllUserContentsNotFound struct {
	Payload *ugcclientmodels.ResponseError
}

func (o *DeleteAllUserContentsNotFound) Error() string {
	return fmt.Sprintf("[DELETE /ugc/v1/public/namespaces/{namespace}/users/{userId}/contents][%d] deleteAllUserContentsNotFound  %+v", 404, o.Payload)
}

func (o *DeleteAllUserContentsNotFound) GetPayload() *ugcclientmodels.ResponseError {
	return o.Payload
}

func (o *DeleteAllUserContentsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ugcclientmodels.ResponseError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAllUserContentsInternalServerError creates a DeleteAllUserContentsInternalServerError with default headers values
func NewDeleteAllUserContentsInternalServerError() *DeleteAllUserContentsInternalServerError {
	return &DeleteAllUserContentsInternalServerError{}
}

/*DeleteAllUserContentsInternalServerError handles this case with default header values.

  Internal Server Error
*/
type DeleteAllUserContentsInternalServerError struct {
	Payload *ugcclientmodels.ResponseError
}

func (o *DeleteAllUserContentsInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /ugc/v1/public/namespaces/{namespace}/users/{userId}/contents][%d] deleteAllUserContentsInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteAllUserContentsInternalServerError) GetPayload() *ugcclientmodels.ResponseError {
	return o.Payload
}

func (o *DeleteAllUserContentsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ugcclientmodels.ResponseError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

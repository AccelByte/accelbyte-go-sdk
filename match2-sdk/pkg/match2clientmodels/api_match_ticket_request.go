// Code generated by go-swagger; DO NOT EDIT.

package match2clientmodels

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// APIMatchTicketRequest api match ticket request
//
// swagger:model api.MatchTicketRequest
type APIMatchTicketRequest struct {

	// attributes
	// Required: true
	Attributes interface{} `json:"attributes"`

	// latencies
	// Required: true
	Latencies map[string]int64 `json:"latencies"`

	// match pool
	// Required: true
	MatchPool *string `json:"matchPool"`

	// session ID
	// Required: true
	SessionID *string `json:"sessionID"`
}

// Validate validates this api match ticket request
func (m *APIMatchTicketRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAttributes(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLatencies(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMatchPool(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSessionID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *APIMatchTicketRequest) validateAttributes(formats strfmt.Registry) error {

	if err := validate.Required("attributes", "body", m.Attributes); err != nil {
		return err
	}

	return nil
}

func (m *APIMatchTicketRequest) validateLatencies(formats strfmt.Registry) error {

	return nil
}

func (m *APIMatchTicketRequest) validateMatchPool(formats strfmt.Registry) error {

	if err := validate.Required("matchPool", "body", m.MatchPool); err != nil {
		return err
	}

	return nil
}

func (m *APIMatchTicketRequest) validateSessionID(formats strfmt.Registry) error {

	if err := validate.Required("sessionID", "body", m.SessionID); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *APIMatchTicketRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *APIMatchTicketRequest) UnmarshalBinary(b []byte) error {
	var res APIMatchTicketRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

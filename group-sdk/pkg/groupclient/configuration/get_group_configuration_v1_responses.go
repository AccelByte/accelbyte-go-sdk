// Code generated by go-swagger; DO NOT EDIT.

package configuration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"io/ioutil"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/AccelByte/accelbyte-go-sdk/group-sdk/pkg/groupclientmodels"
)

// GetGroupConfigurationV1Reader is a Reader for the GetGroupConfigurationV1 structure.
type GetGroupConfigurationV1Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetGroupConfigurationV1Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewGetGroupConfigurationV1NoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetGroupConfigurationV1BadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetGroupConfigurationV1Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGetGroupConfigurationV1Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetGroupConfigurationV1NotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewGetGroupConfigurationV1InternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		data, err := ioutil.ReadAll(response.Body())
		if err != nil {
			return nil, err
		}

		return nil, fmt.Errorf("Requested DELETE /group/v1/admin/namespaces/{namespace}/configuration/{configurationCode} returns an error %d: %s", response.Code(), string(data))
	}
}

// NewGetGroupConfigurationV1NoContent creates a GetGroupConfigurationV1NoContent with default headers values
func NewGetGroupConfigurationV1NoContent() *GetGroupConfigurationV1NoContent {
	return &GetGroupConfigurationV1NoContent{}
}

/*GetGroupConfigurationV1NoContent handles this case with default header values.

  No Content
*/
type GetGroupConfigurationV1NoContent struct {
}

func (o *GetGroupConfigurationV1NoContent) Error() string {
	return fmt.Sprintf("[DELETE /group/v1/admin/namespaces/{namespace}/configuration/{configurationCode}][%d] getGroupConfigurationV1NoContent ", 204)
}

func (o *GetGroupConfigurationV1NoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetGroupConfigurationV1BadRequest creates a GetGroupConfigurationV1BadRequest with default headers values
func NewGetGroupConfigurationV1BadRequest() *GetGroupConfigurationV1BadRequest {
	return &GetGroupConfigurationV1BadRequest{}
}

/*GetGroupConfigurationV1BadRequest handles this case with default header values.

  <table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>
*/
type GetGroupConfigurationV1BadRequest struct {
	Payload *groupclientmodels.ResponseErrorResponse
}

func (o *GetGroupConfigurationV1BadRequest) Error() string {
	return fmt.Sprintf("[DELETE /group/v1/admin/namespaces/{namespace}/configuration/{configurationCode}][%d] getGroupConfigurationV1BadRequest  %+v", 400, o.Payload)
}

func (o *GetGroupConfigurationV1BadRequest) GetPayload() *groupclientmodels.ResponseErrorResponse {
	return o.Payload
}

func (o *GetGroupConfigurationV1BadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(groupclientmodels.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGroupConfigurationV1Unauthorized creates a GetGroupConfigurationV1Unauthorized with default headers values
func NewGetGroupConfigurationV1Unauthorized() *GetGroupConfigurationV1Unauthorized {
	return &GetGroupConfigurationV1Unauthorized{}
}

/*GetGroupConfigurationV1Unauthorized handles this case with default header values.

  <table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>20001</td><td>unauthorized access</td></tr></table>
*/
type GetGroupConfigurationV1Unauthorized struct {
	Payload *groupclientmodels.ResponseErrorResponse
}

func (o *GetGroupConfigurationV1Unauthorized) Error() string {
	return fmt.Sprintf("[DELETE /group/v1/admin/namespaces/{namespace}/configuration/{configurationCode}][%d] getGroupConfigurationV1Unauthorized  %+v", 401, o.Payload)
}

func (o *GetGroupConfigurationV1Unauthorized) GetPayload() *groupclientmodels.ResponseErrorResponse {
	return o.Payload
}

func (o *GetGroupConfigurationV1Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(groupclientmodels.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGroupConfigurationV1Forbidden creates a GetGroupConfigurationV1Forbidden with default headers values
func NewGetGroupConfigurationV1Forbidden() *GetGroupConfigurationV1Forbidden {
	return &GetGroupConfigurationV1Forbidden{}
}

/*GetGroupConfigurationV1Forbidden handles this case with default header values.

  <table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>20013</td><td>insufficient permissions</td></tr><tr><td>20022</td><td>token is not user token</td></tr></table>
*/
type GetGroupConfigurationV1Forbidden struct {
	Payload *groupclientmodels.ResponseErrorResponse
}

func (o *GetGroupConfigurationV1Forbidden) Error() string {
	return fmt.Sprintf("[DELETE /group/v1/admin/namespaces/{namespace}/configuration/{configurationCode}][%d] getGroupConfigurationV1Forbidden  %+v", 403, o.Payload)
}

func (o *GetGroupConfigurationV1Forbidden) GetPayload() *groupclientmodels.ResponseErrorResponse {
	return o.Payload
}

func (o *GetGroupConfigurationV1Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(groupclientmodels.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGroupConfigurationV1NotFound creates a GetGroupConfigurationV1NotFound with default headers values
func NewGetGroupConfigurationV1NotFound() *GetGroupConfigurationV1NotFound {
	return &GetGroupConfigurationV1NotFound{}
}

/*GetGroupConfigurationV1NotFound handles this case with default header values.

  <table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>73131</td><td>global configuration not found</td></tr></table>
*/
type GetGroupConfigurationV1NotFound struct {
	Payload *groupclientmodels.ResponseErrorResponse
}

func (o *GetGroupConfigurationV1NotFound) Error() string {
	return fmt.Sprintf("[DELETE /group/v1/admin/namespaces/{namespace}/configuration/{configurationCode}][%d] getGroupConfigurationV1NotFound  %+v", 404, o.Payload)
}

func (o *GetGroupConfigurationV1NotFound) GetPayload() *groupclientmodels.ResponseErrorResponse {
	return o.Payload
}

func (o *GetGroupConfigurationV1NotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(groupclientmodels.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGroupConfigurationV1InternalServerError creates a GetGroupConfigurationV1InternalServerError with default headers values
func NewGetGroupConfigurationV1InternalServerError() *GetGroupConfigurationV1InternalServerError {
	return &GetGroupConfigurationV1InternalServerError{}
}

/*GetGroupConfigurationV1InternalServerError handles this case with default header values.

  Internal Server Error
*/
type GetGroupConfigurationV1InternalServerError struct {
	Payload *groupclientmodels.ResponseErrorResponse
}

func (o *GetGroupConfigurationV1InternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /group/v1/admin/namespaces/{namespace}/configuration/{configurationCode}][%d] getGroupConfigurationV1InternalServerError  %+v", 500, o.Payload)
}

func (o *GetGroupConfigurationV1InternalServerError) GetPayload() *groupclientmodels.ResponseErrorResponse {
	return o.Payload
}

func (o *GetGroupConfigurationV1InternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(groupclientmodels.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

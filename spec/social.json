{
  "host": "demo.accelbyte.io",
  "info": {
    "contact": {
      "email": "engineering@accelbyte.io",
      "name": "Engineering Team at AccelByte",
      "url": "https://accelbyte.io"
    },
    "description": "Justice Social Service",
    "title": "justice-social-service",
    "version": "2.9.2"
  },
  "schemes": [
    "https"
  ],
  "tags": [
    {
      "name": "GameProfile"
    },
    {
      "name": "GlobalStatistic"
    },
    {
      "name": "Slot (Deprecated)"
    },
    {
      "name": "SlotConfig (Deprecated)"
    },
    {
      "name": "StatConfiguration"
    },
    {
      "name": "StatCycleConfiguration"
    },
    {
      "name": "UserStatistic"
    },
    {
      "name": "UserStatisticCycle"
    }
  ],
  "externalDocs": {
    "description": "API Docs",
    "url": "https://stage.accelbyte.io/social"
  },
  "securityDefinitions": {
    "HasPermission": {
      "authorizationUrl": "https://dummy.oauth.net/auth",
      "flow": "accessCode",
      "scopes": {
        "ADMIN:NAMESPACE:{namespace}:SLOTCONFIG [DELETE]": "ADMIN:NAMESPACE:{namespace}:SLOTCONFIG [DELETE]",
        "ADMIN:NAMESPACE:{namespace}:SLOTCONFIG [READ]": "ADMIN:NAMESPACE:{namespace}:SLOTCONFIG [READ]",
        "ADMIN:NAMESPACE:{namespace}:SLOTCONFIG [UPDATE]": "ADMIN:NAMESPACE:{namespace}:SLOTCONFIG [UPDATE]",
        "ADMIN:NAMESPACE:{namespace}:STAT [CREATE]": "ADMIN:NAMESPACE:{namespace}:STAT [CREATE]",
        "ADMIN:NAMESPACE:{namespace}:STAT [DELETE]": "ADMIN:NAMESPACE:{namespace}:STAT [DELETE]",
        "ADMIN:NAMESPACE:{namespace}:STAT [READ]": "ADMIN:NAMESPACE:{namespace}:STAT [READ]",
        "ADMIN:NAMESPACE:{namespace}:STAT [UPDATE]": "ADMIN:NAMESPACE:{namespace}:STAT [UPDATE]",
        "ADMIN:NAMESPACE:{namespace}:STATITEM [READ]": "ADMIN:NAMESPACE:{namespace}:STATITEM [READ]",
        "ADMIN:NAMESPACE:{namespace}:STATITEM [UPDATE]": "ADMIN:NAMESPACE:{namespace}:STATITEM [UPDATE]",
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:GAMEPROFILE [READ]": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:GAMEPROFILE [READ]",
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:SLOTCONFIG [DELETE]": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:SLOTCONFIG [DELETE]",
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:SLOTCONFIG [READ]": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:SLOTCONFIG [READ]",
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:SLOTCONFIG [UPDATE]": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:SLOTCONFIG [UPDATE]",
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:SLOTDATA [READ]": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:SLOTDATA [READ]",
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM [CREATE]": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM [CREATE]",
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM [DELETE]": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM [DELETE]",
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM [READ]": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM [READ]",
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM [UPDATE]": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM [UPDATE]",
        "NAMESPACE:{namespace}:GAMEPROFILE [READ]": "NAMESPACE:{namespace}:GAMEPROFILE [READ]",
        "NAMESPACE:{namespace}:STAT [CREATE]": "NAMESPACE:{namespace}:STAT [CREATE]",
        "NAMESPACE:{namespace}:STAT [READ]": "NAMESPACE:{namespace}:STAT [READ]",
        "NAMESPACE:{namespace}:STATITEM [READ]": "NAMESPACE:{namespace}:STATITEM [READ]",
        "NAMESPACE:{namespace}:STATITEM [UPDATE]": "NAMESPACE:{namespace}:STATITEM [UPDATE]",
        "NAMESPACE:{namespace}:USER:{userId}:GAMEPROFILE [CREATE]": "NAMESPACE:{namespace}:USER:{userId}:GAMEPROFILE [CREATE]",
        "NAMESPACE:{namespace}:USER:{userId}:GAMEPROFILE [DELETE]": "NAMESPACE:{namespace}:USER:{userId}:GAMEPROFILE [DELETE]",
        "NAMESPACE:{namespace}:USER:{userId}:GAMEPROFILE [READ]": "NAMESPACE:{namespace}:USER:{userId}:GAMEPROFILE [READ]",
        "NAMESPACE:{namespace}:USER:{userId}:GAMEPROFILE [UPDATE]": "NAMESPACE:{namespace}:USER:{userId}:GAMEPROFILE [UPDATE]",
        "NAMESPACE:{namespace}:USER:{userId}:SLOTDATA [CREATE]": "NAMESPACE:{namespace}:USER:{userId}:SLOTDATA [CREATE]",
        "NAMESPACE:{namespace}:USER:{userId}:SLOTDATA [DELETE]": "NAMESPACE:{namespace}:USER:{userId}:SLOTDATA [DELETE]",
        "NAMESPACE:{namespace}:USER:{userId}:SLOTDATA [READ]": "NAMESPACE:{namespace}:USER:{userId}:SLOTDATA [READ]",
        "NAMESPACE:{namespace}:USER:{userId}:SLOTDATA [UPDATE]": "NAMESPACE:{namespace}:USER:{userId}:SLOTDATA [UPDATE]",
        "NAMESPACE:{namespace}:USER:{userId}:STATITEM [CREATE]": "NAMESPACE:{namespace}:USER:{userId}:STATITEM [CREATE]",
        "NAMESPACE:{namespace}:USER:{userId}:STATITEM [DELETE]": "NAMESPACE:{namespace}:USER:{userId}:STATITEM [DELETE]",
        "NAMESPACE:{namespace}:USER:{userId}:STATITEM [READ]": "NAMESPACE:{namespace}:USER:{userId}:STATITEM [READ]",
        "NAMESPACE:{namespace}:USER:{userId}:STATITEM [UPDATE]": "NAMESPACE:{namespace}:USER:{userId}:STATITEM [UPDATE]"
      },
      "tokenUrl": "https://dumy.oauth.net/token",
      "type": "oauth2"
    },
    "HasScope": {
      "authorizationUrl": "https://dummy.oauth.net/auth",
      "flow": "accessCode",
      "scopes": {},
      "tokenUrl": "https://dumy.oauth.net/token",
      "type": "oauth2"
    },
    "authorization": {
      "in": "header",
      "name": "Authorization",
      "type": "apiKey"
    }
  },
  "swagger": "2.0",
  "paths": {
    "/social/admin/namespaces/{namespace}/config": {
      "delete": {
        "deprecated": true,
        "description": "\u0026lt;h2\u0026gt;The endpoint is going to be deprecated\u0026lt;/h2\u0026gt;\u0026lt;br\u0026gt;Deletes a namespace slot configuration, the configuration will be default after delete.\u0026lt;br\u0026gt;Other detail info:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;ADMIN:NAMESPACE:{namespace}:SLOTCONFIG\u0026#34;, action=8 (DELETE)\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "deleteNamespaceSlotConfig",
        "parameters": [
          {
            "description": "Namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful delete of namespace slot config"
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:SLOTCONFIG [DELETE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Deletes a namespace slot configuration",
        "tags": [
          "SlotConfig"
        ],
        "x-authorization": {
          "action": "8",
          "resource": "ADMIN:NAMESPACE:{namespace}:SLOTCONFIG"
        }
      },
      "get": {
        "deprecated": true,
        "description": "\u0026lt;h2\u0026gt;The endpoint is going to be deprecated\u0026lt;/h2\u0026gt;\u0026lt;br\u0026gt;Get slot configuration for a given namespace. In case slot configuration is not set, the default will be returned.\u0026lt;br\u0026gt;Other detail info:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;ADMIN:NAMESPACE:{namespace}:SLOTCONFIG\u0026#34;, action=2 (READ)\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Returns\u0026lt;/i\u0026gt;: namespace slot config info\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "getNamespaceSlotConfig",
        "parameters": [
          {
            "description": "Namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/NamespaceSlotConfigInfo"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:SLOTCONFIG [READ]"
            ],
            "authorization": []
          }
        ],
        "summary": "Returns a namespace slot configuration",
        "tags": [
          "SlotConfig"
        ],
        "x-authorization": {
          "action": "2",
          "resource": "ADMIN:NAMESPACE:{namespace}:SLOTCONFIG"
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "deprecated": true,
        "description": "\u0026lt;h2\u0026gt;The endpoint is going to be deprecated\u0026lt;/h2\u0026gt;\u0026lt;br\u0026gt;Update a slot namespace configuration.\u0026lt;br\u0026gt;Other detail info:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;ADMIN:NAMESPACE:{namespace}:SLOTCONFIG\u0026#34;, action=4 (UPDATE)\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Returns\u0026lt;/i\u0026gt;: updated namespace slot config\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "updateNamespaceSlotConfig",
        "parameters": [
          {
            "description": "Namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SlotConfigUpdate"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/NamespaceSlotConfigInfo"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:SLOTCONFIG [UPDATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Update a namespace slot configuration",
        "tags": [
          "SlotConfig"
        ],
        "x-authorization": {
          "action": "4",
          "resource": "ADMIN:NAMESPACE:{namespace}:SLOTCONFIG"
        }
      }
    },
    "/social/admin/namespaces/{namespace}/users/{userId}/config": {
      "delete": {
        "deprecated": true,
        "description": "\u0026lt;h2\u0026gt;The endpoint is going to be deprecated\u0026lt;/h2\u0026gt;\u0026lt;br\u0026gt;Deletes a user slot configuration in given namespace, the namespace slot configuration will be returned after delete.\u0026lt;br\u0026gt;Other detail info:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:SLOTCONFIG\u0026#34;, action=8 (DELETE)\u0026lt;/li\u0026gt;\u0026lt;/li\u0026gt;",
        "operationId": "deleteUserSlotConfig",
        "parameters": [
          {
            "description": "Namespace ID",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "User ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful delete of user/namespace slot config"
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:USER:{userId}:SLOTCONFIG [DELETE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Deletes a user slot configuration",
        "tags": [
          "SlotConfig"
        ],
        "x-authorization": {
          "action": "8",
          "resource": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:SLOTCONFIG"
        }
      },
      "get": {
        "deprecated": true,
        "description": "\u0026lt;h2\u0026gt;The endpoint is going to be deprecated\u0026lt;/h2\u0026gt;\u0026lt;br\u0026gt;Get a user slot configuration in given namespace. In case the user slot configuration is not set, the namespace configuration will be returned.\u0026lt;br\u0026gt;Other detail info:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:SLOTCONFIG\u0026#34;, action=2 (READ)\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;Returns\u0026lt;/i\u0026gt;: slot config info\u0026lt;/li\u0026gt;",
        "operationId": "getUserSlotConfig",
        "parameters": [
          {
            "description": "Namespace ID",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "User ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UserSlotConfigInfo"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:USER:{userId}:SLOTCONFIG [READ]"
            ],
            "authorization": []
          }
        ],
        "summary": "Returns a user slot configuration",
        "tags": [
          "SlotConfig"
        ],
        "x-authorization": {
          "action": "2",
          "resource": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:SLOTCONFIG"
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "deprecated": true,
        "description": "\u0026lt;h2\u0026gt;The endpoint is going to be deprecated\u0026lt;/h2\u0026gt;\u0026lt;br\u0026gt;Update a user slot configuration in given namespace.\u0026lt;br\u0026gt;Other detail info:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:SLOTCONFIG\u0026#34;, action=4 (UPDATE)\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Returns\u0026lt;/i\u0026gt;: updated slot config\u0026lt;/li\u0026gt;",
        "operationId": "updateUserSlotConfig",
        "parameters": [
          {
            "description": "Namespace ID",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "User ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SlotConfigUpdate"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UserSlotConfigInfo"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:USER:{userId}:SLOTCONFIG [UPDATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Update a user slot configuration",
        "tags": [
          "SlotConfig"
        ],
        "x-authorization": {
          "action": "4",
          "resource": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:SLOTCONFIG"
        }
      }
    },
    "/social/admin/namespaces/{namespace}/users/{userId}/profiles": {
      "get": {
        "description": "Returns all profiles\u0026#39; header for a user.\u0026lt;br\u0026gt;Other detail info:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:GAMEPROFILE\u0026#34;, action=2 (READ)\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Returns\u0026lt;/i\u0026gt;: list of profiles\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "getUserProfiles",
        "parameters": [
          {
            "description": "Namespace ID",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "User ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/GameProfileHeader"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:USER:{userId}:GAMEPROFILE [READ]"
            ],
            "authorization": []
          }
        ],
        "summary": "Returns all profiles' header for a user",
        "tags": [
          "GameProfile"
        ],
        "x-authorization": {
          "action": "2",
          "resource": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:GAMEPROFILE"
        }
      }
    },
    "/social/admin/namespaces/{namespace}/users/{userId}/profiles/{profileId}": {
      "get": {
        "description": "Returns profile for a user.\u0026lt;br\u0026gt;Other detail info:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:GAMEPROFILE\u0026#34;, action=2 (READ)\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Returns\u0026lt;/i\u0026gt;: game profile info\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "getProfile",
        "parameters": [
          {
            "description": "Namespace ID",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "Game profile ID",
            "in": "path",
            "name": "profileId",
            "required": true,
            "type": "string"
          },
          {
            "description": "User ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GameProfileInfo"
            }
          },
          "404": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12041\u003c/td\u003e\u003ctd\u003eGame profile with id [{profileId}] is not found\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:USER:{userId}:GAMEPROFILE [READ]"
            ],
            "authorization": []
          }
        ],
        "summary": "Returns profile for a user",
        "tags": [
          "GameProfile"
        ],
        "x-authorization": {
          "action": "2",
          "resource": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:GAMEPROFILE"
        }
      }
    },
    "/social/admin/namespaces/{namespace}/users/{userId}/slots": {
      "get": {
        "deprecated": true,
        "description": "\u0026lt;h2\u0026gt;The endpoint is going to be deprecated\u0026lt;/h2\u0026gt;\u0026lt;br\u0026gt;Get slots for a given user.\u0026lt;br\u0026gt;Other detail info:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:SLOTDATA\u0026#34;, action=2 (READ)\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Returns\u0026lt;/i\u0026gt;: list of slots\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "getUserNamespaceSlots",
        "parameters": [
          {
            "description": "Namespace ID",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "User ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/SlotInfo"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:USER:{userId}:SLOTDATA [READ]"
            ],
            "authorization": []
          }
        ],
        "summary": "Returns list of slots for given user",
        "tags": [
          "Slot"
        ],
        "x-authorization": {
          "action": "2",
          "resource": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:SLOTDATA"
        }
      }
    },
    "/social/admin/namespaces/{namespace}/users/{userId}/slots/{slotId}": {
      "get": {
        "deprecated": true,
        "description": "\u0026lt;h2\u0026gt;The endpoint is going to be deprecated\u0026lt;/h2\u0026gt;\u0026lt;br\u0026gt;Get slot data.\u0026lt;br\u0026gt;Other detail info:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:SLOTDATA\u0026#34;, action=2 (READ)\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Returns\u0026lt;/i\u0026gt;: slot data\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "getSlotData",
        "parameters": [
          {
            "description": "Namespace ID",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "Slot ID",
            "in": "path",
            "name": "slotId",
            "required": true,
            "type": "string"
          },
          {
            "description": "User ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/octet-stream"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "format": "binary",
              "type": "string"
            }
          },
          "404": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12141\u003c/td\u003e\u003ctd\u003eSlot [{slotId}] not found in namespace [{namespace}]\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:USER:{userId}:SLOTDATA [READ]"
            ],
            "authorization": []
          }
        ],
        "summary": "Returns slot data",
        "tags": [
          "Slot"
        ],
        "x-authorization": {
          "action": "2",
          "resource": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:SLOTDATA"
        }
      }
    },
    "/social/public/namespaces/{namespace}/profiles": {
      "get": {
        "description": "Returns all profiles for specified users.\u0026lt;br\u0026gt;Other detail info:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;NAMESPACE:{namespace}:GAMEPROFILE\u0026#34;, action=2 (READ)\n\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Returns\u0026lt;/i\u0026gt;: list of profiles\u0026lt;/ul\u0026gt;",
        "operationId": "publicGetUserGameProfiles",
        "parameters": [
          {
            "description": "Namespace ID",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "User IDs",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "userIds",
            "required": true,
            "type": "array"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/UserGameProfiles"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12021\u003c/td\u003e\u003ctd\u003e{totalUser} users is requested. Cannot retrieve more than {limitUser} users at once\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:GAMEPROFILE [READ]"
            ],
            "authorization": []
          }
        ],
        "summary": "Returns all profiles for specified users",
        "tags": [
          "GameProfile"
        ],
        "x-authorization": {
          "action": "2",
          "resource": "NAMESPACE:{namespace}:GAMEPROFILE"
        }
      }
    },
    "/social/public/namespaces/{namespace}/users/{userId}/profiles": {
      "get": {
        "description": "Returns all profiles\u0026#39; header for a user.\u0026lt;br\u0026gt;Other detail info:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;NAMESPACE:{namespace}:USER:{userId}:GAMEPROFILE\u0026#34;, action=2 (READ)\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Returns\u0026lt;/i\u0026gt;: list of profiles\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "publicGetUserProfiles",
        "parameters": [
          {
            "description": "Namespace ID",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "User ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/GameProfileHeader"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:USER:{userId}:GAMEPROFILE [READ]"
            ],
            "authorization": []
          }
        ],
        "summary": "Returns all profiles' header for a user",
        "tags": [
          "GameProfile"
        ],
        "x-authorization": {
          "action": "2",
          "resource": "NAMESPACE:{namespace}:USER:{userId}:GAMEPROFILE"
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create new profile for user.\u0026lt;br\u0026gt;Other detail info:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/li\u0026gt;: resource=\u0026#34;NAMESPACE:{namespace}:USER:{userId}:GAMEPROFILE\u0026#34;, action=1 (CREATE)\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Returns\u0026lt;/li\u0026gt;: created game profile\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "publicCreateProfile",
        "parameters": [
          {
            "description": "Namespace ID",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "User ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/GameProfileRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Profile has been created"
          },
          "422": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e20002\u003c/td\u003e\u003ctd\u003evalidation error\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:USER:{userId}:GAMEPROFILE [CREATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Create a new profile for user",
        "tags": [
          "GameProfile"
        ],
        "x-authorization": {
          "action": "1",
          "resource": "NAMESPACE:{namespace}:USER:{userId}:GAMEPROFILE"
        }
      }
    },
    "/social/public/namespaces/{namespace}/users/{userId}/profiles/{profileId}": {
      "delete": {
        "description": "Deletes game profile.\u0026lt;br\u0026gt;Other detail info:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;NAMESPACE:{namespace}:USER:{userId}:GAMEPROFILE\u0026#34;, action=8 (DELETE)\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "publicDeleteProfile",
        "parameters": [
          {
            "description": "Namespace ID",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "Game profile ID",
            "in": "path",
            "name": "profileId",
            "required": true,
            "type": "string"
          },
          {
            "description": "User ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Game profile has been deleted"
          },
          "404": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12041\u003c/td\u003e\u003ctd\u003eGame profile with id [{profileId}] is not found\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:USER:{userId}:GAMEPROFILE [DELETE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Deletes game profile",
        "tags": [
          "GameProfile"
        ],
        "x-authorization": {
          "action": "8",
          "resource": "NAMESPACE:{namespace}:USER:{userId}:GAMEPROFILE"
        }
      },
      "get": {
        "description": "Returns profile for a user.\u0026lt;br\u0026gt;Other detail info:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;NAMESPACE:{namespace}:USER:{userId}:GAMEPROFILE\u0026#34;, action=2 (READ)\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Returns\u0026lt;/i\u0026gt;: game profile info\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "publicGetProfile",
        "parameters": [
          {
            "description": "Namespace ID",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "Game profile ID",
            "in": "path",
            "name": "profileId",
            "required": true,
            "type": "string"
          },
          {
            "description": "User ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GameProfileInfo"
            }
          },
          "404": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12041\u003c/td\u003e\u003ctd\u003eGame profile with id [{profileId}] is not found\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:USER:{userId}:GAMEPROFILE [READ]"
            ],
            "authorization": []
          }
        ],
        "summary": "Returns profile for a user",
        "tags": [
          "GameProfile"
        ],
        "x-authorization": {
          "action": "2",
          "resource": "NAMESPACE:{namespace}:USER:{userId}:GAMEPROFILE"
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Updates user game profile, returns updated profile.\u0026lt;br\u0026gt;Other detail info:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;NAMESPACE:{namespace}:USER:{userId}:GAMEPROFILE\u0026#34;, action=4 (UPDATE)\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Returns\u0026lt;/i\u0026gt;: updated game profile\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "publicUpdateProfile",
        "parameters": [
          {
            "description": "Namespace ID",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "Game profile ID",
            "in": "path",
            "name": "profileId",
            "required": true,
            "type": "string"
          },
          {
            "description": "User ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/GameProfileRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GameProfileInfo"
            }
          },
          "404": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12041\u003c/td\u003e\u003ctd\u003eGame profile with id [{profileId}] is not found\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e20002\u003c/td\u003e\u003ctd\u003evalidation error\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:USER:{userId}:GAMEPROFILE [UPDATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Updates user game profile",
        "tags": [
          "GameProfile"
        ],
        "x-authorization": {
          "action": "4",
          "resource": "NAMESPACE:{namespace}:USER:{userId}:GAMEPROFILE"
        }
      }
    },
    "/social/public/namespaces/{namespace}/users/{userId}/profiles/{profileId}/attributes/{attributeName}": {
      "get": {
        "description": "Returns game profile attribute.\u0026lt;br\u0026gt;Other detail info:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;NAMESPACE:{namespace}:USER:{userId}:GAMEPROFILE\u0026#34;, action=2 (READ)\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Returns\u0026lt;/i\u0026gt;: attribute info\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "publicGetProfileAttribute",
        "parameters": [
          {
            "description": "Attribute Name",
            "in": "path",
            "name": "attributeName",
            "required": true,
            "type": "string"
          },
          {
            "description": "Namespace ID",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "Game profile ID",
            "in": "path",
            "name": "profileId",
            "required": true,
            "type": "string"
          },
          {
            "description": "User ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Attribute"
            }
          },
          "404": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12041\u003c/td\u003e\u003ctd\u003eGame profile with id [{profileId}] is not found\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:USER:{userId}:GAMEPROFILE [READ]"
            ],
            "authorization": []
          }
        ],
        "summary": "Returns game profile attribute",
        "tags": [
          "GameProfile"
        ],
        "x-authorization": {
          "action": "2",
          "resource": "NAMESPACE:{namespace}:USER:{userId}:GAMEPROFILE"
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Updates game profile attribute, returns updated profile.\u0026lt;br\u0026gt;Other detail info:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;NAMESPACE:{namespace}:USER:{userId}:GAMEPROFILE\u0026#34;, action=4 (UPDATE)\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Returns\u0026lt;/i\u0026gt;: updated attribute\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "publicUpdateAttribute",
        "parameters": [
          {
            "description": "Attribute Name",
            "in": "path",
            "name": "attributeName",
            "required": true,
            "type": "string"
          },
          {
            "description": "Namespace ID",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "Game profile ID",
            "in": "path",
            "name": "profileId",
            "required": true,
            "type": "string"
          },
          {
            "description": "User ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Attribute"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GameProfileInfo"
            }
          },
          "400": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12022\u003c/td\u003e\u003ctd\u003eGame profile attribute name [{attrName1}] passed in request url mismatch the name [{attrName2}] in body\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "404": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12041\u003c/td\u003e\u003ctd\u003eGame profile with id [{profileId}] is not found\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:USER:{userId}:GAMEPROFILE [UPDATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Updates game profile attribute",
        "tags": [
          "GameProfile"
        ],
        "x-authorization": {
          "action": "8",
          "resource": "NAMESPACE:{namespace}:USER:{userId}:GAMEPROFILE"
        }
      }
    },
    "/social/public/namespaces/{namespace}/users/{userId}/slots": {
      "get": {
        "deprecated": true,
        "description": "\u0026lt;h2\u0026gt;The endpoint is going to be deprecated\u0026lt;/h2\u0026gt;\u0026lt;br\u0026gt;Get list of slots for a given user in namespace.\u0026lt;br\u0026gt;Other detail info:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;NAMESPACE:{namespace}:USER:{userId}:SLOTDATA\u0026#34;, action=2 (READ)\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Returns\u0026lt;/i\u0026gt;: list of slots\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "publicGetUserNamespaceSlots",
        "parameters": [
          {
            "description": "Namespace ID",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "User ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/SlotInfo"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:USER:{userId}:SLOTDATA [READ]"
            ],
            "authorization": []
          }
        ],
        "summary": "Returns slots for given user",
        "tags": [
          "Slot"
        ],
        "x-authorization": {
          "action": "2",
          "resource": "NAMESPACE:{namespace}:USER:{userId}:SLOTDATA"
        }
      },
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "deprecated": true,
        "description": "\u0026lt;h2\u0026gt;The endpoint is going to be deprecated\u0026lt;/h2\u0026gt;\u0026lt;br\u0026gt;Creates a slot.\u0026lt;br\u0026gt;Other detail info:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;NAMESPACE:{namespace}:USER:{userId}:SLOTDATA\u0026#34;, action=1 (CREATE)\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Returns\u0026lt;/i\u0026gt;: created slot info\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "publicCreateUserNamespaceSlot",
        "parameters": [
          {
            "description": "Namespace ID",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "User ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "description": "File checksum, base64 encoded md5",
            "in": "formData",
            "name": "checksum",
            "required": false,
            "type": "string"
          },
          {
            "description": "Custom attribute",
            "in": "formData",
            "name": "customAttribute",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "name": "file",
            "required": false,
            "type": "file"
          },
          {
            "description": "Label",
            "in": "query",
            "name": "label",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "Tags",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "tags",
            "required": false,
            "type": "array"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Successful create of a slot"
          },
          "400": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12121\u003c/td\u003e\u003ctd\u003eChecksum mismatch for [{filename}]\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12122\u003c/td\u003e\u003ctd\u003e[{filename}] exceeds the upload limit size of [{sizeLimit}] bytes\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "409": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12171\u003c/td\u003e\u003ctd\u003eUser [{userId}] exceed max slot count [{maxCount}] in namespace [{namespace}]\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:USER:{userId}:SLOTDATA [CREATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Creates a slot",
        "tags": [
          "Slot"
        ],
        "x-authorization": {
          "action": "1",
          "resource": "NAMESPACE:{namespace}:USER:{userId}:SLOTDATA"
        }
      }
    },
    "/social/public/namespaces/{namespace}/users/{userId}/slots/{slotId}": {
      "delete": {
        "deprecated": true,
        "description": "\u0026lt;h2\u0026gt;The endpoint is going to be deprecated\u0026lt;/h2\u0026gt;\u0026lt;br\u0026gt;Deletes the slot.\u0026lt;br\u0026gt;Other detail info:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;NAMESPACE:{namespace}:USER:{userId}:SLOTDATA\u0026#34;, action=8 (DELETE)\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "publicDeleteUserNamespaceSlot",
        "parameters": [
          {
            "description": "Namespace ID",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "Slot ID",
            "in": "path",
            "name": "slotId",
            "required": true,
            "type": "string"
          },
          {
            "description": "User ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful delete of a slot"
          },
          "404": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12141\u003c/td\u003e\u003ctd\u003eSlot [{slotId}] not found in namespace [{namespace}]\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:USER:{userId}:SLOTDATA [DELETE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Deletes the slot",
        "tags": [
          "Slot"
        ],
        "x-authorization": {
          "action": "8",
          "resource": "NAMESPACE:{namespace}:USER:{userId}:SLOTDATA"
        }
      },
      "get": {
        "deprecated": true,
        "description": "\u0026lt;h2\u0026gt;The endpoint is going to be deprecated\u0026lt;/h2\u0026gt;\u0026lt;br\u0026gt;Get slot data.\u0026lt;br\u0026gt;Other detail info:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;NAMESPACE:{namespace}:USER:{userId}:SLOTDATA\u0026#34;, action=2 (READ)\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Returns\u0026lt;/i\u0026gt;: slot data\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "publicGetSlotData",
        "parameters": [
          {
            "description": "Namespace ID",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "Slot ID",
            "in": "path",
            "name": "slotId",
            "required": true,
            "type": "string"
          },
          {
            "description": "User ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/octet-stream"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "format": "binary",
              "type": "string"
            }
          },
          "404": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12141\u003c/td\u003e\u003ctd\u003eSlot [{slotId}] not found in namespace [{namespace}]\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:USER:{userId}:SLOTDATA [READ]"
            ],
            "authorization": []
          }
        ],
        "summary": "Returns slot data",
        "tags": [
          "Slot"
        ],
        "x-authorization": {
          "action": "2",
          "resource": "NAMESPACE:{namespace}:USER:{userId}:SLOTDATA"
        }
      },
      "put": {
        "consumes": [
          "multipart/form-data"
        ],
        "deprecated": true,
        "description": "\u0026lt;h2\u0026gt;The endpoint is going to be deprecated\u0026lt;/h2\u0026gt;\u0026lt;br\u0026gt;Updates a slot.\u0026lt;br\u0026gt;Other detail info:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;NAMESPACE:{namespace}:USER:{userId}:SLOTDATA\u0026#34;, action=4 (UPDATE)\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Returns\u0026lt;/i\u0026gt;: updated slot\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "publicUpdateUserNamespaceSlot",
        "parameters": [
          {
            "description": "Namespace ID",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "Slot ID",
            "in": "path",
            "name": "slotId",
            "required": true,
            "type": "string"
          },
          {
            "description": "User ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "description": "File checksum",
            "in": "formData",
            "name": "checksum",
            "required": false,
            "type": "string"
          },
          {
            "description": "Custom attribute",
            "in": "formData",
            "name": "customAttribute",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "name": "file",
            "required": false,
            "type": "file"
          },
          {
            "description": "Label",
            "in": "query",
            "name": "label",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "Tags",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "tags",
            "required": false,
            "type": "array"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SlotInfo"
            }
          },
          "400": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12121\u003c/td\u003e\u003ctd\u003eChecksum mismatch for [{filename}]\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12122\u003c/td\u003e\u003ctd\u003e[{filename}] exceeds the upload limit size of [{sizeLimit}] bytes\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "404": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12141\u003c/td\u003e\u003ctd\u003eSlot [{slotId}] not found in namespace [{namespace}]\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:USER:{userId}:SLOTDATA [UPDATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Updates a slot",
        "tags": [
          "Slot"
        ],
        "x-authorization": {
          "action": "4",
          "resource": "NAMESPACE:{namespace}:USER:{userId}:SLOTDATA"
        }
      }
    },
    "/social/public/namespaces/{namespace}/users/{userId}/slots/{slotId}/metadata": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "deprecated": true,
        "description": "\u0026lt;h2\u0026gt;The endpoint is going to be deprecated\u0026lt;/h2\u0026gt;\u0026lt;br\u0026gt;Updates the slot metadata.\u0026lt;br\u0026gt;Other detail info:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;NAMESPACE:{namespace}:USER:{userId}:SLOTDATA\u0026#34;, action=4 (UPDATE)\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Returns\u0026lt;/i\u0026gt;: updated slot\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "publicUpdateUserNamespaceSlotMetadata",
        "parameters": [
          {
            "description": "Namespace ID",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "Slot ID",
            "in": "path",
            "name": "slotId",
            "required": true,
            "type": "string"
          },
          {
            "description": "User ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SlotMetadataUpdate"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SlotInfo"
            }
          },
          "404": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12141\u003c/td\u003e\u003ctd\u003eSlot [{slotId}] not found in namespace [{namespace}]\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:USER:{userId}:SLOTDATA [UPDATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Updates the slot metadata",
        "tags": [
          "Slot"
        ],
        "x-authorization": {
          "action": "4",
          "resource": "NAMESPACE:{namespace}:USER:{userId}:SLOTDATA"
        }
      }
    },
    "/social/v1/admin/namespaces/{namespace}/globalstatitems": {
      "get": {
        "description": "List global statItems by pagination.\u0026lt;br\u0026gt;Other detail info:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;ADMIN:NAMESPACE:{namespace}:STATITEM\u0026#34;, action=2 (READ)\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Returns\u0026lt;/i\u0026gt;: stat items\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "getGlobalStatItems",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "default": 20,
            "format": "int32",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "default": 0,
            "format": "int32",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer"
          },
          {
            "description": "comma separated stat codes",
            "in": "query",
            "name": "statCodes",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GlobalStatItemPagingSlicedResult"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:STATITEM [READ]"
            ],
            "authorization": []
          }
        ],
        "summary": "List global statItems",
        "tags": [
          "GlobalStatistic"
        ],
        "x-authorization": {
          "action": "2",
          "resource": "ADMIN:NAMESPACE:{namespace}:STATITEM"
        }
      }
    },
    "/social/v1/admin/namespaces/{namespace}/globalstatitems/{statCode}": {
      "get": {
        "description": "Get global statItem by stat code.\u0026lt;br\u0026gt;Other detail info:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;ADMIN:NAMESPACE:{namespace}:STATITEM\u0026#34;, action=2 (READ)\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Returns\u0026lt;/i\u0026gt;: global stat item\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "getGlobalStatItemByStatCode",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "stat Code",
            "in": "path",
            "name": "statCode",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GlobalStatItemInfo"
            }
          },
          "404": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12244\u003c/td\u003e\u003ctd\u003eGlobal stat item of [{statCode}] cannot be found in namespace [{namespace}]\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:STATITEM [READ]"
            ],
            "authorization": []
          }
        ],
        "summary": "Get global statItem by stat code",
        "tags": [
          "GlobalStatistic"
        ],
        "x-authorization": {
          "action": "2",
          "resource": "ADMIN:NAMESPACE:{namespace}:STATITEM"
        }
      }
    },
    "/social/v1/admin/namespaces/{namespace}/statCycles": {
      "get": {
        "description": "List stat cycles by pagination.\u0026lt;br\u0026gt;Other detail info:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;ADMIN:NAMESPACE:{namespace}:STAT\u0026#34;, action=2 (READ)\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Returns\u0026lt;/i\u0026gt;: stat cycles\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "getStatCycles",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "enum": [
              "ANNUALLY",
              "DAILY",
              "MONTHLY",
              "SEASONAL",
              "WEEKLY"
            ],
            "in": "query",
            "name": "cycleType",
            "required": false,
            "type": "string"
          },
          {
            "default": 20,
            "format": "int32",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "name",
            "in": "query",
            "name": "name",
            "required": false,
            "type": "string"
          },
          {
            "default": 0,
            "format": "int32",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer"
          },
          {
            "description": "default is unsorted, allow values: [start, start:asc, start:desc, createdAt, createdAt:asc, createdAt:desc, updatedAt, updatedAt:asc, updatedAt:desc],and support sort group, eg: sortBy=start:asc,createdAt:desc.",
            "in": "query",
            "name": "sortBy",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "ACTIVE",
              "INIT",
              "STOPPED"
            ],
            "in": "query",
            "name": "status",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/StatCyclePagingSlicedResult"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:STAT [READ]"
            ],
            "authorization": []
          }
        ],
        "summary": "List stat cycles",
        "tags": [
          "StatCycleConfiguration"
        ],
        "x-authorization": {
          "action": "2",
          "resource": "ADMIN:NAMESPACE:{namespace}:STAT"
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create stat cycle.\u0026lt;br\u0026gt;Fields:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;name: Cycle name, maximum length is 128 characters. \u0026lt;b\u0026gt;(required)\u0026lt;/b\u0026gt;.\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;resetTime: Reset time must follow \u0026lt;b\u0026gt;hours:minutes\u0026lt;/b\u0026gt; in 24 hours format e.g. 01:30, 23:15. \u0026lt;b\u0026gt;(required)\u0026lt;/b\u0026gt;\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;resetDay: Reset Day follows the ISO-8601 standard, from 1 (Monday) to 7 (Sunday). Required when cycleType is WEEKLY.\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;resetDate: Reset Date must be a number 1 - 31. Required when cycleType is MONTHLY or ANNUALLY.\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;resetMonth: Reset Month must be a number 1 - 12. Required when cycleType is ANNUALLY.\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;seasonPeriod: Season period must be a number greater than or equal to 1 (days). Required when cycleType is SEASONAL.\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;start: Start time must follow RFC3339 standard. e.g. 2023-02-24T05:10:24.865Z. \u0026lt;b\u0026gt;(required)\u0026lt;/b\u0026gt;\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;end: End time must follow RFC3339 standard. e.g. 2023-02-24T05:10:24.865Z.\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;Other detail info:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;ADMIN:NAMESPACE:{namespace}:STAT\u0026#34;, action=1 (CREATE)\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Returns\u0026lt;/i\u0026gt;: created stat cycle\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "createStatCycle",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/StatCycleCreate"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/StatCycleInfo"
            }
          },
          "400": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12225\u003c/td\u003e\u003ctd\u003eInvalid time range\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12226\u003c/td\u003e\u003ctd\u003eInvalid date [{date}] of month [{month}]\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:STAT [CREATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Create stat cycle",
        "tags": [
          "StatCycleConfiguration"
        ],
        "x-authorization": {
          "action": "1",
          "resource": "ADMIN:NAMESPACE:{namespace}:STAT"
        }
      }
    },
    "/social/v1/admin/namespaces/{namespace}/statCycles/bulk": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Bulk get stat cycle.\u0026lt;br\u0026gt;Other detail info:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;ADMIN:NAMESPACE:{namespace}:STAT\u0026#34;, action=2 (READ)\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Returns\u0026lt;/i\u0026gt;: list of stat cycles\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "bulkGetStatCycle",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/BulkStatCycleRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BulkStatCycleResult"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:STAT [READ]"
            ],
            "authorization": []
          }
        ],
        "summary": "Bulk get stat cycle",
        "tags": [
          "StatCycleConfiguration"
        ],
        "x-authorization": {
          "action": "2",
          "resource": "ADMIN:NAMESPACE:{namespace}:STAT"
        }
      }
    },
    "/social/v1/admin/namespaces/{namespace}/statCycles/{cycleId}": {
      "delete": {
        "description": "Deletes stat cycle.\u0026lt;br\u0026gt;Other detail info:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;ADMIN:NAMESPACE:{namespace}:STAT\u0026#34;, action=8 (DELETE)\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "deleteStatCycle",
        "parameters": [
          {
            "description": "cycle id",
            "in": "path",
            "name": "cycleId",
            "required": true,
            "type": "string"
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "404": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12245\u003c/td\u003e\u003ctd\u003eStat cycle [{id}] cannot be found in namespace [{namespace}]\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:STAT [DELETE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Deletes stat cycle",
        "tags": [
          "StatCycleConfiguration"
        ],
        "x-authorization": {
          "action": "8",
          "resource": "ADMIN:NAMESPACE:{namespace}:STAT"
        }
      },
      "get": {
        "description": "Get stat cycle.\u0026lt;br\u0026gt;Other detail info:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;ADMIN:NAMESPACE:{namespace}:STAT\u0026#34;, action=2 (READ)\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Returns\u0026lt;/i\u0026gt;: stat cycle info\u0026lt;/ul\u0026gt;",
        "operationId": "getStatCycle",
        "parameters": [
          {
            "description": "cycle id",
            "in": "path",
            "name": "cycleId",
            "required": true,
            "type": "string"
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/StatCycleInfo"
            }
          },
          "404": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12245\u003c/td\u003e\u003ctd\u003eStat cycle [{id}] cannot be found in namespace [{namespace}]\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:STAT [READ]"
            ],
            "authorization": []
          }
        ],
        "summary": "Get stat cycle",
        "tags": [
          "StatCycleConfiguration"
        ],
        "x-authorization": {
          "action": "2",
          "resource": "ADMIN:NAMESPACE:{namespace}:STAT"
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update stat cycle.\u0026lt;br\u0026gt;Other detail info:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;ADMIN:NAMESPACE:{namespace}:STAT\u0026#34;, action=4 (UPDATE)\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Returns\u0026lt;/i\u0026gt;: updated stat cycle\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "updateStatCycle",
        "parameters": [
          {
            "description": "cycle id",
            "in": "path",
            "name": "cycleId",
            "required": true,
            "type": "string"
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/StatCycleUpdate"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/StatCycleInfo"
            }
          },
          "400": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12225\u003c/td\u003e\u003ctd\u003eInvalid time range\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12226\u003c/td\u003e\u003ctd\u003eInvalid date [{date}] of month [{month}]\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "404": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12245\u003c/td\u003e\u003ctd\u003eStat cycle [{id}] cannot be found in namespace [{namespace}]\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "409": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12277\u003c/td\u003e\u003ctd\u003eStat cycle [{id}] in namespace [{namespace}] with status [{status}] cannot be updated\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:STAT [UPDATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Update stat cycle",
        "tags": [
          "StatCycleConfiguration"
        ],
        "x-authorization": {
          "action": "4",
          "resource": "ADMIN:NAMESPACE:{namespace}:STAT"
        }
      }
    },
    "/social/v1/admin/namespaces/{namespace}/statCycles/{cycleId}/stats/add/bulk": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Bulk add stat cycle to stats.\u0026lt;br\u0026gt;Other detail info:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;ADMIN:NAMESPACE:{namespace}:STAT\u0026#34;, action=1 (CREATE)\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "bulkAddStats",
        "parameters": [
          {
            "description": "cycle id",
            "in": "path",
            "name": "cycleId",
            "required": true,
            "type": "string"
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/BulkCycleStatsAdd"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatOperationResult"
              },
              "type": "array"
            }
          },
          "404": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12245\u003c/td\u003e\u003ctd\u003eStat cycle [{id}] cannot be found in namespace [{namespace}]\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:STAT [CREATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Bulk add stat cycle to stats",
        "tags": [
          "StatCycleConfiguration"
        ],
        "x-authorization": {
          "action": "1",
          "resource": "ADMIN:NAMESPACE:{namespace}:STAT"
        }
      }
    },
    "/social/v1/admin/namespaces/{namespace}/statCycles/{cycleId}/stop": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Stop stat cycle.\u0026lt;br\u0026gt;Other detail info:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;ADMIN:NAMESPACE:{namespace}:STAT\u0026#34;, action=4 (UPDATE)\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Returns\u0026lt;/i\u0026gt;: updated stat cycle\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "stopStatCycle",
        "parameters": [
          {
            "description": "cycle id",
            "in": "path",
            "name": "cycleId",
            "required": true,
            "type": "string"
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/StatCycleInfo"
            }
          },
          "404": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12245\u003c/td\u003e\u003ctd\u003eStat cycle [{id}] cannot be found in namespace [{namespace}]\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "409": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12279\u003c/td\u003e\u003ctd\u003eInvalid stat cycle status: Stat cycle [{id}], namespace [{namespace}], status [{status}]\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:STAT [UPDATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Stop stat cycle",
        "tags": [
          "StatCycleConfiguration"
        ],
        "x-authorization": {
          "action": "4",
          "resource": "ADMIN:NAMESPACE:{namespace}:STAT"
        }
      }
    },
    "/social/v1/admin/namespaces/{namespace}/statitems/bulk": {
      "get": {
        "description": "Bulk fetch multiple user\u0026#39;s statitem value for a given namespace and statCode.  \nOther detail info:\n+ *Required permission*: resource=\u0026#34;ADMIN:NAMESPACE:{namespace}:STATITEM\u0026#34;, action=2 (READ)\n+ *Returns*: list of user\u0026#39;s statItem",
        "operationId": "bulkFetchStatItems",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "stat code",
            "in": "query",
            "name": "statCode",
            "required": true,
            "type": "string"
          },
          {
            "description": "comma separated user Ids",
            "in": "query",
            "name": "userIds",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/UserStatItemInfo"
              },
              "type": "array"
            }
          },
          "422": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e20002\u003c/td\u003e\u003ctd\u003evalidation error\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:STATITEM [READ]"
            ],
            "authorization": []
          }
        ],
        "summary": "Bulk fetch statitems value",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "2",
          "resource": "ADMIN:NAMESPACE:{namespace}:STATITEM"
        }
      }
    },
    "/social/v1/admin/namespaces/{namespace}/statitems/value/bulk": {
      "patch": {
        "consumes": [
          "application/json"
        ],
        "description": "Bulk update multiple user\u0026#39;s statitems value.\u0026lt;br\u0026gt;Other detail info:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;ADMIN:NAMESPACE:{namespace}:STATITEM\u0026#34;, action=4 (UPDATE)\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Returns\u0026lt;/i\u0026gt;: bulk updated result\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "bulkIncUserStatItemValue",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkUserStatItemInc"
              },
              "type": "array"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatOperationResult"
              },
              "type": "array"
            }
          },
          "422": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e20002\u003c/td\u003e\u003ctd\u003evalidation error\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:STATITEM [UPDATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Bulk update multiple user's statitems value",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "4",
          "resource": "ADMIN:NAMESPACE:{namespace}:STATITEM"
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Bulk update multiple user\u0026#39;s statitems value.\u0026lt;br\u0026gt;Other detail info:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;ADMIN:NAMESPACE:{namespace}:STATITEM\u0026#34;, action=4 (UPDATE)\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Returns\u0026lt;/i\u0026gt;: bulk updated result\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "bulkIncUserStatItem",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkUserStatItemInc"
              },
              "type": "array"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatOperationResult"
              },
              "type": "array"
            }
          },
          "422": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e20002\u003c/td\u003e\u003ctd\u003evalidation error\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:STATITEM [UPDATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Bulk update multiple user's statitems value",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "4",
          "resource": "ADMIN:NAMESPACE:{namespace}:STATITEM"
        }
      }
    },
    "/social/v1/admin/namespaces/{namespace}/statitems/value/bulk/getOrDefault": {
      "get": {
        "description": "Bulk fetch multiple user\u0026#39;s stat item values for a given namespace and statCode.\nNOTE: If stat item does not exist, will return default value. Other detail info:\n+ *Required permission*: resource=ADMIN:NAMESPACE:{namespace}:STATITEM, action=2 (READ)\n+ *Returns*: list of user\u0026#39;s stat item values",
        "operationId": "bulkFetchOrDefaultStatItems",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "stat code",
            "in": "query",
            "name": "statCode",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "user ids",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "userIds",
            "required": true,
            "type": "array"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/A DTO object for user stat item value"
              },
              "type": "array"
            }
          },
          "404": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12241\u003c/td\u003e\u003ctd\u003eStat [{statCode}] cannot be found in namespace [{namespace}]\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e20002\u003c/td\u003e\u003ctd\u003evalidation error\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Bulk fetch user stat item values",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "2",
          "resource": "ADMIN:NAMESPACE:{namespace}:STATITEM"
        }
      }
    },
    "/social/v1/admin/namespaces/{namespace}/statitems/value/reset/bulk": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Bulk reset multiple user\u0026#39;s statitems value.\nUser\u0026#39;s statitem value will be reset to the default value defined in the statistic configuration.\n\nOther detail info:\n+ *Required permission*: resource=\u0026#34;ADMIN:NAMESPACE:{namespace}:STATITEM\u0026#34;, action=4 (UPDATE)\n+ *Returns*: bulk updated result",
        "operationId": "bulkResetUserStatItem",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkUserStatItemReset"
              },
              "type": "array"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatOperationResult"
              },
              "type": "array"
            }
          },
          "422": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eerrorCode\u003c/td\u003e\u003ctd\u003eerrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e20002\u003c/td\u003e\u003ctd\u003evalidation error\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:STATITEM [UPDATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Bulk reset multiple user's statitems value",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "4",
          "resource": "ADMIN:NAMESPACE:{namespace}:STATITEM"
        }
      }
    },
    "/social/v1/admin/namespaces/{namespace}/stats": {
      "get": {
        "description": "List stats by pagination.\u0026lt;br\u0026gt;Other detail info:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;ADMIN:NAMESPACE:{namespace}:STAT\u0026#34;, action=2 (READ)\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Returns\u0026lt;/i\u0026gt;: stats\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "getStats",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "comma separated cycleId",
            "in": "query",
            "name": "cycleIds",
            "required": false,
            "type": "string"
          },
          {
            "description": "flag to filter global statcode",
            "in": "query",
            "name": "isGlobal",
            "required": false,
            "type": "boolean",
            "x-omitempty": false
          },
          {
            "description": "flag to filter public/private statcode",
            "in": "query",
            "name": "isPublic",
            "required": false,
            "type": "boolean",
            "x-omitempty": false
          },
          {
            "default": 20,
            "format": "int32",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "default": 0,
            "format": "int32",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/StatPagingSlicedResult"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:STAT [READ]"
            ],
            "authorization": []
          }
        ],
        "summary": "List stats",
        "tags": [
          "StatConfiguration"
        ],
        "x-authorization": {
          "action": "2",
          "resource": "ADMIN:NAMESPACE:{namespace}:STAT"
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create stat.\u0026lt;br\u0026gt;Other detail info:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;ADMIN:NAMESPACE:{namespace}:STAT\u0026#34;, action=1 (CREATE)\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Returns\u0026lt;/i\u0026gt;: created stat template\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;default minimum value is 0\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;default maximum value is 1.7976931348623157e+308\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "createStat",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/StatCreate"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Create stat successfully",
            "schema": {
              "$ref": "#/definitions/StatInfo"
            }
          },
          "404": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12245\u003c/td\u003e\u003ctd\u003eStat cycle [{id}] cannot be found in namespace [{namespace}]\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "409": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12271\u003c/td\u003e\u003ctd\u003eStat template with code [{statCode}] already exists in namespace [{namespace}]\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:STAT [CREATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Create stat",
        "tags": [
          "StatConfiguration"
        ],
        "x-authorization": {
          "action": "1",
          "resource": "ADMIN:NAMESPACE:{namespace}:STAT"
        }
      }
    },
    "/social/v1/admin/namespaces/{namespace}/stats/export": {
      "get": {
        "description": "Export all stat configurations for a given namespace into file  At current, only JSON file is supported.\u0026lt;p\u0026gt;Other detail info:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;*Required permission*: resource=\u0026#34;ADMIN:NAMESPACE:{namespace}:STAT\u0026#34;, action=2 (READ)\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "exportStats",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful export of stat configs",
            "schema": {
              "type": "file"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:STAT [READ]"
            ],
            "authorization": []
          }
        ],
        "summary": "Export all stat configurations",
        "tags": [
          "StatConfiguration"
        ],
        "x-authorization": {
          "action": "2",
          "resource": "ADMIN:NAMESPACE:{namespace}:STAT"
        }
      }
    },
    "/social/v1/admin/namespaces/{namespace}/stats/import": {
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Import stat configurations for a given namespace from file. At current, only JSON file is supported.\u0026lt;p\u0026gt;Other detail info:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;*Required permission*: resource=\u0026#34;ADMIN:NAMESPACE:{namespace}:STAT\u0026#34;, action=1 (CREATE)\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "importStats",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "name": "file",
            "required": false,
            "type": "file"
          },
          {
            "description": "replaceExisting",
            "in": "query",
            "name": "replaceExisting",
            "required": false,
            "type": "boolean",
            "x-omitempty": false
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Import stats successfully",
            "schema": {
              "$ref": "#/definitions/StatImportInfo"
            }
          },
          "400": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eerrorCode\u003c/td\u003e\u003ctd\u003eerrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e70138\u003c/td\u003e\u003ctd\u003eStats data for namespace [{namespace}] is invalid\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:STAT [CREATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Import stat configurations",
        "tags": [
          "StatConfiguration"
        ],
        "x-authorization": {
          "action": "1",
          "resource": "ADMIN:NAMESPACE:{namespace}:STAT"
        }
      }
    },
    "/social/v1/admin/namespaces/{namespace}/stats/search": {
      "get": {
        "description": "Query stats by keyword.\u0026lt;br\u0026gt;Other detail info:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;ADMIN:NAMESPACE:{namespace}:STAT\u0026#34;, action=2 (READ)\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Returns\u0026lt;i\u0026gt;: stats\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "queryStats",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "keyword",
            "in": "query",
            "name": "keyword",
            "required": true,
            "type": "string"
          },
          {
            "description": "flag to filter global statcode",
            "in": "query",
            "name": "isGlobal",
            "required": false,
            "type": "boolean",
            "x-omitempty": false
          },
          {
            "description": "flag to filter public/private statecode",
            "in": "query",
            "name": "isPublic",
            "required": false,
            "type": "boolean",
            "x-omitempty": false
          },
          {
            "default": 20,
            "format": "int32",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "default": 0,
            "format": "int32",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/StatPagingSlicedResult"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:STAT [READ]"
            ],
            "authorization": []
          }
        ],
        "summary": "Query stats by keyword",
        "tags": [
          "StatConfiguration"
        ],
        "x-authorization": {
          "action": "2",
          "resource": "ADMIN:NAMESPACE:{namespace}:STAT"
        }
      }
    },
    "/social/v1/admin/namespaces/{namespace}/stats/{statCode}": {
      "delete": {
        "description": "Deletes stat template.\u0026lt;br\u0026gt;Other detail info:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;ADMIN:NAMESPACE:{namespace}:STAT\u0026#34;, action=8 (DELETE)\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "deleteStat",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "stat code",
            "in": "path",
            "name": "statCode",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful delete of stat"
          },
          "404": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12241\u003c/td\u003e\u003ctd\u003eStat [{statCode}] cannot be found in namespace [{namespace}]\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:STAT [DELETE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Deletes stat",
        "tags": [
          "StatConfiguration"
        ],
        "x-authorization": {
          "action": "8",
          "resource": "ADMIN:NAMESPACE:{namespace}:STAT"
        }
      },
      "get": {
        "description": "Get stat by statCode.\u0026lt;br\u0026gt;Other detail info:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;ADMIN:NAMESPACE:{namespace}:STAT\u0026#34;, action=2 (READ)\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Returns\u0026lt;/i\u0026gt;: stat info\u0026lt;/ul\u0026gt;",
        "operationId": "getStat",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "stat Code",
            "in": "path",
            "name": "statCode",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/StatInfo"
            }
          },
          "404": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12241\u003c/td\u003e\u003ctd\u003eStat [{statCode}] cannot be found in namespace [{namespace}]\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:STAT [READ]"
            ],
            "authorization": []
          }
        ],
        "summary": "Get stat by statCode",
        "tags": [
          "StatConfiguration"
        ],
        "x-authorization": {
          "action": "2",
          "resource": "ADMIN:NAMESPACE:{namespace}:STAT"
        }
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "description": "Update stat.\u0026lt;br\u0026gt;Other detail info:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;ADMIN:NAMESPACE:{namespace}:STAT\u0026#34;, action=4 (UPDATE)\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Returns\u0026lt;/i\u0026gt;: updated stat\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "updateStat",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "stat code",
            "in": "path",
            "name": "statCode",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/StatUpdate"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful update of stat",
            "schema": {
              "$ref": "#/definitions/StatInfo"
            }
          },
          "404": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12241\u003c/td\u003e\u003ctd\u003eStat [{statCode}] cannot be found in namespace [{namespace}]\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12245\u003c/td\u003e\u003ctd\u003eStat cycle [{id}] cannot be found in namespace [{namespace}]\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:STAT [UPDATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Update stat",
        "tags": [
          "StatConfiguration"
        ],
        "x-authorization": {
          "action": "4",
          "resource": "ADMIN:NAMESPACE:{namespace}:STAT"
        }
      }
    },
    "/social/v1/admin/namespaces/{namespace}/stats/{statCode}/tied": {
      "delete": {
        "description": "Deletes stat template.\u0026lt;br\u0026gt;Other detail info:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;ADMIN:NAMESPACE:{namespace}:STAT\u0026#34;, action=8 (DELETE)\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "deleteTiedStat",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "stat code",
            "in": "path",
            "name": "statCode",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully delete the stat of tied status"
          },
          "409": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12276\u003c/td\u003e\u003ctd\u003e Stat template with code [{statCode}] in namespace [{namespace}] not deletable due it is in an INIT status \u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:STAT [DELETE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Deletes tied stat",
        "tags": [
          "StatConfiguration"
        ],
        "x-authorization": {
          "action": "8",
          "resource": "ADMIN:NAMESPACE:{namespace}:STAT"
        }
      }
    },
    "/social/v1/admin/namespaces/{namespace}/users/{userId}/statCycles/{cycleId}/statCycleitems": {
      "get": {
        "description": "List user\u0026#39;s statCycleItems by statCycle.\u0026lt;br\u0026gt;Other detail info:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM\u0026#34;, action=2 (READ)\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Returns\u0026lt;/i\u0026gt;: stat cycle items\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "getUserStatCycleItems",
        "parameters": [
          {
            "description": "cycle id",
            "in": "path",
            "name": "cycleId",
            "required": true,
            "type": "string"
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "description": "flag to filter which data to show.\n\u003cul\u003e \u003cli\u003eUnfiltered will return all data\u003c/li\u003e\u003cli\u003eIf set to false will return private user stat items only\u003c/li\u003e\u003cli\u003eIf set to true will return public stat items only\u003c/li\u003e\u003c/ul\u003e",
            "in": "query",
            "name": "isPublic",
            "required": false,
            "type": "boolean",
            "x-omitempty": false
          },
          {
            "default": 20,
            "format": "int32",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "default": 0,
            "format": "int32",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer"
          },
          {
            "description": "default is unsorted, allow values: [statCode, statCode:asc, statCode:desc, createdAt, createdAt:asc, createdAt:desc, updatedAt, updatedAt:asc, updatedAt:desc],and support sort group, eg: sortBy=statCode:asc,createdAt:desc.",
            "in": "query",
            "name": "sortBy",
            "required": false,
            "type": "string"
          },
          {
            "description": "comma separated stat codes",
            "in": "query",
            "name": "statCodes",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UserStatCycleItemPagingSlicedResult"
            }
          },
          "404": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12245\u003c/td\u003e\u003ctd\u003eStat cycle [{id}] cannot be found in namespace [{namespace}]\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eerrorCode\u003c/td\u003e\u003ctd\u003eerrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e20002\u003c/td\u003e\u003ctd\u003evalidation error\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM [READ]"
            ],
            "authorization": []
          }
        ],
        "summary": "List user's statCycleItems by statCycle",
        "tags": [
          "UserStatisticCycle"
        ],
        "x-authorization": {
          "action": "2",
          "resource": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM"
        }
      }
    },
    "/social/v1/admin/namespaces/{namespace}/users/{userId}/statitems": {
      "get": {
        "description": "List user\u0026#39;s statItems.\u0026lt;br\u0026gt;Other detail info:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM\u0026#34;, action=2 (READ)\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Returns\u0026lt;/i\u0026gt;: stat items\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "getUserStatItems",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "description": "flag to filter which data to show.\n\u003cul\u003e \u003cli\u003eUnfiltered will return all data\u003c/li\u003e\u003cli\u003eIf set to false will return private user stat items only\u003c/li\u003e\u003cli\u003eIf set to true will return public stat items only\u003c/li\u003e\u003c/ul\u003e",
            "in": "query",
            "name": "isPublic",
            "required": false,
            "type": "boolean",
            "x-omitempty": false
          },
          {
            "default": 20,
            "format": "int32",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "default": 0,
            "format": "int32",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer"
          },
          {
            "default": "updatedAt:asc",
            "description": "default is updatedAt:asc, allow values: [statCode, statCode:asc, statCode:desc, createdAt, createdAt:asc, createdAt:desc, updatedAt, updatedAt:asc, updatedAt:desc],and support sort group, eg: sortBy=statCode:asc,createdAt:desc.",
            "in": "query",
            "name": "sortBy",
            "required": false,
            "type": "string"
          },
          {
            "description": "stat codes",
            "in": "query",
            "name": "statCodes",
            "required": false,
            "type": "string"
          },
          {
            "description": "tags",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UserStatItemPagingSlicedResult"
            }
          },
          "422": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eerrorCode\u003c/td\u003e\u003ctd\u003eerrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e20002\u003c/td\u003e\u003ctd\u003evalidation error\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM [READ]"
            ],
            "authorization": []
          }
        ],
        "summary": "List user's statItems",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "2",
          "resource": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM"
        }
      }
    },
    "/social/v1/admin/namespaces/{namespace}/users/{userId}/statitems/bulk": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Bulk create user\u0026#39;s statItems.\u0026lt;br\u0026gt;Other detail info:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM\u0026#34;, action=1 (CREATE)\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Returns\u0026lt;/i\u0026gt;: bulk created result\u0026lt;/li\u0026gt;",
        "operationId": "bulkCreateUserStatItems",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatItemCreate"
              },
              "type": "array"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatOperationResult"
              },
              "type": "array"
            }
          },
          "422": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e20002\u003c/td\u003e\u003ctd\u003evalidation error\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM [CREATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Bulk create user's statItems",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "1",
          "resource": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM"
        }
      }
    },
    "/social/v1/admin/namespaces/{namespace}/users/{userId}/statitems/value/bulk": {
      "patch": {
        "consumes": [
          "application/json"
        ],
        "description": "Bulk update user\u0026#39;s statitems value.\u0026lt;br\u0026gt;Other detail info:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM\u0026#34;, action=4 (UPDATE)\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Returns\u0026lt;/i\u0026gt;: bulk updated result\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "bulkIncUserStatItemValue_1",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatItemInc"
              },
              "type": "array"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatOperationResult"
              },
              "type": "array"
            }
          },
          "422": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e20002\u003c/td\u003e\u003ctd\u003evalidation error\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM [UPDATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Bulk update user's statitems value",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "4",
          "resource": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM"
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Bulk update user\u0026#39;s statitems value.\u0026lt;br\u0026gt;Other detail info:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM\u0026#34;, action=4 (UPDATE)\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Returns\u0026lt;/i\u0026gt;: bulk updated result\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "bulkIncUserStatItem_1",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatItemInc"
              },
              "type": "array"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatOperationResult"
              },
              "type": "array"
            }
          },
          "422": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e20002\u003c/td\u003e\u003ctd\u003evalidation error\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM [UPDATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Bulk update user's statitems value",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "4",
          "resource": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM"
        }
      }
    },
    "/social/v1/admin/namespaces/{namespace}/users/{userId}/statitems/value/reset/bulk": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Bulk reset user\u0026#39;s statitems value for given namespace and user.  \nOther detail info:\n+ *Required permission*: resource=\u0026#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM\u0026#34;, action=4 (UPDATE)\n+ *Returns*: bulk updated result",
        "operationId": "bulkResetUserStatItem_1",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatItemReset"
              },
              "type": "array"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatOperationResult"
              },
              "type": "array"
            }
          },
          "422": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eerrorCode\u003c/td\u003e\u003ctd\u003eerrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e20002\u003c/td\u003e\u003ctd\u003evalidation error\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM [UPDATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Bulk reset user's statitems value",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "4",
          "resource": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM"
        }
      }
    },
    "/social/v1/admin/namespaces/{namespace}/users/{userId}/stats/{statCode}/statitems": {
      "delete": {
        "description": "This endpoint is for testing purpose. Use this endpoint for cleaning up after testing.\u0026lt;br\u0026gt;Delete user\u0026#39;s statItems given stat code.\u0026lt;br\u0026gt;Other detail info:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM\u0026#34;, action=8 (DELETE)\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Returns\u0026lt;/i\u0026gt;: no content\u0026lt;/li\u0026gt;\u0026lt;/li\u0026gt;",
        "operationId": "deleteUserStatItems",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "stat code",
            "in": "path",
            "name": "statCode",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "delete successfully"
          },
          "401": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e20001\u003c/td\u003e\u003ctd\u003eunauthorized access\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e20013\u003c/td\u003e\u003ctd\u003einsufficient permission\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "404": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12242\u003c/td\u003e\u003ctd\u003eStat item of [{statCode}] of user [{profileId}] cannot be found in namespace [{namespace}]\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eerrorCode\u003c/td\u003e\u003ctd\u003eerrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e20002\u003c/td\u003e\u003ctd\u003evalidation error\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM [DELETE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Delete User's statItems",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "8",
          "resource": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM"
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create statItem for a user.\u0026lt;br\u0026gt;Other detail info:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM\u0026#34;, action=1 (CREATE)\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Returns\u0026lt;/i\u0026gt;: created user\u0026#39;s statItem\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "createUserStatItem",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "stat code",
            "in": "path",
            "name": "statCode",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Create user statItem successfully"
          },
          "404": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12241\u003c/td\u003e\u003ctd\u003eStat [{statCode}] cannot be found in namespace [{namespace}]\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "409": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12274\u003c/td\u003e\u003ctd\u003eStat item with code [{statCode}] of user [{profileId}] already exists in namespace [{namespace}]\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eerrorCode\u003c/td\u003e\u003ctd\u003eerrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e20002\u003c/td\u003e\u003ctd\u003evalidation error\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM [CREATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Create user's statItem",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "1",
          "resource": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM"
        }
      }
    },
    "/social/v1/admin/namespaces/{namespace}/users/{userId}/stats/{statCode}/statitems/value": {
      "patch": {
        "consumes": [
          "application/json"
        ],
        "description": "Update user\u0026#39;s statitem value.\u0026lt;br\u0026gt;Other detail info:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM\u0026#34;, action=4 (UPDATE)\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Returns\u0026lt;/i\u0026gt;: updated user\u0026#39;s statItem\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "incUserStatItemValue",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "stat code",
            "in": "path",
            "name": "statCode",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/StatItemInc"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/StatItemIncResult"
            }
          },
          "400": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12221\u003c/td\u003e\u003ctd\u003eInvalid stat operator, expect [{expected}] but actual [{actual}]\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "404": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12241\u003c/td\u003e\u003ctd\u003eStat [{statCode}] cannot be found in namespace [{namespace}]\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12242\u003c/td\u003e\u003ctd\u003eStat item of [{statCode}] of user [{profileId}] cannot be found in namespace [{namespace}]\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "409": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12273\u003c/td\u003e\u003ctd\u003eStat [{statCode}] is not decreasable\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12275\u003c/td\u003e\u003ctd\u003e[{action}] value: [{value}] of stat [{statCode}]  is out of range while minimum [{minimum}] and maximum [{maximum}] in namespace [{namespace}]\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eerrorCode\u003c/td\u003e\u003ctd\u003eerrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e20002\u003c/td\u003e\u003ctd\u003evalidation error\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM [UPDATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Update user's statitem value",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "4",
          "resource": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM"
        }
      }
    },
    "/social/v1/admin/namespaces/{namespace}/users/{userId}/stats/{statCode}/statitems/value/reset": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Reset user\u0026#39;s statitem value for a given namespace and user.\nUser\u0026#39;s statitem value will be reset to the default value defined in the statistic configuration.\n\nOther detail info:\n+ *Required permission*: resource=\u0026#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM\u0026#34;, action=4 (UPDATE)\n+ *Returns*: updated user\u0026#39;s statItem",
        "operationId": "resetUserStatItemValue",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "stat code",
            "in": "path",
            "name": "statCode",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/StatResetInfo"
            }
          },
          {
            "description": "additional key",
            "in": "query",
            "name": "additionalKey",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/StatItemIncResult"
            }
          },
          "400": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eerrorCode\u003c/td\u003e\u003ctd\u003eerrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12221\u003c/td\u003e\u003ctd\u003eInvalid stat operator, expect [{expected}] but actual [{actual}]\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "404": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eerrorCode\u003c/td\u003e\u003ctd\u003eerrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12241\u003c/td\u003e\u003ctd\u003eStat [{statCode}] cannot be found in namespace [{namespace}]\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eerrorCode\u003c/td\u003e\u003ctd\u003eerrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e20002\u003c/td\u003e\u003ctd\u003evalidation error\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM [UPDATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Reset user's statitem value",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "4",
          "resource": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM"
        }
      }
    },
    "/social/v1/public/namespaces/{namespace}/globalstatitems": {
      "get": {
        "description": "List global statItems by pagination.\u0026lt;br\u0026gt;Other detail info:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;NAMESPACE:{namespace}:STATITEM\u0026#34;, action=2 (READ)\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Returns\u0026lt;/i\u0026gt;: stat items\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "getGlobalStatItems_1",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "default": 20,
            "format": "int32",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "default": 0,
            "format": "int32",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer"
          },
          {
            "description": "comma separated stat codes",
            "in": "query",
            "name": "statCodes",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GlobalStatItemPagingSlicedResult"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:STATITEM [READ]"
            ],
            "authorization": []
          }
        ],
        "summary": "List global statItems",
        "tags": [
          "GlobalStatistic"
        ],
        "x-authorization": {
          "action": "2",
          "resource": "NAMESPACE:{namespace}:STATITEM"
        }
      }
    },
    "/social/v1/public/namespaces/{namespace}/globalstatitems/{statCode}": {
      "get": {
        "description": "Get global statItem by stat code.\u0026lt;br\u0026gt;Other detail info:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;NAMESPACE:{namespace}:STATITEM\u0026#34;, action=2 (READ)\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Returns\u0026lt;/i\u0026gt;: global stat item\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "getGlobalStatItemByStatCode_1",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "stat Code",
            "in": "path",
            "name": "statCode",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GlobalStatItemInfo"
            }
          },
          "404": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12244\u003c/td\u003e\u003ctd\u003eGlobal stat item of [{statCode}] cannot be found in namespace [{namespace}]\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:STATITEM [READ]"
            ],
            "authorization": []
          }
        ],
        "summary": "Get global statItem by stat code",
        "tags": [
          "GlobalStatistic"
        ],
        "x-authorization": {
          "action": "2",
          "resource": "NAMESPACE:{namespace}:STATITEM"
        }
      }
    },
    "/social/v1/public/namespaces/{namespace}/statCycles": {
      "get": {
        "description": "List stat cycles by pagination.\u0026lt;br\u0026gt;Other detail info:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;NAMESPACE:{namespace}:STAT\u0026#34;, action=2 (READ)\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Returns\u0026lt;/i\u0026gt;: stat cycles\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "getStatCycles_1",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "enum": [
              "ANNUALLY",
              "DAILY",
              "MONTHLY",
              "SEASONAL",
              "WEEKLY"
            ],
            "in": "query",
            "name": "cycleType",
            "required": false,
            "type": "string"
          },
          {
            "default": 20,
            "format": "int32",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "name",
            "in": "query",
            "name": "name",
            "required": false,
            "type": "string"
          },
          {
            "default": 0,
            "format": "int32",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer"
          },
          {
            "description": "default is unsorted, allow values: [start, start:asc, start:desc, createdAt, createdAt:asc, createdAt:desc, updatedAt, updatedAt:asc, updatedAt:desc],and support sort group, eg: sortBy=start:asc,createdAt:desc.",
            "in": "query",
            "name": "sortBy",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "ACTIVE",
              "INIT",
              "STOPPED"
            ],
            "in": "query",
            "name": "status",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/StatCyclePagingSlicedResult"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:STAT [READ]"
            ],
            "authorization": []
          }
        ],
        "summary": "List stat cycles",
        "tags": [
          "StatCycleConfiguration"
        ],
        "x-authorization": {
          "action": "2",
          "resource": "NAMESPACE:{namespace}:STAT"
        }
      }
    },
    "/social/v1/public/namespaces/{namespace}/statCycles/bulk": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Bulk get stat cycle.\u0026lt;br\u0026gt;Other detail info:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;NAMESPACE:{namespace}:STAT\u0026#34;, action=2 (READ)\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Returns\u0026lt;/i\u0026gt;: list of stat cycles\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "bulkGetStatCycle_1",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/BulkStatCycleRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BulkStatCycleResult"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:STAT [READ]"
            ],
            "authorization": []
          }
        ],
        "summary": "Bulk get stat cycle",
        "tags": [
          "StatCycleConfiguration"
        ],
        "x-authorization": {
          "action": "2",
          "resource": "NAMESPACE:{namespace}:STAT"
        }
      }
    },
    "/social/v1/public/namespaces/{namespace}/statCycles/{cycleId}": {
      "get": {
        "description": "Get stat cycle.\u0026lt;br\u0026gt;Other detail info:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;NAMESPACE:{namespace}:STAT\u0026#34;, action=2 (READ)\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Returns\u0026lt;/i\u0026gt;: stat cycle info\u0026lt;/ul\u0026gt;",
        "operationId": "getStatCycle_1",
        "parameters": [
          {
            "description": "cycle id",
            "in": "path",
            "name": "cycleId",
            "required": true,
            "type": "string"
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/StatCycleInfo"
            }
          },
          "404": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12245\u003c/td\u003e\u003ctd\u003eStat cycle [{id}] cannot be found in namespace [{namespace}]\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:STAT [READ]"
            ],
            "authorization": []
          }
        ],
        "summary": "Get stat cycle",
        "tags": [
          "StatCycleConfiguration"
        ],
        "x-authorization": {
          "action": "2",
          "resource": "NAMESPACE:{namespace}:STAT"
        }
      }
    },
    "/social/v1/public/namespaces/{namespace}/statitems/bulk": {
      "get": {
        "description": "Public bulk fetch multiple user\u0026#39;s statitem value for a given namespace and statCode.  \nOther detail info:\n+ *Required permission*: resource=\u0026#34;NAMESPACE:{namespace}:STATITEM\u0026#34;, action=2 (READ)\n+ *Returns*: list of user\u0026#39;s statItem",
        "operationId": "bulkFetchStatItems_1",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "stat code",
            "in": "query",
            "name": "statCode",
            "required": true,
            "type": "string"
          },
          {
            "description": "comma separated user Ids",
            "in": "query",
            "name": "userIds",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/UserStatItemInfo"
              },
              "type": "array"
            }
          },
          "422": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e20002\u003c/td\u003e\u003ctd\u003evalidation error\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:STATITEM [READ]"
            ],
            "authorization": []
          }
        ],
        "summary": "Public bulk fetch statitems value",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "2",
          "resource": "NAMESPACE:{namespace}:STATITEM"
        }
      }
    },
    "/social/v1/public/namespaces/{namespace}/statitems/value/bulk": {
      "patch": {
        "consumes": [
          "application/json"
        ],
        "description": "Public bulk update multiple user\u0026#39;s statitems value.\u0026lt;br\u0026gt;Other detail info:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;NAMESPACE:{namespace}:STATITEM\u0026#34;, action=4 (UPDATE)\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Returns\u0026lt;/i\u0026gt;: bulk updated result\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "publicBulkIncUserStatItemValue",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkUserStatItemInc"
              },
              "type": "array"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatOperationResult"
              },
              "type": "array"
            }
          },
          "422": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e20002\u003c/td\u003e\u003ctd\u003evalidation error\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:STATITEM [UPDATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Public bulk update multiple user's statitems value",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "4",
          "resource": "NAMESPACE:{namespace}:STATITEM"
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Public bulk update multiple user\u0026#39;s statitems value.\u0026lt;br\u0026gt;Other detail info:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;NAMESPACE:{namespace}:STATITEM\u0026#34;, action=4 (UPDATE)\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Returns\u0026lt;/i\u0026gt;: bulk updated result\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "publicBulkIncUserStatItem",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkUserStatItemInc"
              },
              "type": "array"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatOperationResult"
              },
              "type": "array"
            }
          },
          "422": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e20002\u003c/td\u003e\u003ctd\u003evalidation error\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:STATITEM [UPDATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Public bulk update multiple user's statitems value",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "4",
          "resource": "NAMESPACE:{namespace}:STATITEM"
        }
      }
    },
    "/social/v1/public/namespaces/{namespace}/statitems/value/reset/bulk": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Bulk reset multiple user\u0026#39;s statitems value. \nUser\u0026#39;s statitem value will be reset to the default value defined in the statistic configuration.\n\nOther detail info:\n+ *Required permission*: resource=\u0026#34;NAMESPACE:{namespace}:STATITEM\u0026#34;, action=4 (UPDATE)\n+ *Returns*: bulk updated result",
        "operationId": "bulkResetUserStatItem_2",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkUserStatItemReset"
              },
              "type": "array"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatOperationResult"
              },
              "type": "array"
            }
          },
          "422": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eerrorCode\u003c/td\u003e\u003ctd\u003eerrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e20002\u003c/td\u003e\u003ctd\u003evalidation error\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:STATITEM [UPDATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Public bulk reset multiple user's statitems value",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "4",
          "resource": "NAMESPACE:{namespace}:STATITEM"
        }
      }
    },
    "/social/v1/public/namespaces/{namespace}/stats": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create stat.\u0026lt;br\u0026gt;Other detail info:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;NAMESPACE:{namespace}:STAT\u0026#34;, action=1 (CREATE)\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Returns\u0026lt;/i\u0026gt;: created stat template\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;default minimum value is 0\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;default maximum value is 1.7976931348623157e+308\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "createStat_1",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/StatCreate"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Create stat successfully",
            "schema": {
              "$ref": "#/definitions/StatInfo"
            }
          },
          "404": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12245\u003c/td\u003e\u003ctd\u003eStat cycle [{id}] cannot be found in namespace [{namespace}]\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "409": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12271\u003c/td\u003e\u003ctd\u003eStat template with code [{statCode}] already exists in namespace [{namespace}]\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:STAT [CREATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Create stat",
        "tags": [
          "StatConfiguration"
        ],
        "x-authorization": {
          "action": "1",
          "resource": "NAMESPACE:{namespace}:STAT"
        }
      }
    },
    "/social/v1/public/namespaces/{namespace}/users/me/statCycles/{cycleId}/statCycleitems": {
      "get": {
        "description": "List user\u0026#39;s statCycleItems by statCycle.\u0026lt;br\u0026gt;Other detail info:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;NAMESPACE:{namespace}:USER:{userId}:STATITEM\u0026#34;, action=2 (READ)\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Returns\u0026lt;/i\u0026gt;: stat cycle items\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "publicListMyStatCycleItems",
        "parameters": [
          {
            "description": "cycle id",
            "in": "path",
            "name": "cycleId",
            "required": true,
            "type": "string"
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "default": 20,
            "format": "int32",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "default": 0,
            "format": "int32",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer"
          },
          {
            "description": "default is unsorted, allow values: [statCode, statCode:asc, statCode:desc, createdAt, createdAt:asc, createdAt:desc, updatedAt, updatedAt:asc, updatedAt:desc],and support sort group, eg: sortBy=statCode:asc,createdAt:desc.",
            "in": "query",
            "name": "sortBy",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "stat codes",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "statCodes",
            "required": false,
            "type": "array"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UserStatCycleItemPagingSlicedResult"
            }
          },
          "404": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12245\u003c/td\u003e\u003ctd\u003eStat cycle [{id}] cannot be found in namespace [{namespace}]\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eerrorCode\u003c/td\u003e\u003ctd\u003eerrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e20002\u003c/td\u003e\u003ctd\u003evalidation error\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:USER:{userId}:STATITEM [READ]"
            ],
            "authorization": []
          }
        ],
        "summary": "List user's statCycleItems by statCycle",
        "tags": [
          "UserStatisticCycle"
        ],
        "x-authorization": {
          "action": "2",
          "resource": "NAMESPACE:{namespace}:USER:{userId}:STATITEM"
        }
      }
    },
    "/social/v1/public/namespaces/{namespace}/users/me/statitems": {
      "get": {
        "description": "Public list all statItems by pagination.\u0026lt;br\u0026gt;Other detail info:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;NAMESPACE:{namespace}:USER:{userId}:STATITEM\u0026#34;, action=2 (READ)\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Returns\u0026lt;/i\u0026gt;: stat items\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "publicListMyStatItems",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "default": 20,
            "format": "int32",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "default": 0,
            "format": "int32",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer"
          },
          {
            "description": "default is unsorted, allow values: [statCode, statCode:asc, statCode:desc, createdAt, createdAt:asc, createdAt:desc, updatedAt, updatedAt:asc, updatedAt:desc],and support sort group, eg: sortBy=statCode:asc,createdAt:desc.",
            "in": "query",
            "name": "sortBy",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "stat codes",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "statCodes",
            "required": false,
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "tags",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "tags",
            "required": false,
            "type": "array"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UserStatItemPagingSlicedResult"
            }
          },
          "422": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eerrorCode\u003c/td\u003e\u003ctd\u003eerrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e20002\u003c/td\u003e\u003ctd\u003evalidation error\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:USER:{userId}:STATITEM [READ]"
            ],
            "authorization": []
          }
        ],
        "summary": "Public list user's statItems",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "2",
          "resource": "NAMESPACE:{namespace}:USER:{userId}:STATITEM"
        }
      }
    },
    "/social/v1/public/namespaces/{namespace}/users/me/statitems/value/bulk": {
      "get": {
        "description": "Public list all statItems of user.\u0026lt;br\u0026gt;NOTE: \u0026lt;li\u0026gt;If stat code does not exist, will ignore this stat code.\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;If stat item does not exist, will return default value\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;Other detail info:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;NAMESPACE:{namespace}:USER:{userId}:STATITEM\u0026#34;, action=2 (READ)\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Returns\u0026lt;/i\u0026gt;: stat items\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "publicListAllMyStatItems",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "additional key",
            "in": "query",
            "name": "additionalKey",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "stat codes",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "statCodes",
            "required": false,
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "tags",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "tags",
            "required": false,
            "type": "array"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/A DTO object for user stat item value"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12223\u003c/td\u003e\u003ctd\u003eInvalid stat codes in namespace [{namespace}]: [{statCodes}]\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "404": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12243\u003c/td\u003e\u003ctd\u003eStats cannot be found in namespace [{namespace}]\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e20002\u003c/td\u003e\u003ctd\u003evalidation error\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:USER:{userId}:STATITEM [READ]"
            ],
            "authorization": []
          }
        ],
        "summary": "Public list user's statItems",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "2",
          "resource": "NAMESPACE:{namespace}:USER:{userId}:STATITEM"
        }
      }
    },
    "/social/v1/public/namespaces/{namespace}/users/{userId}/statCycles/{cycleId}/statCycleitems": {
      "get": {
        "description": "List user\u0026#39;s statCycleItems by statCycle.\u0026lt;br\u0026gt;Other detail info:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;NAMESPACE:{namespace}:USER:{userId}:STATITEM\u0026#34;, action=2 (READ)\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Returns\u0026lt;/i\u0026gt;: stat cycle items\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "getUserStatCycleItems_1",
        "parameters": [
          {
            "description": "cycle id",
            "in": "path",
            "name": "cycleId",
            "required": true,
            "type": "string"
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "default": 20,
            "format": "int32",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "default": 0,
            "format": "int32",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer"
          },
          {
            "description": "default is unsorted, allow values: [statCode, statCode:asc, statCode:desc, createdAt, createdAt:asc, createdAt:desc, updatedAt, updatedAt:asc, updatedAt:desc],and support sort group, eg: sortBy=statCode:asc,createdAt:desc.",
            "in": "query",
            "name": "sortBy",
            "required": false,
            "type": "string"
          },
          {
            "description": "comma separated stat codes",
            "in": "query",
            "name": "statCodes",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UserStatCycleItemPagingSlicedResult"
            }
          },
          "404": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12245\u003c/td\u003e\u003ctd\u003eStat cycle [{id}] cannot be found in namespace [{namespace}]\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eerrorCode\u003c/td\u003e\u003ctd\u003eerrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e20002\u003c/td\u003e\u003ctd\u003evalidation error\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:USER:{userId}:STATITEM [READ]"
            ],
            "authorization": []
          }
        ],
        "summary": "List user's statCycleItems by statCycle",
        "tags": [
          "UserStatisticCycle"
        ],
        "x-authorization": {
          "action": "2",
          "resource": "NAMESPACE:{namespace}:USER:{userId}:STATITEM"
        }
      }
    },
    "/social/v1/public/namespaces/{namespace}/users/{userId}/statitems": {
      "get": {
        "description": "Public list all statItems by pagination.\u0026lt;br\u0026gt;Other detail info:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;NAMESPACE:{namespace}:USER:{userId}:STATITEM\u0026#34;, action=2 (READ)\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Returns\u0026lt;/i\u0026gt;: stat items\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "publicQueryUserStatItems",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "default": 20,
            "format": "int32",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "default": 0,
            "format": "int32",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer"
          },
          {
            "description": "default is unsorted, allow values: [statCode, statCode:asc, statCode:desc, createdAt, createdAt:asc, createdAt:desc, updatedAt, updatedAt:asc, updatedAt:desc],and support sort group, eg: sortBy=statCode:asc,createdAt:desc.",
            "in": "query",
            "name": "sortBy",
            "required": false,
            "type": "string"
          },
          {
            "description": "stat codes",
            "in": "query",
            "name": "statCodes",
            "required": false,
            "type": "string"
          },
          {
            "description": "tags",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UserStatItemPagingSlicedResult"
            }
          },
          "422": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eerrorCode\u003c/td\u003e\u003ctd\u003eerrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e20002\u003c/td\u003e\u003ctd\u003evalidation error\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:USER:{userId}:STATITEM [READ]"
            ],
            "authorization": []
          }
        ],
        "summary": "Public list user's statItems",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "2",
          "resource": "NAMESPACE:{namespace}:USER:{userId}:STATITEM"
        }
      }
    },
    "/social/v1/public/namespaces/{namespace}/users/{userId}/statitems/bulk": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Bulk create statItems.\u0026lt;br\u0026gt;Other detail info:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;NAMESPACE:{namespace}:USER:{userId}:STATITEM\u0026#34;, action=1 (CREATE)\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Returns\u0026lt;/i\u0026gt;: bulk created result\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "publicBulkCreateUserStatItems",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatItemCreate"
              },
              "type": "array"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatOperationResult"
              },
              "type": "array"
            }
          },
          "422": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e20002\u003c/td\u003e\u003ctd\u003evalidation error\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:USER:{userId}:STATITEM [CREATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Bulk create user's statItems",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "1",
          "resource": "NAMESPACE:{namespace}:USER:{userId}:STATITEM"
        }
      }
    },
    "/social/v1/public/namespaces/{namespace}/users/{userId}/statitems/value/bulk": {
      "get": {
        "description": "Public list all statItems of user.\u0026lt;br\u0026gt;NOTE: \u0026lt;li\u0026gt;If stat code does not exist, will ignore this stat code.\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;If stat item does not exist, will return default value\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;Other detail info:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;NAMESPACE:{namespace}:USER:{userId}:STATITEM\u0026#34;, action=2 (READ)\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Returns\u0026lt;/i\u0026gt;: stat items\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "publicQueryUserStatItems_1",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "user id",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "description": "additional key",
            "in": "query",
            "name": "additionalKey",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "stat codes",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "statCodes",
            "required": false,
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "tags",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "tags",
            "required": false,
            "type": "array"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/A DTO object for user stat item value"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12223\u003c/td\u003e\u003ctd\u003eInvalid stat codes in namespace [{namespace}]: [{statCodes}]\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "404": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12243\u003c/td\u003e\u003ctd\u003eStats cannot be found in namespace [{namespace}]\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e20002\u003c/td\u003e\u003ctd\u003evalidation error\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:USER:{userId}:STATITEM [READ]"
            ],
            "authorization": []
          }
        ],
        "summary": "Public list user's statItems",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "2",
          "resource": "NAMESPACE:{namespace}:USER:{userId}:STATITEM"
        }
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "description": "Public bulk update user\u0026#39;s statitems value.\u0026lt;br\u0026gt;Other detail info:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;NAMESPACE:{namespace}:USER:{userId}:STATITEM\u0026#34;, action=4 (UPDATE)\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Returns\u0026lt;/i\u0026gt;: bulk updated result\u0026lt;/li\u0026gt;",
        "operationId": "bulkIncUserStatItemValue_2",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatItemInc"
              },
              "type": "array"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatOperationResult"
              },
              "type": "array"
            }
          },
          "422": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e20002\u003c/td\u003e\u003ctd\u003evalidation error\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:USER:{userId}:STATITEM [UPDATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Public bulk update user's statitems value",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "4",
          "resource": "NAMESPACE:{namespace}:USER:{userId}:STATITEM"
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Public bulk update user\u0026#39;s statitems value.\u0026lt;br\u0026gt;Other detail info:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;NAMESPACE:{namespace}:USER:{userId}:STATITEM\u0026#34;, action=4 (UPDATE)\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Returns\u0026lt;/i\u0026gt;: bulk updated result\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "publicBulkIncUserStatItem_1",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatItemInc"
              },
              "type": "array"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatOperationResult"
              },
              "type": "array"
            }
          },
          "422": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e20002\u003c/td\u003e\u003ctd\u003evalidation error\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:USER:{userId}:STATITEM [UPDATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Public bulk update user's statitems value",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "4",
          "resource": "NAMESPACE:{namespace}:USER:{userId}:STATITEM"
        }
      }
    },
    "/social/v1/public/namespaces/{namespace}/users/{userId}/statitems/value/reset/bulk": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Public bulk reset user\u0026#39;s statitems value for given namespace and user.  \nOther detail info:\n+ *Required permission*: resource=\u0026#34;NAMESPACE:{namespace}:USER:{userId}:STATITEM\u0026#34;, action=4 (UPDATE)\n+ *Returns*: bulk updated result",
        "operationId": "bulkResetUserStatItem_3",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatItemReset"
              },
              "type": "array"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatOperationResult"
              },
              "type": "array"
            }
          },
          "422": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eerrorCode\u003c/td\u003e\u003ctd\u003eerrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e20002\u003c/td\u003e\u003ctd\u003evalidation error\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:USER:{userId}:STATITEM [UPDATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Public bulk reset user's statitems value",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "4",
          "resource": "NAMESPACE:{namespace}:USER:{userId}:STATITEM"
        }
      }
    },
    "/social/v1/public/namespaces/{namespace}/users/{userId}/stats/{statCode}/statitems": {
      "delete": {
        "description": "Delete user\u0026#39;s statItems given stat code.\u0026lt;br\u0026gt;Other detail info:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;NAMESPACE:{namespace}:USER:{userId}:STATITEM\u0026#34;, action=8 (DELETE)\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Returns\u0026lt;/i\u0026gt;: no content\u0026lt;/li\u0026gt;\u0026lt;/li\u0026gt;",
        "operationId": "deleteUserStatItems_1",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "stat code",
            "in": "path",
            "name": "statCode",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "delete successfully"
          },
          "401": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e20001\u003c/td\u003e\u003ctd\u003eunauthorized access\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e20013\u003c/td\u003e\u003ctd\u003einsufficient permission\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "404": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12242\u003c/td\u003e\u003ctd\u003eStat item of [{statCode}] of user [{profileId}] cannot be found in namespace [{namespace}]\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eerrorCode\u003c/td\u003e\u003ctd\u003eerrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e20002\u003c/td\u003e\u003ctd\u003evalidation error\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:USER:{userId}:STATITEM [DELETE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Delete User's statItems",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "8",
          "resource": "NAMESPACE:{namespace}:USER:{userId}:STATITEM"
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create user\u0026#39;s statItem.\u0026lt;br\u0026gt;Other detail info:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;NAMESPACE:{namespace}:USER:{userId}:STATITEM\u0026#34;, action=1 (CREATE)\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Returns\u0026lt;/i\u0026gt;: created user\u0026#39;s statItem\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "publicCreateUserStatItem",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "stat code",
            "in": "path",
            "name": "statCode",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Create user statItem successfully"
          },
          "404": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12241\u003c/td\u003e\u003ctd\u003eStat [{statCode}] cannot be found in namespace [{namespace}]\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "409": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12274\u003c/td\u003e\u003ctd\u003eStat item with code [{statCode}] of user [{profileId}] already exists in namespace [{namespace}]\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eerrorCode\u003c/td\u003e\u003ctd\u003eerrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e20002\u003c/td\u003e\u003ctd\u003evalidation error\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:USER:{userId}:STATITEM [CREATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Create user's statItem",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "1",
          "resource": "NAMESPACE:{namespace}:USER:{userId}:STATITEM"
        }
      }
    },
    "/social/v1/public/namespaces/{namespace}/users/{userId}/stats/{statCode}/statitems/value": {
      "patch": {
        "consumes": [
          "application/json"
        ],
        "description": "Public update user\u0026#39;s statitem value.\u0026lt;br\u0026gt;Other detail info:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;NAMESPACE:{namespace}:USER:{userId}:STATITEM\u0026#34;, action=4 (UPDATE)\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Returns\u0026lt;/i\u0026gt;: updated user\u0026#39;s statItem\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "publicIncUserStatItemValue",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "stat code",
            "in": "path",
            "name": "statCode",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/StatItemInc"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/StatItemIncResult"
            }
          },
          "400": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12221\u003c/td\u003e\u003ctd\u003eInvalid stat operator, expect [{expected}] but actual [{actual}]\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "404": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12241\u003c/td\u003e\u003ctd\u003eStat [{statCode}] cannot be found in namespace [{namespace}]\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12242\u003c/td\u003e\u003ctd\u003eStat item of [{statCode}] of user [{profileId}] cannot be found in namespace [{namespace}]\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "409": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12273\u003c/td\u003e\u003ctd\u003eStat [{statCode}] is not decreasable\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12275\u003c/td\u003e\u003ctd\u003e[{action}] value: [{value}] of stat [{statCode}]  is out of range while minimum [{minimum}] and maximum [{maximum}] in namespace [{namespace}]\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eerrorCode\u003c/td\u003e\u003ctd\u003eerrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e20002\u003c/td\u003e\u003ctd\u003evalidation error\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:USER:{userId}:STATITEM [UPDATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Public update user's statitem value",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "4",
          "resource": "NAMESPACE:{namespace}:USER:{userId}:STATITEM"
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Public update user\u0026#39;s statitem value.\u0026lt;br\u0026gt;Other detail info:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;NAMESPACE:{namespace}:USER:{userId}:STATITEM\u0026#34;, action=4 (UPDATE)\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Returns\u0026lt;/i\u0026gt;: updated user\u0026#39;s statItem\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "publicIncUserStatItem",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "stat code",
            "in": "path",
            "name": "statCode",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/StatItemInc"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/StatItemIncResult"
            }
          },
          "400": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12221\u003c/td\u003e\u003ctd\u003eInvalid stat operator, expect [{expected}] but actual [{actual}]\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "404": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12241\u003c/td\u003e\u003ctd\u003eStat [{statCode}] cannot be found in namespace [{namespace}]\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12242\u003c/td\u003e\u003ctd\u003eStat item of [{statCode}] of user [{profileId}] cannot be found in namespace [{namespace}]\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "409": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12273\u003c/td\u003e\u003ctd\u003eStat [{statCode}] is not decreasable\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12275\u003c/td\u003e\u003ctd\u003e[{action}] value: [{value}] of stat [{statCode}]  is out of range while minimum [{minimum}] and maximum [{maximum}] in namespace [{namespace}]\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eerrorCode\u003c/td\u003e\u003ctd\u003eerrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e20002\u003c/td\u003e\u003ctd\u003evalidation error\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:USER:{userId}:STATITEM [UPDATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Public update user's statitem value",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "4",
          "resource": "NAMESPACE:{namespace}:USER:{userId}:STATITEM"
        }
      }
    },
    "/social/v1/public/namespaces/{namespace}/users/{userId}/stats/{statCode}/statitems/value/reset": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Reset user\u0026#39;s statitem value for a given namespace and user.\nUser\u0026#39;s statitem value will be reset to the default value defined in the statistic configuration.\n\nOther detail info:\n+ *Required permission*: resource=\u0026#34;NAMESPACE:{namespace}:USER:{userId}:STATITEM\u0026#34;, action=4 (UPDATE)\n+ *Returns*: updated user\u0026#39;s statItem",
        "operationId": "resetUserStatItemValue_1",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "stat code",
            "in": "path",
            "name": "statCode",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/StatItemIncResult"
            }
          },
          "400": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eerrorCode\u003c/td\u003e\u003ctd\u003eerrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12221\u003c/td\u003e\u003ctd\u003eInvalid stat operator, expect [{expected}] but actual [{actual}]\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "404": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eerrorCode\u003c/td\u003e\u003ctd\u003eerrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12241\u003c/td\u003e\u003ctd\u003eStat [{statCode}] cannot be found in namespace [{namespace}]\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eerrorCode\u003c/td\u003e\u003ctd\u003eerrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e20002\u003c/td\u003e\u003ctd\u003evalidation error\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:USER:{userId}:STATITEM [UPDATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Public reset user's statitem value",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "4",
          "resource": "NAMESPACE:{namespace}:USER:{userId}:STATITEM"
        }
      }
    },
    "/social/v2/admin/namespaces/{namespace}/statitems/value/bulk": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Bulk update multiple user\u0026#39;s statitems value with specific update strategy.  \nThere are four supported update strategies:\n+ *OVERRIDE*: update user statitem with the new value\n+ *INCREMENT*: increment user statitem with the specified value\n+ *MAX*: update user statitem with the specified value if it\u0026#39;s larger than the existing value\n+ *MIN*: update user statitem with the specified value if it\u0026#39;s lower than the existing value\n\nOther detail info:\n+ *Required permission*: resource=\u0026#34;ADMIN:NAMESPACE:{namespace}:STATITEM\u0026#34;, action=4 (UPDATE)\n+ *Returns*: bulk updated result",
        "operationId": "bulkUpdateUserStatItemV2",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkUserStatItemUpdate"
              },
              "type": "array"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatOperationResult"
              },
              "type": "array"
            }
          },
          "422": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eerrorCode\u003c/td\u003e\u003ctd\u003eerrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e20002\u003c/td\u003e\u003ctd\u003evalidation error\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:STATITEM [UPDATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Bulk update multiple user's statitems value",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "4",
          "resource": "ADMIN:NAMESPACE:{namespace}:STATITEM"
        }
      }
    },
    "/social/v2/admin/namespaces/{namespace}/statitems/value/bulk/getOrDefault": {
      "get": {
        "description": "Bulk fetch multiple user\u0026#39;s stat item values for a given namespace and statCode.\nNOTE: If stat item does not exist, will return default value. Other detail info:\n+ *Required permission*: resource=ADMIN:NAMESPACE:{namespace}:STATITEM, action=2 (READ)\n+ *Returns*: list of user\u0026#39;s stat item values",
        "operationId": "bulkFetchOrDefaultStatItems_1",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "stat code",
            "in": "query",
            "name": "statCode",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "user ids",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "userIds",
            "required": true,
            "type": "array"
          },
          {
            "description": "additional key",
            "in": "query",
            "name": "additionalKey",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/A DTO object for user stat item value"
              },
              "type": "array"
            }
          },
          "404": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12241\u003c/td\u003e\u003ctd\u003eStat [{statCode}] cannot be found in namespace [{namespace}]\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e20002\u003c/td\u003e\u003ctd\u003evalidation error\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Bulk fetch user stat item values",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "2",
          "resource": "ADMIN:NAMESPACE:{namespace}:STATITEM"
        }
      }
    },
    "/social/v2/admin/namespaces/{namespace}/users/{userId}/statitems/value/bulk": {
      "get": {
        "description": "Admin list all statItems of user\u0026lt;br\u0026gt;NOTE: \u0026lt;li\u0026gt;If stat code does not exist, will ignore this stat code.\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;If stat item does not exist, will return default value\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;Other detail info:\u0026lt;ul\u0026gt;+ *Required permission*: resource=ADMIN:NAMESPACE:{namespace}:STATITEM, action=2 (READ)\n\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Returns\u0026lt;/i\u0026gt;: stat items\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "AdminListUsersStatItems",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "user id",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "description": "additional key",
            "in": "query",
            "name": "additionalKey",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "stat codes",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "statCodes",
            "required": false,
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "tags",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "tags",
            "required": false,
            "type": "array"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/A DTO object for user stat item value"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12223\u003c/td\u003e\u003ctd\u003eInvalid stat codes in namespace [{namespace}]: [{statCodes}]\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "404": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12243\u003c/td\u003e\u003ctd\u003eStats cannot be found in namespace [{namespace}]\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e20002\u003c/td\u003e\u003ctd\u003evalidation error\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Admin list user's statItems",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "2",
          "resource": "ADMIN:NAMESPACE:{namespace}:STATITEM"
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Bulk update user\u0026#39;s statitems value for given namespace and user with specific update strategy.  \nThere are four supported update strategies:\n+ *OVERRIDE*: update user statitem with the new value\n+ *INCREMENT*: increment user statitem with the specified value\n+ *MAX*: update user statitem with the specified value if it\u0026#39;s larger than the existing value\n+ *MIN*: update user statitem with the specified value if it\u0026#39;s lower than the existing value\n\nThe *additionalKey* parameter will be suffixed to *userId* and is used to support multi level user\u0026#39;s statitems, such as character\u0026#39;s statitems. \nIf provided, user\u0026#39;s statitems will be saved with key: *userId_additionalKey* \n\nOther detail info:\n+ *Required permission*: resource=\u0026#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM\u0026#34;, action=4 (UPDATE)\n+ *Returns*: bulk updated result",
        "operationId": "bulkUpdateUserStatItem",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatItemUpdate"
              },
              "type": "array"
            }
          },
          {
            "description": "additional key",
            "in": "query",
            "name": "additionalKey",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatOperationResult"
              },
              "type": "array"
            }
          },
          "422": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eerrorCode\u003c/td\u003e\u003ctd\u003eerrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e20002\u003c/td\u003e\u003ctd\u003evalidation error\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM [UPDATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Bulk update user's statitems value",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "4",
          "resource": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM"
        }
      }
    },
    "/social/v2/admin/namespaces/{namespace}/users/{userId}/statitems/value/reset/bulk": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Bulk reset user\u0026#39;s statitem values for given namespace and user.  \nOther detail info:\n+ *Required permission*: resource=\u0026#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM\u0026#34;, action=4 (UPDATE)\n+ *Returns*: bulk updated result",
        "operationId": "bulkResetUserStatItemValues",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/A DTO object for resetting user stat items"
              },
              "type": "array"
            }
          },
          {
            "description": "additional key",
            "in": "query",
            "name": "additionalKey",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatOperationResult"
              },
              "type": "array"
            }
          },
          "422": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eerrorCode\u003c/td\u003e\u003ctd\u003eerrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e20002\u003c/td\u003e\u003ctd\u003evalidation error\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM [UPDATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Bulk reset user's statitem values",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "4",
          "resource": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM"
        }
      }
    },
    "/social/v2/admin/namespaces/{namespace}/users/{userId}/stats/{statCode}/statitems": {
      "delete": {
        "description": "Delete user\u0026#39;s stat items for given namespace, statCode, and user Id. \nIf query param *additionalKey* is provided, it will delete user stat items of specific key (i.e. characterName). \nOtherwise, it will delete all stat items related to the user Id. \n\u0026lt;br\u0026gt;Delete user\u0026#39;s statItems given stat code.\u0026lt;br\u0026gt;Other detail info:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM\u0026#34;, action=8 (DELETE)\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Returns\u0026lt;/i\u0026gt;: no content\u0026lt;/li\u0026gt;\u0026lt;/li\u0026gt;",
        "operationId": "deleteUserStatItems_2",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "stat code",
            "in": "path",
            "name": "statCode",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "description": "additional key",
            "in": "query",
            "name": "additionalKey",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "delete successfully"
          },
          "401": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e20001\u003c/td\u003e\u003ctd\u003eunauthorized access\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e20013\u003c/td\u003e\u003ctd\u003einsufficient permission\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "404": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12242\u003c/td\u003e\u003ctd\u003eStat item of [{statCode}] of user [{profileId}] cannot be found in namespace [{namespace}]\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eerrorCode\u003c/td\u003e\u003ctd\u003eerrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e20002\u003c/td\u003e\u003ctd\u003evalidation error\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM [DELETE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Delete User's statItems",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "8",
          "resource": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM"
        }
      }
    },
    "/social/v2/admin/namespaces/{namespace}/users/{userId}/stats/{statCode}/statitems/value": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update user\u0026#39;s statitem value for a given namespace and user with a certain update strategy.\nThere are four supported update strategies:\n+ *OVERRIDE*: update user statitem with the new value\n+ *INCREMENT*: increment user statitem with the specified value\n+ *MAX*: update user statitem with the specified value if it\u0026#39;s larger than the existing value\n+ *MIN*: update user statitem with the specified value if it\u0026#39;s lower than the existing value\n\nThe *additionalKey* parameter will be suffixed to *userId* and is used to support multi level user\u0026#39;s statitems, such as character\u0026#39;s statitems. \nIf provided, user\u0026#39;s statitems will be saved with key: *userId_additionalKey* \n\nOther detail info:\n+ *Required permission*: resource=\u0026#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM\u0026#34;, action=4 (UPDATE)\n+ *Returns*: updated user\u0026#39;s statItem",
        "operationId": "updateUserStatItemValue",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "stat code",
            "in": "path",
            "name": "statCode",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/StatItemUpdate"
            }
          },
          {
            "description": "additional key",
            "in": "query",
            "name": "additionalKey",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/StatItemIncResult"
            }
          },
          "400": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eerrorCode\u003c/td\u003e\u003ctd\u003eerrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12221\u003c/td\u003e\u003ctd\u003eInvalid stat operator, expect [{expected}] but actual [{actual}]\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "404": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eerrorCode\u003c/td\u003e\u003ctd\u003eerrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12241\u003c/td\u003e\u003ctd\u003eStat [{statCode}] cannot be found in namespace [{namespace}]\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "409": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12273\u003c/td\u003e\u003ctd\u003eStat [{statCode}] is not decreasable\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12275\u003c/td\u003e\u003ctd\u003e[{action}] value: [{value}] of stat [{statCode}] is out of range while minimum [{minimum}] and maximum [{maximum}] in namespace [{namespace}]\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eerrorCode\u003c/td\u003e\u003ctd\u003eerrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e20002\u003c/td\u003e\u003ctd\u003evalidation error\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM [UPDATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Update user's statitem value",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "4",
          "resource": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM"
        }
      }
    },
    "/social/v2/public/namespaces/{namespace}/statitems/value/bulk": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Public bulk update multiple user\u0026#39;s statitems value with specific update strategy.  \nThere are four supported update strategies:\n+ *OVERRIDE*: update user statitem with the new value\n+ *INCREMENT*: increment user statitem with the specified value\n+ *MAX*: update user statitem with the specified value if it\u0026#39;s larger than the existing value\n+ *MIN*: update user statitem with the specified value if it\u0026#39;s lower than the existing value\n\nOther detail info:\n+ *Required permission*: resource=\u0026#34;NAMESPACE:{namespace}:STATITEM\u0026#34;, action=4 (UPDATE)\n+ *Returns*: bulk updated result",
        "operationId": "bulkUpdateUserStatItem_1",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkUserStatItemUpdate"
              },
              "type": "array"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatOperationResult"
              },
              "type": "array"
            }
          },
          "422": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eerrorCode\u003c/td\u003e\u003ctd\u003eerrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e20002\u003c/td\u003e\u003ctd\u003evalidation error\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:STATITEM [UPDATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Public bulk update multiple user's statitems value",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "4",
          "resource": "NAMESPACE:{namespace}:STATITEM"
        }
      }
    },
    "/social/v2/public/namespaces/{namespace}/users/{userId}/statitems/value/bulk": {
      "get": {
        "description": "Public list all statItems of user.\u0026lt;br\u0026gt;NOTE: \u0026lt;li\u0026gt;If stat code does not exist, will ignore this stat code.\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;If stat item does not exist, will return default value\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;Other detail info:\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Required permission\u0026lt;/i\u0026gt;: resource=\u0026#34;NAMESPACE:{namespace}:USER:{userId}:STATITEM\u0026#34;, action=2 (READ)\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;\u0026lt;i\u0026gt;Returns\u0026lt;/i\u0026gt;: stat items\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;",
        "operationId": "publicQueryUserStatItems_2",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "user id",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "description": "additional key",
            "in": "query",
            "name": "additionalKey",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "stat codes",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "statCodes",
            "required": false,
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "tags",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "tags",
            "required": false,
            "type": "array"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/A DTO object for user stat item value"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12223\u003c/td\u003e\u003ctd\u003eInvalid stat codes in namespace [{namespace}]: [{statCodes}]\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "404": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12243\u003c/td\u003e\u003ctd\u003eStats cannot be found in namespace [{namespace}]\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e20002\u003c/td\u003e\u003ctd\u003evalidation error\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:USER:{userId}:STATITEM [READ]"
            ],
            "authorization": []
          }
        ],
        "summary": "Public list user's statItems",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "2",
          "resource": "NAMESPACE:{namespace}:USER:{userId}:STATITEM"
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Public bulk update user\u0026#39;s statitems value for given namespace and user with specific update strategy.  \nThere are four supported update strategies:\n+ *OVERRIDE*: update user statitem with the new value\n+ *INCREMENT*: increment user statitem with the specified value\n+ *MAX*: update user statitem with the specified value if it\u0026#39;s larger than the existing value\n+ *MIN*: update user statitem with the specified value if it\u0026#39;s lower than the existing value\n\nThe *additionalKey* parameter will be suffixed to *userId* and is used to support multi level user\u0026#39;s statitems, such as character\u0026#39;s statitems. \nIf provided, user\u0026#39;s statitems will be saved with key: *userId_additionalKey* \n\nOther detail info:\n+ *Required permission*: resource=\u0026#34;NAMESPACE:{namespace}:USER:{userId}:STATITEM\u0026#34;, action=4 (UPDATE)\n+ *Returns*: bulk updated result",
        "operationId": "bulkUpdateUserStatItem_2",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatItemUpdate"
              },
              "type": "array"
            }
          },
          {
            "description": "additional key",
            "in": "query",
            "name": "additionalKey",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatOperationResult"
              },
              "type": "array"
            }
          },
          "422": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eerrorCode\u003c/td\u003e\u003ctd\u003eerrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e20002\u003c/td\u003e\u003ctd\u003evalidation error\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:USER:{userId}:STATITEM [UPDATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Public bulk update user's statitems value",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "4",
          "resource": "NAMESPACE:{namespace}:USER:{userId}:STATITEM"
        }
      }
    },
    "/social/v2/public/namespaces/{namespace}/users/{userId}/stats/{statCode}/statitems/value": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Public update user\u0026#39;s statitem value for a given namespace and user with a certain update strategy. \nThere are four supported update strategies:\n+ *OVERRIDE*: update user statitem with the new value\n+ *INCREMENT*: increment user statitem with the specified value\n+ *MAX*: update user statitem with the specified value if it\u0026#39;s larger than the existing value\n+ *MIN*: update user statitem with the specified value if it\u0026#39;s lower than the existing value\n\nThe *additionalKey* parameter will be suffixed to *userId* and is used to support multi level user\u0026#39;s statitems, such as character\u0026#39;s statitems. \nIf provided, user\u0026#39;s statitems will be saved with key: *userId_additionalKey* \n\nOther detail info:\n+ *Required permission*: resource=\u0026#34;NAMESPACE:{namespace}:USER:{userId}:STATITEM\u0026#34;, action=4 (UPDATE)\n+ *Returns*: updated user\u0026#39;s statItem",
        "operationId": "updateUserStatItemValue_1",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "stat code",
            "in": "path",
            "name": "statCode",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/StatItemUpdate"
            }
          },
          {
            "description": "additional key",
            "in": "query",
            "name": "additionalKey",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/StatItemIncResult"
            }
          },
          "400": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eerrorCode\u003c/td\u003e\u003ctd\u003eerrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12221\u003c/td\u003e\u003ctd\u003eInvalid stat operator, expect [{expected}] but actual [{actual}]\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "404": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eerrorCode\u003c/td\u003e\u003ctd\u003eerrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12241\u003c/td\u003e\u003ctd\u003eStat [{statCode}] cannot be found in namespace [{namespace}]\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "409": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eErrorCode\u003c/td\u003e\u003ctd\u003eErrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12273\u003c/td\u003e\u003ctd\u003eStat [{statCode}] is not decreasable\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e12275\u003c/td\u003e\u003ctd\u003e[{action}] value: [{value}] of stat [{statCode}] is out of range while minimum [{minimum}] and maximum [{maximum}] in namespace [{namespace}]\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "\u003ctable\u003e\u003ctr\u003e\u003ctd\u003eerrorCode\u003c/td\u003e\u003ctd\u003eerrorMessage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e20002\u003c/td\u003e\u003ctd\u003evalidation error\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:USER:{userId}:STATITEM [UPDATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Public update user's statitem value",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "4",
          "resource": "NAMESPACE:{namespace}:USER:{userId}:STATITEM"
        }
      }
    }
  },
  "definitions": {
    "A DTO object for resetting user stat items": {
      "properties": {
        "additionalData": {
          "additionalProperties": {
            "type": "object"
          },
          "description": "additional data to be published in event payload",
          "type": "object"
        },
        "statCode": {
          "description": "stat code",
          "type": "string"
        }
      },
      "required": [
        "statCode"
      ],
      "type": "object"
    },
    "A DTO object for user stat item value": {
      "properties": {
        "profileId": {
          "description": "profile id",
          "type": "string"
        },
        "statCode": {
          "description": "stat code",
          "type": "string"
        },
        "value": {
          "description": "current value",
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "Attribute": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BulkCycleStatsAdd": {
      "properties": {
        "statCodes": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "statCodes"
      ],
      "type": "object"
    },
    "BulkStatCycleRequest": {
      "properties": {
        "cycleIds": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        }
      },
      "required": [
        "cycleIds"
      ],
      "type": "object"
    },
    "BulkStatCycleResult": {
      "properties": {
        "data": {
          "items": {
            "$ref": "#/definitions/StatCycleInfo"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "BulkStatItemCreate": {
      "properties": {
        "statCode": {
          "type": "string"
        }
      },
      "required": [
        "statCode"
      ],
      "type": "object"
    },
    "BulkStatItemInc": {
      "properties": {
        "inc": {
          "format": "double",
          "type": "number"
        },
        "statCode": {
          "type": "string"
        }
      },
      "required": [
        "statCode"
      ],
      "type": "object"
    },
    "BulkStatItemReset": {
      "properties": {
        "statCode": {
          "type": "string"
        }
      },
      "required": [
        "statCode"
      ],
      "type": "object"
    },
    "BulkStatItemUpdate": {
      "properties": {
        "additionalData": {
          "additionalProperties": {
            "type": "object"
          },
          "description": "Additional data to be published in event payload",
          "type": "object"
        },
        "statCode": {
          "type": "string"
        },
        "updateStrategy": {
          "enum": [
            "INCREMENT",
            "MAX",
            "MIN",
            "OVERRIDE"
          ],
          "type": "string"
        },
        "value": {
          "format": "double",
          "type": "number"
        }
      },
      "required": [
        "statCode",
        "updateStrategy",
        "value"
      ],
      "type": "object"
    },
    "BulkStatOperationResult": {
      "properties": {
        "details": {
          "type": "object"
        },
        "statCode": {
          "type": "string"
        },
        "success": {
          "type": "boolean",
          "x-omitempty": false
        }
      },
      "type": "object"
    },
    "BulkUserStatItemInc": {
      "properties": {
        "inc": {
          "format": "double",
          "type": "number"
        },
        "statCode": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        }
      },
      "required": [
        "statCode",
        "userId"
      ],
      "type": "object"
    },
    "BulkUserStatItemReset": {
      "properties": {
        "statCode": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        }
      },
      "required": [
        "statCode",
        "userId"
      ],
      "type": "object"
    },
    "BulkUserStatItemUpdate": {
      "properties": {
        "additionalData": {
          "additionalProperties": {
            "type": "object"
          },
          "description": "Additional data to be published in event payload",
          "type": "object"
        },
        "additionalKey": {
          "description": "Additional key to identify multi level user's statitems, e.g. character's statitems",
          "type": "string"
        },
        "statCode": {
          "type": "string"
        },
        "updateStrategy": {
          "enum": [
            "INCREMENT",
            "MAX",
            "MIN",
            "OVERRIDE"
          ],
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "value": {
          "format": "double",
          "type": "number"
        }
      },
      "required": [
        "statCode",
        "updateStrategy",
        "userId",
        "value"
      ],
      "type": "object"
    },
    "ErrorEntity": {
      "properties": {
        "devStackTrace": {
          "description": "internal server error stack trace in configured environment",
          "type": "string"
        },
        "errorCode": {
          "description": "numeric error code",
          "format": "int32",
          "type": "integer"
        },
        "errorMessage": {
          "description": "error message",
          "type": "string"
        },
        "messageVariables": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "message variables",
          "type": "object"
        }
      },
      "required": [
        "errorCode",
        "errorMessage"
      ],
      "type": "object"
    },
    "FieldValidationError": {
      "properties": {
        "errorCode": {
          "type": "string"
        },
        "errorField": {
          "type": "string"
        },
        "errorMessage": {
          "type": "string"
        },
        "errorValue": {
          "type": "string"
        },
        "messageVariables": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "GameProfileHeader": {
      "properties": {
        "avatarUrl": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "profileId": {
          "type": "string"
        },
        "profileName": {
          "type": "string"
        },
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "userId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "GameProfileInfo": {
      "properties": {
        "achievements": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "attributes": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "avatarUrl": {
          "type": "string"
        },
        "inventories": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "label": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "profileId": {
          "type": "string"
        },
        "profileName": {
          "type": "string"
        },
        "statistics": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "userId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "GameProfilePublicInfo": {
      "properties": {
        "avatarUrl": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "profileId": {
          "type": "string"
        },
        "profileName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "GameProfileRequest": {
      "properties": {
        "achievements": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "attributes": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "avatarUrl": {
          "type": "string"
        },
        "inventories": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "label": {
          "type": "string"
        },
        "profileName": {
          "type": "string"
        },
        "statistics": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "GlobalStatItemInfo": {
      "properties": {
        "createdAt": {
          "format": "date-time",
          "type": "string",
          "x-nullable": false
        },
        "namespace": {
          "type": "string"
        },
        "statCode": {
          "type": "string"
        },
        "statName": {
          "type": "string"
        },
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string",
          "x-nullable": false
        },
        "value": {
          "format": "double",
          "type": "number"
        }
      },
      "required": [
        "createdAt",
        "namespace",
        "statCode",
        "statName",
        "updatedAt",
        "value"
      ],
      "type": "object"
    },
    "GlobalStatItemPagingSlicedResult": {
      "properties": {
        "data": {
          "items": {
            "$ref": "#/definitions/GlobalStatItemInfo"
          },
          "type": "array"
        },
        "paging": {
          "$ref": "#/definitions/Paging"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "NamespaceSlotConfigInfo": {
      "properties": {
        "maxSlotSize": {
          "format": "int32",
          "type": "integer"
        },
        "maxSlots": {
          "format": "int32",
          "type": "integer"
        },
        "namespace": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Paging": {
      "properties": {
        "next": {
          "type": "string"
        },
        "previous": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "SlotConfigUpdate": {
      "properties": {
        "maxSlotSize": {
          "format": "int32",
          "type": "integer"
        },
        "maxSlots": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "SlotInfo": {
      "properties": {
        "checksum": {
          "description": "base64 encoded md5",
          "type": "string"
        },
        "customAttribute": {
          "type": "string"
        },
        "dateAccessed": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "dateCreated": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "dateModified": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "label": {
          "type": "string"
        },
        "mimeType": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "originalName": {
          "type": "string"
        },
        "size": {
          "format": "int64",
          "type": "integer"
        },
        "slotId": {
          "type": "string"
        },
        "storedName": {
          "type": "string"
        },
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "userId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "SlotMetadataUpdate": {
      "properties": {
        "customAttribute": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "StatCreate": {
      "properties": {
        "cycleIds": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        },
        "defaultValue": {
          "format": "double",
          "type": "number"
        },
        "description": {
          "type": "string"
        },
        "ignoreAdditionalDataOnValueRejected": {
          "type": "boolean",
          "x-omitempty": false
        },
        "incrementOnly": {
          "type": "boolean",
          "x-omitempty": false
        },
        "isPublic": {
          "type": "boolean",
          "x-omitempty": false
        },
        "maximum": {
          "description": "default value is 1.7976931348623157e+308",
          "format": "double",
          "type": "number"
        },
        "minimum": {
          "description": "default value is 0.0",
          "format": "double",
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "setAsGlobal": {
          "type": "boolean",
          "x-omitempty": false
        },
        "setBy": {
          "enum": [
            "CLIENT",
            "SERVER"
          ],
          "type": "string"
        },
        "statCode": {
          "type": "string"
        },
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        }
      },
      "required": [
        "defaultValue",
        "name",
        "setBy",
        "statCode"
      ],
      "type": "object"
    },
    "StatCycleCreate": {
      "properties": {
        "cycleType": {
          "description": "Cycle Type",
          "enum": [
            "ANNUALLY",
            "DAILY",
            "MONTHLY",
            "SEASONAL",
            "WEEKLY"
          ],
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "end": {
          "description": "end date time",
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "name": {
          "type": "string"
        },
        "resetDate": {
          "description": "reset date",
          "format": "int32",
          "type": "integer"
        },
        "resetDay": {
          "description": "reset day of week",
          "format": "int32",
          "type": "integer"
        },
        "resetMonth": {
          "description": "reset month",
          "format": "int32",
          "type": "integer"
        },
        "resetTime": {
          "type": "string"
        },
        "seasonPeriod": {
          "description": "season period",
          "format": "int32",
          "type": "integer"
        },
        "start": {
          "description": "start date time",
          "format": "date-time",
          "type": "string",
          "x-nullable": false
        }
      },
      "required": [
        "cycleType",
        "name",
        "resetTime",
        "start"
      ],
      "type": "object"
    },
    "StatCycleInfo": {
      "properties": {
        "createdAt": {
          "format": "date-time",
          "type": "string",
          "x-nullable": false
        },
        "currentVersion": {
          "format": "int32",
          "type": "integer"
        },
        "cycleType": {
          "enum": [
            "ANNUALLY",
            "DAILY",
            "MONTHLY",
            "SEASONAL",
            "WEEKLY"
          ],
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "end": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "nextReset": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "resetDate": {
          "format": "int32",
          "type": "integer"
        },
        "resetDay": {
          "format": "int32",
          "type": "integer"
        },
        "resetMonth": {
          "format": "int32",
          "type": "integer"
        },
        "resetTime": {
          "type": "string"
        },
        "seasonPeriod": {
          "format": "int32",
          "type": "integer"
        },
        "start": {
          "format": "date-time",
          "type": "string",
          "x-nullable": false
        },
        "status": {
          "enum": [
            "ACTIVE",
            "INIT",
            "STOPPED"
          ],
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string",
          "x-nullable": false
        }
      },
      "required": [
        "createdAt",
        "currentVersion",
        "cycleType",
        "id",
        "name",
        "namespace",
        "resetTime",
        "start",
        "status",
        "updatedAt"
      ],
      "type": "object"
    },
    "StatCyclePagingSlicedResult": {
      "properties": {
        "data": {
          "items": {
            "$ref": "#/definitions/StatCycleInfo"
          },
          "type": "array"
        },
        "paging": {
          "$ref": "#/definitions/Paging"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "StatCycleUpdate": {
      "properties": {
        "cycleType": {
          "description": "Cycle Type",
          "enum": [
            "ANNUALLY",
            "DAILY",
            "MONTHLY",
            "SEASONAL",
            "WEEKLY"
          ],
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "end": {
          "description": "end date time",
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "name": {
          "type": "string"
        },
        "resetDate": {
          "description": "reset date",
          "format": "int32",
          "type": "integer"
        },
        "resetDay": {
          "description": "reset day of week",
          "format": "int32",
          "type": "integer"
        },
        "resetMonth": {
          "description": "reset month",
          "format": "int32",
          "type": "integer"
        },
        "resetTime": {
          "type": "string"
        },
        "seasonPeriod": {
          "description": "season period",
          "format": "int32",
          "type": "integer"
        },
        "start": {
          "description": "start date time",
          "format": "date-time",
          "type": "string",
          "x-nullable": false
        }
      },
      "required": [
        "cycleType",
        "name",
        "resetTime",
        "start"
      ],
      "type": "object"
    },
    "StatImportInfo": {
      "properties": {
        "failedConfigs": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "ignoredConfigs": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "newConfigs": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "replacedConfigs": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "failedConfigs",
        "ignoredConfigs",
        "newConfigs",
        "replacedConfigs"
      ],
      "type": "object"
    },
    "StatInfo": {
      "properties": {
        "createdAt": {
          "format": "date-time",
          "type": "string",
          "x-nullable": false
        },
        "cycleIds": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        },
        "defaultValue": {
          "format": "double",
          "type": "number"
        },
        "description": {
          "type": "string"
        },
        "ignoreAdditionalDataOnValueRejected": {
          "type": "boolean",
          "x-omitempty": false
        },
        "incrementOnly": {
          "type": "boolean",
          "x-omitempty": false
        },
        "isPublic": {
          "type": "boolean",
          "x-omitempty": false
        },
        "maximum": {
          "format": "double",
          "type": "number"
        },
        "minimum": {
          "format": "double",
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "setAsGlobal": {
          "type": "boolean",
          "x-omitempty": false
        },
        "setBy": {
          "enum": [
            "CLIENT",
            "SERVER"
          ],
          "type": "string"
        },
        "statCode": {
          "type": "string"
        },
        "status": {
          "enum": [
            "INIT",
            "TIED"
          ],
          "type": "string"
        },
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string",
          "x-nullable": false
        }
      },
      "required": [
        "createdAt",
        "defaultValue",
        "ignoreAdditionalDataOnValueRejected",
        "incrementOnly",
        "isPublic",
        "name",
        "namespace",
        "setAsGlobal",
        "setBy",
        "statCode",
        "status",
        "updatedAt"
      ],
      "type": "object"
    },
    "StatItemInc": {
      "properties": {
        "inc": {
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "StatItemIncResult": {
      "properties": {
        "currentValue": {
          "format": "double",
          "type": "number"
        }
      },
      "required": [
        "currentValue"
      ],
      "type": "object"
    },
    "StatItemUpdate": {
      "properties": {
        "additionalData": {
          "additionalProperties": {
            "type": "object"
          },
          "description": "Additional data to be published in event payload",
          "type": "object"
        },
        "updateStrategy": {
          "enum": [
            "INCREMENT",
            "MAX",
            "MIN",
            "OVERRIDE"
          ],
          "type": "string"
        },
        "value": {
          "format": "double",
          "type": "number"
        }
      },
      "required": [
        "updateStrategy",
        "value"
      ],
      "type": "object"
    },
    "StatPagingSlicedResult": {
      "properties": {
        "data": {
          "items": {
            "$ref": "#/definitions/StatInfo"
          },
          "type": "array"
        },
        "paging": {
          "$ref": "#/definitions/Paging"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "StatResetInfo": {
      "properties": {
        "additionalData": {
          "additionalProperties": {
            "type": "object"
          },
          "description": "Additional data to be published in event payload",
          "type": "object"
        }
      },
      "type": "object"
    },
    "StatUpdate": {
      "properties": {
        "cycleIds": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        },
        "defaultValue": {
          "format": "double",
          "type": "number"
        },
        "description": {
          "type": "string"
        },
        "ignoreAdditionalDataOnValueRejected": {
          "type": "boolean",
          "x-omitempty": false
        },
        "isPublic": {
          "type": "boolean",
          "x-omitempty": false
        },
        "name": {
          "type": "string"
        },
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        }
      },
      "type": "object"
    },
    "UserGameProfiles": {
      "properties": {
        "gameProfiles": {
          "items": {
            "$ref": "#/definitions/GameProfilePublicInfo"
          },
          "type": "array"
        },
        "userId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "UserSlotConfigInfo": {
      "properties": {
        "maxSlotSize": {
          "format": "int32",
          "type": "integer"
        },
        "maxSlots": {
          "format": "int32",
          "type": "integer"
        },
        "namespace": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "UserStatCycleItemInfo": {
      "properties": {
        "additionalData": {
          "additionalProperties": {
            "type": "object"
          },
          "type": "object"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string",
          "x-nullable": false
        },
        "cycleId": {
          "type": "string"
        },
        "cycleName": {
          "type": "string"
        },
        "cycleVersion": {
          "format": "int32",
          "type": "integer"
        },
        "namespace": {
          "type": "string"
        },
        "statCode": {
          "type": "string"
        },
        "statName": {
          "type": "string"
        },
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string",
          "x-nullable": false
        },
        "userId": {
          "type": "string"
        },
        "value": {
          "format": "double",
          "type": "number"
        }
      },
      "required": [
        "createdAt",
        "cycleId",
        "cycleName",
        "cycleVersion",
        "namespace",
        "statCode",
        "statName",
        "updatedAt",
        "userId",
        "value"
      ],
      "type": "object"
    },
    "UserStatCycleItemPagingSlicedResult": {
      "properties": {
        "data": {
          "items": {
            "$ref": "#/definitions/UserStatCycleItemInfo"
          },
          "type": "array"
        },
        "paging": {
          "$ref": "#/definitions/Paging"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "UserStatItemInfo": {
      "properties": {
        "additionalData": {
          "additionalProperties": {
            "type": "object"
          },
          "type": "object"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string",
          "x-nullable": false
        },
        "namespace": {
          "type": "string"
        },
        "statCode": {
          "type": "string"
        },
        "statName": {
          "type": "string"
        },
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string",
          "x-nullable": false
        },
        "userId": {
          "type": "string"
        },
        "value": {
          "format": "double",
          "type": "number"
        }
      },
      "required": [
        "createdAt",
        "namespace",
        "statCode",
        "statName",
        "updatedAt",
        "userId",
        "value"
      ],
      "type": "object"
    },
    "UserStatItemPagingSlicedResult": {
      "properties": {
        "data": {
          "items": {
            "$ref": "#/definitions/UserStatItemInfo"
          },
          "type": "array"
        },
        "paging": {
          "$ref": "#/definitions/Paging"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "ValidationErrorEntity": {
      "properties": {
        "errorCode": {
          "description": "numeric error code",
          "format": "int32",
          "type": "integer"
        },
        "errorMessage": {
          "description": "error message",
          "type": "string"
        },
        "errors": {
          "items": {
            "$ref": "#/definitions/FieldValidationError"
          },
          "type": "array"
        }
      },
      "required": [
        "errorCode",
        "errorMessage"
      ],
      "type": "object"
    }
  },
  "x-docs": {
    "alias": "social",
    "host": "https://stage.accelbyte.io",
    "path": "/social/swagger.json"
  },
  "x-version": {
    "buildBy": "Gradle 6.9.1",
    "buildDate": "2023-08-01T01:39:30+00:00",
    "buildID": "2.9.2",
    "buildJDK": "1.8.0_232 (Eclipse OpenJ9 openj9-0.17.0)",
    "buildOS": "Linux amd64 5.13.0-1021-aws",
    "gitBranchName": "release-candidate",
    "gitHash": "44b96facc8",
    "gitTag": "2.9.0",
    "name": "justice-social-service",
    "realm": "staging",
    "version": "2.9.2",
    "version-roles-seeding": "0.0.12"
  }
}
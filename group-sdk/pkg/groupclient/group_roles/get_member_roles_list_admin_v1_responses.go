// Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// Code generated by go-swagger; DO NOT EDIT.

package group_roles

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"
	"io/ioutil"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/AccelByte/accelbyte-go-sdk/group-sdk/pkg/groupclientmodels"
)

// GetMemberRolesListAdminV1Reader is a Reader for the GetMemberRolesListAdminV1 structure.
type GetMemberRolesListAdminV1Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetMemberRolesListAdminV1Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetMemberRolesListAdminV1OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetMemberRolesListAdminV1BadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetMemberRolesListAdminV1Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGetMemberRolesListAdminV1Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewGetMemberRolesListAdminV1InternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		data, err := ioutil.ReadAll(response.Body())
		if err != nil {
			return nil, err
		}

		return nil, fmt.Errorf("Requested GET /group/v1/admin/namespaces/{namespace}/roles returns an error %d: %s", response.Code(), string(data))
	}
}

// NewGetMemberRolesListAdminV1OK creates a GetMemberRolesListAdminV1OK with default headers values
func NewGetMemberRolesListAdminV1OK() *GetMemberRolesListAdminV1OK {
	return &GetMemberRolesListAdminV1OK{}
}

/*GetMemberRolesListAdminV1OK handles this case with default header values.

  OK
*/
type GetMemberRolesListAdminV1OK struct {
	Payload *groupclientmodels.ModelsGetMemberRolesListResponseV1
}

func (o *GetMemberRolesListAdminV1OK) Error() string {
	return fmt.Sprintf("[GET /group/v1/admin/namespaces/{namespace}/roles][%d] getMemberRolesListAdminV1OK  %+v", 200, o.ToString())
}

func (o *GetMemberRolesListAdminV1OK) ToString() string {
	b, err := json.Marshal(o.Payload)
	if err != nil {
		fmt.Println(err)
	}

	return fmt.Sprintf("%+v", string(b))
}

func (o *GetMemberRolesListAdminV1OK) GetPayload() *groupclientmodels.ModelsGetMemberRolesListResponseV1 {
	return o.Payload
}

func (o *GetMemberRolesListAdminV1OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(groupclientmodels.ModelsGetMemberRolesListResponseV1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMemberRolesListAdminV1BadRequest creates a GetMemberRolesListAdminV1BadRequest with default headers values
func NewGetMemberRolesListAdminV1BadRequest() *GetMemberRolesListAdminV1BadRequest {
	return &GetMemberRolesListAdminV1BadRequest{}
}

/*GetMemberRolesListAdminV1BadRequest handles this case with default header values.

  <table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>
*/
type GetMemberRolesListAdminV1BadRequest struct {
	Payload *groupclientmodels.ResponseErrorResponse
}

func (o *GetMemberRolesListAdminV1BadRequest) Error() string {
	return fmt.Sprintf("[GET /group/v1/admin/namespaces/{namespace}/roles][%d] getMemberRolesListAdminV1BadRequest  %+v", 400, o.ToString())
}

func (o *GetMemberRolesListAdminV1BadRequest) ToString() string {
	b, err := json.Marshal(o.Payload)
	if err != nil {
		fmt.Println(err)
	}

	return fmt.Sprintf("%+v", string(b))
}

func (o *GetMemberRolesListAdminV1BadRequest) GetPayload() *groupclientmodels.ResponseErrorResponse {
	return o.Payload
}

func (o *GetMemberRolesListAdminV1BadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(groupclientmodels.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMemberRolesListAdminV1Unauthorized creates a GetMemberRolesListAdminV1Unauthorized with default headers values
func NewGetMemberRolesListAdminV1Unauthorized() *GetMemberRolesListAdminV1Unauthorized {
	return &GetMemberRolesListAdminV1Unauthorized{}
}

/*GetMemberRolesListAdminV1Unauthorized handles this case with default header values.

  <table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>20001</td><td>unauthorized access</td></tr></table>
*/
type GetMemberRolesListAdminV1Unauthorized struct {
	Payload *groupclientmodels.ResponseErrorResponse
}

func (o *GetMemberRolesListAdminV1Unauthorized) Error() string {
	return fmt.Sprintf("[GET /group/v1/admin/namespaces/{namespace}/roles][%d] getMemberRolesListAdminV1Unauthorized  %+v", 401, o.ToString())
}

func (o *GetMemberRolesListAdminV1Unauthorized) ToString() string {
	b, err := json.Marshal(o.Payload)
	if err != nil {
		fmt.Println(err)
	}

	return fmt.Sprintf("%+v", string(b))
}

func (o *GetMemberRolesListAdminV1Unauthorized) GetPayload() *groupclientmodels.ResponseErrorResponse {
	return o.Payload
}

func (o *GetMemberRolesListAdminV1Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(groupclientmodels.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMemberRolesListAdminV1Forbidden creates a GetMemberRolesListAdminV1Forbidden with default headers values
func NewGetMemberRolesListAdminV1Forbidden() *GetMemberRolesListAdminV1Forbidden {
	return &GetMemberRolesListAdminV1Forbidden{}
}

/*GetMemberRolesListAdminV1Forbidden handles this case with default header values.

  <table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>20013</td><td>insufficient permissions</td></tr></table>
*/
type GetMemberRolesListAdminV1Forbidden struct {
	Payload *groupclientmodels.ResponseErrorResponse
}

func (o *GetMemberRolesListAdminV1Forbidden) Error() string {
	return fmt.Sprintf("[GET /group/v1/admin/namespaces/{namespace}/roles][%d] getMemberRolesListAdminV1Forbidden  %+v", 403, o.ToString())
}

func (o *GetMemberRolesListAdminV1Forbidden) ToString() string {
	b, err := json.Marshal(o.Payload)
	if err != nil {
		fmt.Println(err)
	}

	return fmt.Sprintf("%+v", string(b))
}

func (o *GetMemberRolesListAdminV1Forbidden) GetPayload() *groupclientmodels.ResponseErrorResponse {
	return o.Payload
}

func (o *GetMemberRolesListAdminV1Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(groupclientmodels.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMemberRolesListAdminV1InternalServerError creates a GetMemberRolesListAdminV1InternalServerError with default headers values
func NewGetMemberRolesListAdminV1InternalServerError() *GetMemberRolesListAdminV1InternalServerError {
	return &GetMemberRolesListAdminV1InternalServerError{}
}

/*GetMemberRolesListAdminV1InternalServerError handles this case with default header values.

  Internal Server Error
*/
type GetMemberRolesListAdminV1InternalServerError struct {
	Payload *groupclientmodels.ResponseErrorResponse
}

func (o *GetMemberRolesListAdminV1InternalServerError) Error() string {
	return fmt.Sprintf("[GET /group/v1/admin/namespaces/{namespace}/roles][%d] getMemberRolesListAdminV1InternalServerError  %+v", 500, o.ToString())
}

func (o *GetMemberRolesListAdminV1InternalServerError) ToString() string {
	b, err := json.Marshal(o.Payload)
	if err != nil {
		fmt.Println(err)
	}

	return fmt.Sprintf("%+v", string(b))
}

func (o *GetMemberRolesListAdminV1InternalServerError) GetPayload() *groupclientmodels.ResponseErrorResponse {
	return o.Payload
}

func (o *GetMemberRolesListAdminV1InternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(groupclientmodels.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

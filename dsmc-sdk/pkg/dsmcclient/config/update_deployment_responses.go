// Code generated by go-swagger; DO NOT EDIT.

package config

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/AccelByte/accelbyte-go-sdk/dsmc-sdk/pkg/dsmcclientmodels"
)

// UpdateDeploymentReader is a Reader for the UpdateDeployment structure.
type UpdateDeploymentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateDeploymentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewUpdateDeploymentNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateDeploymentBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateDeploymentUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateDeploymentNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateDeploymentInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateDeploymentNoContent creates a UpdateDeploymentNoContent with default headers values
func NewUpdateDeploymentNoContent() *UpdateDeploymentNoContent {
	return &UpdateDeploymentNoContent{}
}

/*UpdateDeploymentNoContent handles this case with default header values.

deployment updated
*/
type UpdateDeploymentNoContent struct {
}

func (o *UpdateDeploymentNoContent) Error() string {
	return fmt.Sprintf("[PATCH /dsmcontroller/admin/namespaces/{namespace}/configs/deployments/{deployment}][%d] updateDeploymentNoContent ", 204)
}

func (o *UpdateDeploymentNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateDeploymentBadRequest creates a UpdateDeploymentBadRequest with default headers values
func NewUpdateDeploymentBadRequest() *UpdateDeploymentBadRequest {
	return &UpdateDeploymentBadRequest{}
}

/*UpdateDeploymentBadRequest handles this case with default header values.

malformed request
*/
type UpdateDeploymentBadRequest struct {
	Payload *dsmcclientmodels.ResponseError
}

func (o *UpdateDeploymentBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /dsmcontroller/admin/namespaces/{namespace}/configs/deployments/{deployment}][%d] updateDeploymentBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateDeploymentBadRequest) GetPayload() *dsmcclientmodels.ResponseError {
	return o.Payload
}

func (o *UpdateDeploymentBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(dsmcclientmodels.ResponseError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateDeploymentUnauthorized creates a UpdateDeploymentUnauthorized with default headers values
func NewUpdateDeploymentUnauthorized() *UpdateDeploymentUnauthorized {
	return &UpdateDeploymentUnauthorized{}
}

/*UpdateDeploymentUnauthorized handles this case with default header values.

Unauthorized
*/
type UpdateDeploymentUnauthorized struct {
	Payload *dsmcclientmodels.ResponseError
}

func (o *UpdateDeploymentUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /dsmcontroller/admin/namespaces/{namespace}/configs/deployments/{deployment}][%d] updateDeploymentUnauthorized  %+v", 401, o.Payload)
}

func (o *UpdateDeploymentUnauthorized) GetPayload() *dsmcclientmodels.ResponseError {
	return o.Payload
}

func (o *UpdateDeploymentUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(dsmcclientmodels.ResponseError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateDeploymentNotFound creates a UpdateDeploymentNotFound with default headers values
func NewUpdateDeploymentNotFound() *UpdateDeploymentNotFound {
	return &UpdateDeploymentNotFound{}
}

/*UpdateDeploymentNotFound handles this case with default header values.

config not found
*/
type UpdateDeploymentNotFound struct {
	Payload *dsmcclientmodels.ResponseError
}

func (o *UpdateDeploymentNotFound) Error() string {
	return fmt.Sprintf("[PATCH /dsmcontroller/admin/namespaces/{namespace}/configs/deployments/{deployment}][%d] updateDeploymentNotFound  %+v", 404, o.Payload)
}

func (o *UpdateDeploymentNotFound) GetPayload() *dsmcclientmodels.ResponseError {
	return o.Payload
}

func (o *UpdateDeploymentNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(dsmcclientmodels.ResponseError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateDeploymentInternalServerError creates a UpdateDeploymentInternalServerError with default headers values
func NewUpdateDeploymentInternalServerError() *UpdateDeploymentInternalServerError {
	return &UpdateDeploymentInternalServerError{}
}

/*UpdateDeploymentInternalServerError handles this case with default header values.

Internal Server Error
*/
type UpdateDeploymentInternalServerError struct {
	Payload *dsmcclientmodels.ResponseError
}

func (o *UpdateDeploymentInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /dsmcontroller/admin/namespaces/{namespace}/configs/deployments/{deployment}][%d] updateDeploymentInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateDeploymentInternalServerError) GetPayload() *dsmcclientmodels.ResponseError {
	return o.Payload
}

func (o *UpdateDeploymentInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(dsmcclientmodels.ResponseError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

[
  {
    "op": "add",
    "path": "/host",
    "value": "demo.accelbyte.io"
  },
  {
    "op": "add",
    "path": "/schemes",
    "value": [
      "https"
    ]
  },
  {
    "op": "add",
    "path": "/securityDefinitions/HasPermission",
    "value": {
      "authorizationUrl": "https://dummy.oauth.net/auth",
      "flow": "accessCode",
      "scopes": {
        "ADMIN:NAMESPACE:{namespace}:LEADERBOARD [CREATE]": "ADMIN:NAMESPACE:{namespace}:LEADERBOARD [CREATE]",
        "ADMIN:NAMESPACE:{namespace}:LEADERBOARD [DELETE]": "ADMIN:NAMESPACE:{namespace}:LEADERBOARD [DELETE]",
        "ADMIN:NAMESPACE:{namespace}:LEADERBOARD [READ]": "ADMIN:NAMESPACE:{namespace}:LEADERBOARD [READ]",
        "ADMIN:NAMESPACE:{namespace}:LEADERBOARD [UPDATE]": "ADMIN:NAMESPACE:{namespace}:LEADERBOARD [UPDATE]",
        "ADMIN:NAMESPACE:{namespace}:LEADERBOARD:USER [DELETE]": "ADMIN:NAMESPACE:{namespace}:LEADERBOARD:USER [DELETE]",
        "NAMESPACE:{namespace}:LEADERBOARD [CREATE]": "NAMESPACE:{namespace}:LEADERBOARD [CREATE]",
        "NAMESPACE:{namespace}:LEADERBOARD:USER:{userId} [DELETE]": "NAMESPACE:{namespace}:LEADERBOARD:USER:{userId} [DELETE]"
      },
      "tokenUrl": "https://dumy.oauth.net/token",
      "type": "oauth2"
    }
  },
  {
    "op": "add",
    "path": "/securityDefinitions/HasScope",
    "value": {
      "authorizationUrl": "https://dummy.oauth.net/auth",
      "flow": "accessCode",
      "scopes": {},
      "tokenUrl": "https://dumy.oauth.net/token",
      "type": "oauth2"
    }
  },
  {
    "op": "move",
    "from": "/security",
    "path": "/paths/~1leaderboard~1v1~1public~1namespaces~1{namespace}~1leaderboards~1{leaderboardCode}~1month/get/security"
  },
  {
    "op": "replace",
    "path": "/paths/~1leaderboard~1v1~1public~1namespaces~1{namespace}~1leaderboards~1{leaderboardCode}~1month/get/description",
    "value": "&lt;p&gt;Get rankings in current month leaderboard.&lt;/p&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1leaderboard~1v1~1admin~1namespaces~1{namespace}~1leaderboards~1archived/post/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:LEADERBOARD [CREATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1leaderboard~1v1~1admin~1namespaces~1{namespace}~1leaderboards~1archived/post/description",
    "value": "&lt;p&gt;Required permission &#39;ADMIN:NAMESPACE:{namespace}:LEADERBOARD [CREATE]&#39;&lt;/p&gt;\n\t\t\t&lt;p&gt;Archive leaderboard ranking data for specified leaderboard codes. NOTE: This will remove all data of the leaderboard on every slug,\n\t\t\tremove the leaderboard code on stat mapping, and remove the leaderboard on the queue reset. This will be a bulk endpoint&lt;/p&gt;\n\t\t\t"
  },
  {
    "op": "add",
    "path": "/paths/~1leaderboard~1v1~1admin~1namespaces~1{namespace}~1leaderboards~1archived/get/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1leaderboard~1v1~1admin~1namespaces~1{namespace}~1leaderboards~1archived/get/description",
    "value": "&lt;p&gt;Admin Get signed url in an all time leaderboard that archived. Notes: This will be a bulk endpoint to get sign url&lt;/p&gt;\n\t\t\t"
  },
  {
    "op": "add",
    "path": "/paths/~1leaderboard~1v1~1public~1namespaces~1{namespace}~1leaderboards~1{leaderboardCode}~1alltime/get/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1leaderboard~1v1~1public~1namespaces~1{namespace}~1leaderboards~1{leaderboardCode}~1alltime/get/description",
    "value": "\t&lt;p&gt;Get rankings in an all time leaderboard.&lt;/p&gt;\n\t\t\t"
  },
  {
    "op": "add",
    "path": "/paths/~1leaderboard~1v2~1admin~1namespaces~1{namespace}~1users~1{userId}~1visibility/put/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1leaderboard~1v2~1admin~1namespaces~1{namespace}~1users~1{userId}~1visibility/put/description",
    "value": "User with false visibility status will have &lt;b&gt;hidden&lt;/b&gt; attribute  set to true on it&#39;s leaderboard entry"
  },
  {
    "op": "add",
    "path": "/paths/~1leaderboard~1v1~1admin~1namespaces~1{namespace}~1leaderboards~1{leaderboardCode}~1month/get/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:LEADERBOARD [READ]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1leaderboard~1v1~1admin~1namespaces~1{namespace}~1leaderboards~1{leaderboardCode}~1month/get/description",
    "value": "&lt;p&gt;Required permission &#39;ADMIN:NAMESPACE:{namespace}:LEADERBOARD [READ]&#39;&lt;/p&gt;\n\t\t\t&lt;p&gt;Get rankings in current month leaderboard.&lt;/p&gt;\n\t\t\t"
  },
  {
    "op": "add",
    "path": "/paths/~1leaderboard~1v1~1admin~1namespaces~1{namespace}~1leaderboards~1{leaderboardCode}~1season/get/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:LEADERBOARD [READ]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1leaderboard~1v1~1admin~1namespaces~1{namespace}~1leaderboards~1{leaderboardCode}~1season/get/description",
    "value": "&lt;p&gt;Required permission &#39;ADMIN:NAMESPACE:{namespace}:LEADERBOARD [READ]&#39;&lt;/p&gt;\n\t\t\t&lt;p&gt;Get rankings in current season leaderboard.&lt;/p&gt;\n\t\t\t"
  },
  {
    "op": "add",
    "path": "/paths/~1leaderboard~1v1~1public~1namespaces~1{namespace}~1leaderboards~1{leaderboardCode}~1today/get/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1leaderboard~1v1~1public~1namespaces~1{namespace}~1leaderboards~1{leaderboardCode}~1today/get/description",
    "value": "&lt;p&gt;Get rankings in today leaderboard.&lt;/p&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1leaderboard~1v1~1public~1namespaces~1{namespace}~1leaderboards~1{leaderboardCode}~1archived/get/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1leaderboard~1v1~1public~1namespaces~1{namespace}~1leaderboards~1{leaderboardCode}~1archived/get/description",
    "value": "\t&lt;p&gt;Get signed url in an all time leaderboard that archived. NOTE: This will be a bulk endpoint to get sign url&lt;/p&gt;\n\t\t\t"
  },
  {
    "op": "add",
    "path": "/paths/~1leaderboard~1v1~1admin~1namespaces~1{namespace}~1leaderboards~1delete/post/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:LEADERBOARD [DELETE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1leaderboard~1v1~1admin~1namespaces~1{namespace}~1leaderboards~1delete/post/description",
    "value": "&lt;p&gt;Required permission &#39;ADMIN:NAMESPACE:{namespace}:LEADERBOARD [DELETE]&#39;&lt;/p&gt;\n\t\t\t&lt;p&gt;This endpoint delete multiple leaderboards configuration in one request&lt;/p&gt;\t\n\t\t"
  },
  {
    "op": "add",
    "path": "/paths/~1leaderboard~1v1~1admin~1namespaces~1{namespace}~1users~1{userId}~1leaderboards/get/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:LEADERBOARD [READ]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1leaderboard~1v1~1admin~1namespaces~1{namespace}~1users~1{userId}~1leaderboards/get/description",
    "value": "&lt;p&gt;Required permission &#39;ADMIN:NAMESPACE:{namespace}:LEADERBOARD [READ]&#39;&lt;/p&gt;\n\t\t\t&lt;p&gt;Get user leaderboard rankings&lt;/p&gt;\n\t\t\t"
  },
  {
    "op": "add",
    "path": "/paths/~1leaderboard~1v1~1admin~1namespaces~1{namespace}~1leaderboards~1{leaderboardCode}~1week/get/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:LEADERBOARD [READ]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1leaderboard~1v1~1admin~1namespaces~1{namespace}~1leaderboards~1{leaderboardCode}~1week/get/description",
    "value": "&lt;p&gt;Required permission &#39;ADMIN:NAMESPACE:{namespace}:LEADERBOARD [READ]&#39;&lt;/p&gt;\n\t\t\t&lt;p&gt;Get rankings in current week leaderboard.&lt;/p&gt;\n\t\t\t"
  },
  {
    "op": "add",
    "path": "/paths/~1leaderboard~1v2~1public~1namespaces~1{namespace}~1leaderboards/get/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "add",
    "path": "/paths/~1leaderboard~1v2~1admin~1namespaces~1{namespace}~1leaderboards~1{leaderboardCode}~1users~1hidden/get/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "add",
    "path": "/paths/~1leaderboard~1v1~1admin~1namespaces~1{namespace}~1leaderboards~1{leaderboardCode}~1alltime/get/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:LEADERBOARD [READ]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1leaderboard~1v1~1admin~1namespaces~1{namespace}~1leaderboards~1{leaderboardCode}~1alltime/get/description",
    "value": "&lt;p&gt;Required permission &#39;ADMIN:NAMESPACE:{namespace}:LEADERBOARD [READ]&#39;&lt;/p&gt;\n\t\t\t&lt;p&gt;Get rankings in an all time leaderboard.&lt;/p&gt;\n\t\t\t"
  },
  {
    "op": "add",
    "path": "/paths/~1leaderboard~1v1~1admin~1namespaces~1{namespace}~1users~1{userId}/delete/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:LEADERBOARD:USER [DELETE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "add",
    "path": "/paths/~1leaderboard~1v1~1public~1namespaces~1{namespace}~1leaderboards~1{leaderboardCode}~1week/get/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1leaderboard~1v1~1public~1namespaces~1{namespace}~1leaderboards~1{leaderboardCode}~1week/get/description",
    "value": "&lt;p&gt;Get rankings in current week leaderboard.&lt;/p&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1leaderboard~1v1~1admin~1namespaces~1{namespace}~1leaderboards~1{leaderboardCode}~1users~1{userId}/delete/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:LEADERBOARD:USER [DELETE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "add",
    "path": "/paths/~1leaderboard~1v1~1admin~1namespaces~1{namespace}~1leaderboards~1{leaderboardCode}~1users~1{userId}/put/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1leaderboard~1v1~1admin~1namespaces~1{namespace}~1leaderboards~1{leaderboardCode}~1users~1{userId}/put/description",
    "value": "&lt;p&gt;Update user point in a leaderboard. This endpoint uses for test utility only.&lt;/p&gt;\n\t\t\t&lt;p&gt;Other detail info:&lt;/p&gt;\n\t\t\t&lt;ul&gt;\n\t\t\t\t&lt;li&gt;Required permission: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:(userId):LEADERBOARD&#34;, action=4 (UPDATE)&lt;/li&gt;\n\t\t\t\t&lt;li&gt;Returns: user ranking&lt;/li&gt;\n\t\t\t&lt;/ul&gt;\n\t\t"
  },
  {
    "op": "add",
    "path": "/paths/~1leaderboard~1v1~1admin~1namespaces~1{namespace}~1leaderboards~1{leaderboardCode}~1users~1{userId}/get/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:LEADERBOARD [READ]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1leaderboard~1v1~1admin~1namespaces~1{namespace}~1leaderboards~1{leaderboardCode}~1users~1{userId}/get/description",
    "value": "&lt;p&gt;Required permission &#39;ADMIN:NAMESPACE:{namespace}:LEADERBOARD [READ]&#39;&lt;/p&gt;\n\t\t\t&lt;p&gt;Get user ranking in leaderboard&lt;/p&gt;\n\t\t\t"
  },
  {
    "op": "add",
    "path": "/paths/~1leaderboard~1v1~1public~1namespaces~1{namespace}~1leaderboards~1{leaderboardCode}~1users~1{userId}/delete/security",
    "value": [
      {
        "HasPermission": [
          "NAMESPACE:{namespace}:LEADERBOARD:USER:{userId} [DELETE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "add",
    "path": "/paths/~1leaderboard~1v1~1public~1namespaces~1{namespace}~1leaderboards~1{leaderboardCode}~1users~1{userId}/get/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1leaderboard~1v1~1public~1namespaces~1{namespace}~1leaderboards~1{leaderboardCode}~1users~1{userId}/get/description",
    "value": "&lt;p&gt;Get user ranking in leaderboard&lt;/p&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1leaderboard~1v1~1admin~1namespaces~1{namespace}~1leaderboards~1{leaderboardCode}~1today/get/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:LEADERBOARD [READ]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1leaderboard~1v1~1admin~1namespaces~1{namespace}~1leaderboards~1{leaderboardCode}~1today/get/description",
    "value": "&lt;p&gt;Required permission &#39;ADMIN:NAMESPACE:{namespace}:LEADERBOARD [READ]&#39;&lt;/p&gt;\n\t\t\t&lt;p&gt;Get rankings in today leaderboard.&lt;/p&gt;\n\t\t\t"
  },
  {
    "op": "add",
    "path": "/paths/~1leaderboard~1v1~1admin~1namespaces~1{namespace}~1leaderboards~1{leaderboardCode}/delete/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:LEADERBOARD [DELETE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1leaderboard~1v1~1admin~1namespaces~1{namespace}~1leaderboards~1{leaderboardCode}/delete/description",
    "value": "&lt;p&gt;Required permission &#39;ADMIN:NAMESPACE:{namespace}:LEADERBOARD [DELETE]&#39;&lt;/p&gt;\n\t\t\t&lt;p&gt;This endpoint delete a leaderboard configuration&lt;/p&gt;\t\n\t\t"
  },
  {
    "op": "add",
    "path": "/paths/~1leaderboard~1v1~1admin~1namespaces~1{namespace}~1leaderboards~1{leaderboardCode}/put/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:LEADERBOARD [UPDATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1leaderboard~1v1~1admin~1namespaces~1{namespace}~1leaderboards~1{leaderboardCode}/put/description",
    "value": "&lt;p&gt;Required permission &#39;ADMIN:NAMESPACE:{namespace}:LEADERBOARD [UPDATE]&#39;&lt;/p&gt;\n\t\t\t&lt;p&gt;&lt;b&gt;Fields :&lt;/b&gt;&lt;/p&gt;\n\t\t\t&lt;ul&gt;\n\t\t\t\t&lt;li&gt;Maximum length for leaderboard name is 128 characters.&lt;/li&gt;\n\t\t\t\t&lt;li&gt;Start time must be follow RFC3339 standard. e.g. 2020-10-02T15:00:00.05Z&lt;/li&gt;\n\t\t\t\t&lt;li&gt;Season period must be greater than 31 days.&lt;/li&gt;\n\t\t\t\t&lt;li&gt;If seasonPeriod is filled, the LeaderboardConfig would have seasonal leaderboard.&lt;/li&gt;\n\t\t\t\t&lt;li&gt;Reset Date must be a number 1 - 31. Default is &#39;1&#39;.&lt;/li&gt;\n\t\t\t\t&lt;li&gt;Reset Day must be a number 0 - 6. 0 = Sunday, 1 = Monday, 2 = Tuesday, 3 = Wednesday, 4 = Thursday, 5 = Friday, 6 = Saturday (day of week). Default is &#39;0&#39;.&lt;/li&gt;\n\t\t\t\t&lt;li&gt;Reset time must be &lt;b&gt;hours:minutes&lt;/b&gt; in 24 hours format e.g. 01:30, 10:30, 15:30, 23:15.&lt;/li&gt;\n\t\t\t&lt;/ul&gt;\n\t\t"
  },
  {
    "op": "add",
    "path": "/paths/~1leaderboard~1v1~1admin~1namespaces~1{namespace}~1leaderboards~1{leaderboardCode}/get/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:LEADERBOARD [READ]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1leaderboard~1v1~1admin~1namespaces~1{namespace}~1leaderboards~1{leaderboardCode}/get/description",
    "value": "&lt;p&gt;Required permission &#39;ADMIN:NAMESPACE:{namespace}:LEADERBOARD [READ]&#39;&lt;/p&gt;\n\t\t\t&lt;p&gt;This endpoint returns a leaderboard configuration&lt;/p&gt;\t\n\t\t"
  },
  {
    "op": "add",
    "path": "/paths/~1leaderboard~1v1~1admin~1namespaces~1{namespace}~1leaderboards/post/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:LEADERBOARD [CREATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1leaderboard~1v1~1admin~1namespaces~1{namespace}~1leaderboards/post/description",
    "value": "&lt;p&gt;Required permission &#39;ADMIN:NAMESPACE:{namespace}:LEADERBOARD [CREATE]&#39;&lt;/p&gt;\n\t\t\t&lt;p&gt;&lt;b&gt;Fields :&lt;/b&gt;&lt;/p&gt;\n\t\t\t&lt;ul&gt;&lt;li&gt;LeaderboardConfig code must be lowercase and maximum length is 48 characters. &lt;b&gt;(required)&lt;/b&gt;.&lt;/li&gt;\n\t\t\t\t&lt;li&gt;Maximum length for leaderboard name is 128 characters. &lt;b&gt;(required)&lt;/b&gt;.&lt;/li&gt;\n\t\t\t\t&lt;li&gt;Start time must be follow RFC3339 standard. e.g. 2020-10-02T15:00:00.05Z&lt;b&gt;(required)&lt;/b&gt;.&lt;/li&gt;\n\t\t\t\t&lt;li&gt;Season period must be greater than 31 days.&lt;/li&gt;\n\t\t\t\t&lt;li&gt;If seasonPeriod is filled, the LeaderboardConfig would have seasonal leaderboard.&lt;/li&gt;\n\t\t\t\t&lt;li&gt;Reset Date must be a number 1 - 31. Default is &#39;1&#39;.&lt;/li&gt;\n\t\t\t\t&lt;li&gt;Reset Day must be a number 0 - 6. 0 = Sunday, 1 = Monday, 2 = Tuesday, 3 = Wednesday, 4 = Thursday, 5 = Friday, 6 = Saturday (day of week). Default is &#39;0&#39;.&lt;/li&gt;\n\t\t\t\t&lt;li&gt;Reset time must be &lt;b&gt;hours:minutes&lt;/b&gt; in 24 hours format e.g. 01:30, 10:30, 15:30, 23:15.Default is &#39;00:00&#39;.&lt;/li&gt;\n\t\t\t\t&lt;li&gt;Stat Code is related with statistic code in statistic service. &lt;b&gt;(required)&lt;/b&gt;.&lt;/li&gt;\n\t\t\t&lt;/ul&gt;\n\t\t"
  },
  {
    "op": "add",
    "path": "/paths/~1leaderboard~1v1~1admin~1namespaces~1{namespace}~1leaderboards/get/security",
    "value": [
      {
        "HasPermission": [
          "ADMIN:NAMESPACE:{namespace}:LEADERBOARD [READ]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1leaderboard~1v1~1admin~1namespaces~1{namespace}~1leaderboards/get/description",
    "value": "&lt;p&gt;Required permission &#39;ADMIN:NAMESPACE:{namespace}:LEADERBOARD [READ]&#39;&lt;/p&gt;\n\t\t\t&lt;p&gt;This endpoint return all leaderboard configurations&lt;/p&gt;\t\n\t\t"
  },
  {
    "op": "add",
    "path": "/paths/~1leaderboard~1v1~1public~1namespaces~1{namespace}~1leaderboards~1{leaderboardCode}~1season/get/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1leaderboard~1v1~1public~1namespaces~1{namespace}~1leaderboards~1{leaderboardCode}~1season/get/description",
    "value": "&lt;p&gt;Get rankings in current season leaderboard.&lt;/p&gt;"
  },
  {
    "op": "add",
    "path": "/paths/~1leaderboard~1v2~1admin~1namespaces~1{namespace}~1leaderboards~1{leaderboardCode}~1users~1{userId}~1visibility/put/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1leaderboard~1v2~1admin~1namespaces~1{namespace}~1leaderboards~1{leaderboardCode}~1users~1{userId}~1visibility/put/description",
    "value": "User with false visibility status will have &lt;b&gt;hidden&lt;/b&gt; attribute  set to true on it&#39;s leaderboard entry"
  },
  {
    "op": "add",
    "path": "/paths/~1leaderboard~1v2~1admin~1namespaces~1{namespace}~1leaderboards~1{leaderboardCode}~1users~1{userId}~1visibility/get/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1leaderboard~1v2~1admin~1namespaces~1{namespace}~1leaderboards~1{leaderboardCode}~1users~1{userId}~1visibility/get/description",
    "value": "User with false visibility status will have &lt;b&gt;hidden&lt;/b&gt; attribute set to true on it&#39;s leaderboard entry"
  },
  {
    "op": "add",
    "path": "/paths/~1leaderboard~1v1~1public~1namespaces~1{namespace}~1leaderboards/post/security",
    "value": [
      {
        "HasPermission": [
          "NAMESPACE:{namespace}:LEADERBOARD [CREATE]"
        ],
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1leaderboard~1v1~1public~1namespaces~1{namespace}~1leaderboards/post/description",
    "value": "Public endpoint to create a new leaderboard.\n\n&lt;p&gt;Required permission &#39;NAMESPACE:{namespace}:LEADERBOARD [CREATE]&#39;&lt;/p&gt;\n&lt;p&gt;&lt;b&gt;Fields :&lt;/b&gt;&lt;/p&gt;\n&lt;ul&gt;&lt;li&gt;LeaderboardConfig code must be lowercase and maximum length is 48 characters. &lt;b&gt;(required)&lt;/b&gt;.&lt;/li&gt;\n\t&lt;li&gt;Maximum length for leaderboard name is 128 characters. &lt;b&gt;(required)&lt;/b&gt;.&lt;/li&gt;\n\t&lt;li&gt;Start time must be follow RFC3339 standard. e.g. 2020-10-02T15:00:00.05Z&lt;b&gt;(required)&lt;/b&gt;.&lt;/li&gt;\n\t&lt;li&gt;Season period must be greater than 31 days.&lt;/li&gt;\n\t&lt;li&gt;If seasonPeriod is filled, the LeaderboardConfig would have seasonal leaderboard.&lt;/li&gt;\n\t&lt;li&gt;Reset Date must be a number 1 - 31. Default is &#39;1&#39;.&lt;/li&gt;\n\t&lt;li&gt;Reset Day must be a number 0 - 6. 0 = Sunday, 1 = Monday, 2 = Tuesday, 3 = Wednesday, 4 = Thursday, 5 = Friday, 6 = Saturday (day of week). Default is &#39;0&#39;.&lt;/li&gt;\n\t&lt;li&gt;Reset time must be &lt;b&gt;hours:minutes&lt;/b&gt; in 24 hours format e.g. 01:30, 10:30, 15:30, 23:15.Default is &#39;00:00&#39;.&lt;/li&gt;\n\t&lt;li&gt;Stat Code is related with statistic code in statistic service. &lt;b&gt;(required)&lt;/b&gt;.&lt;/li&gt;\n&lt;/ul&gt;\n"
  },
  {
    "op": "add",
    "path": "/paths/~1leaderboard~1v1~1public~1namespaces~1{namespace}~1leaderboards/get/security",
    "value": [
      {
        "authorization": []
      }
    ]
  },
  {
    "op": "replace",
    "path": "/paths/~1leaderboard~1v1~1public~1namespaces~1{namespace}~1leaderboards/get/description",
    "value": "&lt;p&gt;This endpoint return all leaderboard configurations&lt;/p&gt;\t\n\t\t"
  },
  {
    "op": "add",
    "path": "/paths/~1leaderboard~1v2~1public~1namespaces~1{namespace}~1leaderboards~1{leaderboardCode}~1alltime/get/security",
    "value": [
      {
        "authorization": []
      }
    ]
  }
]

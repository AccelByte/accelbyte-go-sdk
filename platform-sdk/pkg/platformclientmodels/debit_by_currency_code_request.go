// Code generated by go-swagger; DO NOT EDIT.

package platformclientmodels

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// DebitByCurrencyCodeRequest A DTO for wallet's debit
//
// swagger:model DebitByCurrencyCodeRequest
type DebitByCurrencyCodeRequest struct {

	// allow to debit wallet balance to negative value
	AllowOverdraft bool `json:"allowOverdraft"`

	// amount
	// Required: true
	// Minimum: 1
	Amount *int64 `json:"amount"`

	// balance origin
	// Enum: [Epic GooglePlay IOS Nintendo Other Playstation Steam System Twitch Xbox]
	BalanceOrigin string `json:"balanceOrigin,omitempty"`

	// reason
	Reason string `json:"reason,omitempty"`
}

// Validate validates this debit by currency code request
func (m *DebitByCurrencyCodeRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAmount(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateBalanceOrigin(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DebitByCurrencyCodeRequest) validateAmount(formats strfmt.Registry) error {

	if err := validate.Required("amount", "body", m.Amount); err != nil {
		return err
	}

	if err := validate.MinimumInt("amount", "body", int64(*m.Amount), 1, false); err != nil {
		return err
	}

	return nil
}

var debitByCurrencyCodeRequestTypeBalanceOriginPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Epic","GooglePlay","IOS","Nintendo","Other","Playstation","Steam","System","Twitch","Xbox"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		debitByCurrencyCodeRequestTypeBalanceOriginPropEnum = append(debitByCurrencyCodeRequestTypeBalanceOriginPropEnum, v)
	}
}

const (

	// DebitByCurrencyCodeRequestBalanceOriginEpic captures enum value "Epic"
	DebitByCurrencyCodeRequestBalanceOriginEpic string = "Epic"

	// DebitByCurrencyCodeRequestBalanceOriginGooglePlay captures enum value "GooglePlay"
	DebitByCurrencyCodeRequestBalanceOriginGooglePlay string = "GooglePlay"

	// DebitByCurrencyCodeRequestBalanceOriginIOS captures enum value "IOS"
	DebitByCurrencyCodeRequestBalanceOriginIOS string = "IOS"

	// DebitByCurrencyCodeRequestBalanceOriginNintendo captures enum value "Nintendo"
	DebitByCurrencyCodeRequestBalanceOriginNintendo string = "Nintendo"

	// DebitByCurrencyCodeRequestBalanceOriginOther captures enum value "Other"
	DebitByCurrencyCodeRequestBalanceOriginOther string = "Other"

	// DebitByCurrencyCodeRequestBalanceOriginPlaystation captures enum value "Playstation"
	DebitByCurrencyCodeRequestBalanceOriginPlaystation string = "Playstation"

	// DebitByCurrencyCodeRequestBalanceOriginSteam captures enum value "Steam"
	DebitByCurrencyCodeRequestBalanceOriginSteam string = "Steam"

	// DebitByCurrencyCodeRequestBalanceOriginSystem captures enum value "System"
	DebitByCurrencyCodeRequestBalanceOriginSystem string = "System"

	// DebitByCurrencyCodeRequestBalanceOriginTwitch captures enum value "Twitch"
	DebitByCurrencyCodeRequestBalanceOriginTwitch string = "Twitch"

	// DebitByCurrencyCodeRequestBalanceOriginXbox captures enum value "Xbox"
	DebitByCurrencyCodeRequestBalanceOriginXbox string = "Xbox"
)

// prop value enum
func (m *DebitByCurrencyCodeRequest) validateBalanceOriginEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, debitByCurrencyCodeRequestTypeBalanceOriginPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *DebitByCurrencyCodeRequest) validateBalanceOrigin(formats strfmt.Registry) error {

	if swag.IsZero(m.BalanceOrigin) { // not required
		return nil
	}

	// value enum
	if err := m.validateBalanceOriginEnum("balanceOrigin", "body", m.BalanceOrigin); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *DebitByCurrencyCodeRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DebitByCurrencyCodeRequest) UnmarshalBinary(b []byte) error {
	var res DebitByCurrencyCodeRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

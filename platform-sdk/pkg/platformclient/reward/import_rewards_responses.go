// Code generated by go-swagger; DO NOT EDIT.

package reward

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"io/ioutil"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/AccelByte/accelbyte-go-sdk/platform-sdk/pkg/platformclientmodels"
)

// ImportRewardsReader is a Reader for the ImportRewards structure.
type ImportRewardsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ImportRewardsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewImportRewardsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewImportRewardsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		data, err := ioutil.ReadAll(response.Body())
		if err != nil {
			return nil, err
		}

		return nil, fmt.Errorf("Requested POST /platform/admin/namespaces/{namespace}/rewards/import returns an error %d: %s", response.Code(), string(data))
	}
}

// NewImportRewardsOK creates a ImportRewardsOK with default headers values
func NewImportRewardsOK() *ImportRewardsOK {
	return &ImportRewardsOK{}
}

/*ImportRewardsOK handles this case with default header values.

  successful import of reward configs
*/
type ImportRewardsOK struct {
}

func (o *ImportRewardsOK) Error() string {
	return fmt.Sprintf("[POST /platform/admin/namespaces/{namespace}/rewards/import][%d] importRewardsOK ", 200)
}

func (o *ImportRewardsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewImportRewardsBadRequest creates a ImportRewardsBadRequest with default headers values
func NewImportRewardsBadRequest() *ImportRewardsBadRequest {
	return &ImportRewardsBadRequest{}
}

/*ImportRewardsBadRequest handles this case with default header values.

  <table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>34021</td><td>Reward data for namespace [{namespace}] is invalid</td></tr></table>
*/
type ImportRewardsBadRequest struct {
	Payload *platformclientmodels.ErrorEntity
}

func (o *ImportRewardsBadRequest) Error() string {
	return fmt.Sprintf("[POST /platform/admin/namespaces/{namespace}/rewards/import][%d] importRewardsBadRequest  %+v", 400, o.Payload)
}

func (o *ImportRewardsBadRequest) GetPayload() *platformclientmodels.ErrorEntity {
	return o.Payload
}

func (o *ImportRewardsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(platformclientmodels.ErrorEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

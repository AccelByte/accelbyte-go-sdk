{
  "swagger": "2.0",
  "info": {
    "description": "Justice Leaderboard Service",
    "title": "justice-leaderboard-service",
    "contact": {
      "name": "Engineering Team at AccelByte",
      "url": "https://accelbyte.io",
      "email": "engineering@accelbyte.io"
    },
    "version": "2.10.0"
  },
  "paths": {
    "/leaderboard/v1/admin/namespaces/{namespace}/leaderboards": {
      "get": {
        "description": "\u003cp\u003eRequired permission 'ADMIN:NAMESPACE:{namespace}:LEADERBOARD [READ]'\u003c/p\u003e\n\t\t\t\u003cp\u003eThis endpoint return all leaderboard configurations\u003c/p\u003e\t\n\t\t",
        "produces": [
          "application/json"
        ],
        "tags": [
          "LeaderboardConfiguration"
        ],
        "summary": "list all leaderboards by given namespace",
        "operationId": "getLeaderboardConfigurationsAdminV1",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "size of displayed data",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "The start position that points to query data",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "filter for deleted leaderboard config",
            "name": "isDeleted",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "filter for archived leaderboard",
            "name": "isArchived",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.GetAllLeaderboardConfigsResp"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          }
        }
      },
      "post": {
        "description": "\u003cp\u003eRequired permission 'ADMIN:NAMESPACE:{namespace}:LEADERBOARD [CREATE]'\u003c/p\u003e\n\t\t\t\u003cp\u003e\u003cb\u003eFields :\u003c/b\u003e\u003c/p\u003e\n\t\t\t\u003cul\u003e\u003cli\u003eLeaderboardConfig code must be lowercase and maximum length is 48 characters. \u003cb\u003e(required)\u003c/b\u003e.\u003c/li\u003e\n\t\t\t\t\u003cli\u003eMaximum length for leaderboard name is 128 characters. \u003cb\u003e(required)\u003c/b\u003e.\u003c/li\u003e\n\t\t\t\t\u003cli\u003eStart time must be follow RFC3339 standard. e.g. 2020-10-02T15:00:00.05Z\u003cb\u003e(required)\u003c/b\u003e.\u003c/li\u003e\n\t\t\t\t\u003cli\u003eSeason period must be greater than 31 days.\u003c/li\u003e\n\t\t\t\t\u003cli\u003eIf seasonPeriod is filled, the LeaderboardConfig would have seasonal leaderboard.\u003c/li\u003e\n\t\t\t\t\u003cli\u003eReset Date must be a number 1 - 31. Default is '1'.\u003c/li\u003e\n\t\t\t\t\u003cli\u003eReset Day must be a number 0 - 6. 0 = Sunday, 1 = Monday, 2 = Tuesday, 3 = Wednesday, 4 = Thursday, 5 = Friday, 6 = Saturday (day of week). Default is '0'.\u003c/li\u003e\n\t\t\t\t\u003cli\u003eReset time must be \u003cb\u003ehours:minutes\u003c/b\u003e in 24 hours format e.g. 01:30, 10:30, 15:30, 23:15.Default is '00:00'.\u003c/li\u003e\n\t\t\t\t\u003cli\u003eStat Code is related with statistic code in statistic service. \u003cb\u003e(required)\u003c/b\u003e.\u003c/li\u003e\n\t\t\t\u003c/ul\u003e\n\t\t",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "LeaderboardConfiguration"
        ],
        "summary": "create new leaderboard",
        "operationId": "createLeaderboardConfigurationAdminV1",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.LeaderboardConfigReq"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/models.LeaderboardConfigReq"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          }
        }
      }
    },
    "/leaderboard/v1/admin/namespaces/{namespace}/leaderboards/archived": {
      "get": {
        "description": "\u003cp\u003eAdmin Get signed url in an all time leaderboard that archived. Notes: This will be a bulk endpoint to get sign url\u003c/p\u003e\n\t\t\t",
        "produces": [
          "application/json"
        ],
        "tags": [
          "LeaderboardData"
        ],
        "summary": "Admin Get signed url for archive all time leaderboard ranking data",
        "operationId": "AdminGetArchivedLeaderboardRankingDataV1Handler",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "list of leaderboard codes split by comma",
            "name": "leaderboardCodes",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "slug type of leaderboard",
            "name": "slug",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/models.ArchiveLeaderboardSignedURLResponse"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          }
        }
      },
      "post": {
        "description": "\u003cp\u003eRequired permission 'ADMIN:NAMESPACE:{namespace}:LEADERBOARD [CREATE]'\u003c/p\u003e\n\t\t\t\u003cp\u003eArchive leaderboard ranking data for specified leaderboard codes. NOTE: This will remove all data of the leaderboard on every slug,\n\t\t\tremove the leaderboard code on stat mapping, and remove the leaderboard on the queue reset. This will be a bulk endpoint\u003c/p\u003e\n\t\t\t",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "LeaderboardData"
        ],
        "summary": "Archive a leadeboard data ranking",
        "operationId": "CreateArchivedLeaderboardRankingDataV1Handler",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.ArchiveLeaderboardReq"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          }
        }
      }
    },
    "/leaderboard/v1/admin/namespaces/{namespace}/leaderboards/delete": {
      "post": {
        "description": "\u003cp\u003eRequired permission 'ADMIN:NAMESPACE:{namespace}:LEADERBOARD [DELETE]'\u003c/p\u003e\n\t\t\t\u003cp\u003eThis endpoint delete multiple leaderboards configuration in one request\u003c/p\u003e\t\n\t\t",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "LeaderboardConfiguration"
        ],
        "summary": "delete bulk leaderboards. response body will contains failed leaderboard with the reason why it's failed to delete",
        "operationId": "deleteBulkLeaderboardsV1",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.DeleteBulkLeaderboardsReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.DeleteBulkLeaderboardsResp"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          }
        }
      }
    },
    "/leaderboard/v1/admin/namespaces/{namespace}/leaderboards/{leaderboardCode}": {
      "get": {
        "description": "\u003cp\u003eRequired permission 'ADMIN:NAMESPACE:{namespace}:LEADERBOARD [READ]'\u003c/p\u003e\n\t\t\t\u003cp\u003eThis endpoint returns a leaderboard configuration\u003c/p\u003e\t\n\t\t",
        "produces": [
          "application/json"
        ],
        "tags": [
          "LeaderboardConfiguration"
        ],
        "summary": "get leaderboard by leaderboardCode",
        "operationId": "getLeaderboardConfigurationAdminV1",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": " human readable unique code to indentify leaderboard. Must be lowercase and maximum length is 48",
            "name": "leaderboardCode",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.GetLeaderboardConfigResp"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "\u003cp\u003eRequired permission 'ADMIN:NAMESPACE:{namespace}:LEADERBOARD [UPDATE]'\u003c/p\u003e\n\t\t\t\u003cp\u003e\u003cb\u003eFields :\u003c/b\u003e\u003c/p\u003e\n\t\t\t\u003cul\u003e\n\t\t\t\t\u003cli\u003eMaximum length for leaderboard name is 128 characters.\u003c/li\u003e\n\t\t\t\t\u003cli\u003eStart time must be follow RFC3339 standard. e.g. 2020-10-02T15:00:00.05Z\u003c/li\u003e\n\t\t\t\t\u003cli\u003eSeason period must be greater than 31 days.\u003c/li\u003e\n\t\t\t\t\u003cli\u003eIf seasonPeriod is filled, the LeaderboardConfig would have seasonal leaderboard.\u003c/li\u003e\n\t\t\t\t\u003cli\u003eReset Date must be a number 1 - 31. Default is '1'.\u003c/li\u003e\n\t\t\t\t\u003cli\u003eReset Day must be a number 0 - 6. 0 = Sunday, 1 = Monday, 2 = Tuesday, 3 = Wednesday, 4 = Thursday, 5 = Friday, 6 = Saturday (day of week). Default is '0'.\u003c/li\u003e\n\t\t\t\t\u003cli\u003eReset time must be \u003cb\u003ehours:minutes\u003c/b\u003e in 24 hours format e.g. 01:30, 10:30, 15:30, 23:15.\u003c/li\u003e\n\t\t\t\u003c/ul\u003e\n\t\t",
        "produces": [
          "application/json"
        ],
        "tags": [
          "LeaderboardConfiguration"
        ],
        "summary": "update leaderboard by leaderboardCode",
        "operationId": "updateLeaderboardConfigurationAdminV1",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": " human readable unique code to indentify leaderboard. Must be lowercase and maximum length is 48",
            "name": "leaderboardCode",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.UpdateLeaderboardConfigReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.GetLeaderboardConfigResp"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "\u003cp\u003eRequired permission 'ADMIN:NAMESPACE:{namespace}:LEADERBOARD [DELETE]'\u003c/p\u003e\n\t\t\t\u003cp\u003eThis endpoint delete a leaderboard configuration\u003c/p\u003e\t\n\t\t",
        "produces": [
          "application/json"
        ],
        "tags": [
          "LeaderboardConfiguration"
        ],
        "summary": "delete leaderboard by leaderboardCode",
        "operationId": "deleteLeaderboardConfigurationAdminV1",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": " human readable unique code to indentify leaderboard. Must be lowercase and maximum length is 48",
            "name": "leaderboardCode",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          }
        }
      }
    },
    "/leaderboard/v1/admin/namespaces/{namespace}/leaderboards/{leaderboardCode}/alltime": {
      "get": {
        "description": "\u003cp\u003eRequired permission 'ADMIN:NAMESPACE:{namespace}:LEADERBOARD [READ]'\u003c/p\u003e\n\t\t\t\u003cp\u003eGet rankings in an all time leaderboard.\u003c/p\u003e\n\t\t\t",
        "produces": [
          "application/json"
        ],
        "tags": [
          "LeaderboardData"
        ],
        "summary": "Get all time leaderboard ranking data",
        "operationId": "GetAllTimeLeaderboardRankingAdminV1",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "the human readable unique code to identify the leaderboard. Must be lowercase and maximum length is 48",
            "name": "leaderboardCode",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "size of displayed data",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "The start position that points to query data",
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.GetLeaderboardRankingResp"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          }
        }
      }
    },
    "/leaderboard/v1/admin/namespaces/{namespace}/leaderboards/{leaderboardCode}/month": {
      "get": {
        "description": "\u003cp\u003eRequired permission 'ADMIN:NAMESPACE:{namespace}:LEADERBOARD [READ]'\u003c/p\u003e\n\t\t\t\u003cp\u003eGet rankings in current month leaderboard.\u003c/p\u003e\n\t\t\t",
        "produces": [
          "application/json"
        ],
        "tags": [
          "LeaderboardData"
        ],
        "summary": "Get current month leaderboard ranking data",
        "operationId": "GetCurrentMonthLeaderboardRankingAdminV1",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "the human readable unique code to identify the leaderboard. Must be lowercase and maximum length is 48",
            "name": "leaderboardCode",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "size of displayed data",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "The start position that points to query data",
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.GetLeaderboardRankingResp"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          }
        }
      }
    },
    "/leaderboard/v1/admin/namespaces/{namespace}/leaderboards/{leaderboardCode}/season": {
      "get": {
        "description": "\u003cp\u003eRequired permission 'ADMIN:NAMESPACE:{namespace}:LEADERBOARD [READ]'\u003c/p\u003e\n\t\t\t\u003cp\u003eGet rankings in current season leaderboard.\u003c/p\u003e\n\t\t\t",
        "produces": [
          "application/json"
        ],
        "tags": [
          "LeaderboardData"
        ],
        "summary": "Get current season leaderboard ranking data",
        "operationId": "GetCurrentSeasonLeaderboardRankingAdminV1",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "the human readable unique code to identify the leaderboard. Must be lowercase and maximum length is 48",
            "name": "leaderboardCode",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "size of displayed data",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "The start position that points to query data",
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.GetLeaderboardRankingResp"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          }
        }
      }
    },
    "/leaderboard/v1/admin/namespaces/{namespace}/leaderboards/{leaderboardCode}/today": {
      "get": {
        "description": "\u003cp\u003eRequired permission 'ADMIN:NAMESPACE:{namespace}:LEADERBOARD [READ]'\u003c/p\u003e\n\t\t\t\u003cp\u003eGet rankings in today leaderboard.\u003c/p\u003e\n\t\t\t",
        "produces": [
          "application/json"
        ],
        "tags": [
          "LeaderboardData"
        ],
        "summary": "Get today leaderboard ranking data",
        "operationId": "GetTodayLeaderboardRankingAdminV1",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "the human readable unique code to identify the leaderboard. Must be lowercase and maximum length is 48",
            "name": "leaderboardCode",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "size of displayed data",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "The start position that points to query data",
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.GetLeaderboardRankingResp"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          }
        }
      }
    },
    "/leaderboard/v1/admin/namespaces/{namespace}/leaderboards/{leaderboardCode}/users/{userId}": {
      "get": {
        "description": "\u003cp\u003eRequired permission 'ADMIN:NAMESPACE:{namespace}:LEADERBOARD [READ]'\u003c/p\u003e\n\t\t\t\u003cp\u003eGet user ranking in leaderboard\u003c/p\u003e\n\t\t\t",
        "produces": [
          "application/json"
        ],
        "tags": [
          "LeaderboardData"
        ],
        "summary": "Get user ranking",
        "operationId": "getUserRankingAdminV1",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "the human readable unique code to identify the leaderboard. Must be lowercase and maximum length is 48",
            "name": "leaderboardCode",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "User ID",
            "name": "userId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.UserRankingResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "\u003cp\u003eUpdate user point in a leaderboard. This endpoint uses for test utility only.\u003c/p\u003e\n\t\t\t\u003cp\u003eOther detail info:\u003c/p\u003e\n\t\t\t\u003cul\u003e\n\t\t\t\t\u003cli\u003eRequired permission: resource=\"ADMIN:NAMESPACE:{namespace}:USER:(userId):LEADERBOARD\", action=4 (UPDATE)\u003c/li\u003e\n\t\t\t\t\u003cli\u003eReturns: user ranking\u003c/li\u003e\n\t\t\t\u003c/ul\u003e\n\t\t",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "LeaderboardData"
        ],
        "summary": "Update user point",
        "operationId": "updateUserPointAdminV1",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "the human readable unique code to identify the leaderboard. Must be lowercase and maximum length is 48",
            "name": "leaderboardCode",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "User ID, should follow UUID version 4 without hyphen",
            "name": "userId",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.UpdateUserPointAdminV1Request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.UpdateUserPointAdminV1Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "Delete user ranking\nRequired permission: ADMIN:NAMESPACE:{namespace}:LEADERBOARD:USER [DELETE]\n\nRemove entry with provided userId from leaderboard. \nIf leaderboard with given leaderboard code not found, it will return http status not found (404).\nIf the leaderboard is found and no entry found in it, it will still return success (204) \n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "LeaderboardData"
        ],
        "summary": "Delete user ranking",
        "operationId": "deleteUserRankingAdminV1",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "the human readable unique code to identify the leaderboard. Must be lowercase and maximum length is 48",
            "name": "leaderboardCode",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "User ID used for leaderboard entry",
            "name": "userId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          }
        }
      }
    },
    "/leaderboard/v1/admin/namespaces/{namespace}/leaderboards/{leaderboardCode}/week": {
      "get": {
        "description": "\u003cp\u003eRequired permission 'ADMIN:NAMESPACE:{namespace}:LEADERBOARD [READ]'\u003c/p\u003e\n\t\t\t\u003cp\u003eGet rankings in current week leaderboard.\u003c/p\u003e\n\t\t\t",
        "produces": [
          "application/json"
        ],
        "tags": [
          "LeaderboardData"
        ],
        "summary": "Get current week leaderboard ranking data",
        "operationId": "GetCurrentWeekLeaderboardRankingAdminV1",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "the human readable unique code to identify the leaderboard. Must be lowercase and maximum length is 48",
            "name": "leaderboardCode",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "size of displayed data",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "The start position that points to query data",
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.GetLeaderboardRankingResp"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          }
        }
      }
    },
    "/leaderboard/v1/admin/namespaces/{namespace}/users/{userId}": {
      "delete": {
        "description": "Delete user ranking across leaderboard\nRequired permission: ADMIN:NAMESPACE:{namespace}:LEADERBOARD:USER [DELETE]\n\nRemove entry with provided userId from leaderboard. \nIf leaderboard with given leaderboard code not found, it will return http status not found (404).\nIf the leaderboard is found and no entry found in it, it will still return success (204) \n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "LeaderboardData"
        ],
        "summary": "Delete user ranking across leaderboard(s)",
        "operationId": "deleteUserRankingsAdminV1",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "User ID used for leaderboard entry",
            "name": "userId",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "the human readable unique code to identify the leaderboard. Must be lowercase and maximum length is 48. At least one leaderboard code MUST be provided",
            "name": "leaderboardCode",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          }
        }
      }
    },
    "/leaderboard/v1/admin/namespaces/{namespace}/users/{userId}/leaderboards": {
      "get": {
        "description": "\u003cp\u003eRequired permission 'ADMIN:NAMESPACE:{namespace}:LEADERBOARD [READ]'\u003c/p\u003e\n\t\t\t\u003cp\u003eGet user leaderboard rankings\u003c/p\u003e\n\t\t\t",
        "produces": [
          "application/json"
        ],
        "tags": [
          "UserData"
        ],
        "summary": "Get user rankings",
        "operationId": "getUserLeaderboardRankingsAdminV1",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "User ID",
            "name": "userId",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "size of displayed data",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "The start position that points to query data",
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.GetAllUserLeaderboardsResp"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          }
        }
      }
    },
    "/leaderboard/v1/public/namespaces/{namespace}/leaderboards": {
      "get": {
        "description": "\u003cp\u003eThis endpoint return all leaderboard configurations\u003c/p\u003e\t\n\t\t",
        "produces": [
          "application/json"
        ],
        "tags": [
          "LeaderboardConfiguration"
        ],
        "summary": "list all leaderboards by given namespace",
        "operationId": "getLeaderboardConfigurationsPublicV1",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "size of displayed data",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "The start position that points to query data",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "filter for deleted leaderboard config",
            "name": "isDeleted",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "filter for archived leaderboard",
            "name": "isArchived",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.GetAllLeaderboardConfigsPublicResp"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          }
        }
      },
      "post": {
        "description": "Public endpoint to create a new leaderboard.\n\n\u003cp\u003eRequired permission 'NAMESPACE:{namespace}:LEADERBOARD [CREATE]'\u003c/p\u003e\n\u003cp\u003e\u003cb\u003eFields :\u003c/b\u003e\u003c/p\u003e\n\u003cul\u003e\u003cli\u003eLeaderboardConfig code must be lowercase and maximum length is 48 characters. \u003cb\u003e(required)\u003c/b\u003e.\u003c/li\u003e\n\t\u003cli\u003eMaximum length for leaderboard name is 128 characters. \u003cb\u003e(required)\u003c/b\u003e.\u003c/li\u003e\n\t\u003cli\u003eStart time must be follow RFC3339 standard. e.g. 2020-10-02T15:00:00.05Z\u003cb\u003e(required)\u003c/b\u003e.\u003c/li\u003e\n\t\u003cli\u003eSeason period must be greater than 31 days.\u003c/li\u003e\n\t\u003cli\u003eIf seasonPeriod is filled, the LeaderboardConfig would have seasonal leaderboard.\u003c/li\u003e\n\t\u003cli\u003eReset Date must be a number 1 - 31. Default is '1'.\u003c/li\u003e\n\t\u003cli\u003eReset Day must be a number 0 - 6. 0 = Sunday, 1 = Monday, 2 = Tuesday, 3 = Wednesday, 4 = Thursday, 5 = Friday, 6 = Saturday (day of week). Default is '0'.\u003c/li\u003e\n\t\u003cli\u003eReset time must be \u003cb\u003ehours:minutes\u003c/b\u003e in 24 hours format e.g. 01:30, 10:30, 15:30, 23:15.Default is '00:00'.\u003c/li\u003e\n\t\u003cli\u003eStat Code is related with statistic code in statistic service. \u003cb\u003e(required)\u003c/b\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "LeaderboardConfiguration"
        ],
        "summary": "create new leaderboard",
        "operationId": "createLeaderboardConfigurationPublicV1",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.LeaderboardConfigReq"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/models.LeaderboardConfigReq"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          }
        }
      }
    },
    "/leaderboard/v1/public/namespaces/{namespace}/leaderboards/{leaderboardCode}/alltime": {
      "get": {
        "description": "\t\u003cp\u003eGet rankings in an all time leaderboard.\u003c/p\u003e\n\t\t\t",
        "produces": [
          "application/json"
        ],
        "tags": [
          "LeaderboardData"
        ],
        "summary": "Get all time leaderboard ranking data",
        "operationId": "GetAllTimeLeaderboardRankingPublicV1",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "the human readable unique code to identify the leaderboard. Must be lowercase and maximum length is 48",
            "name": "leaderboardCode",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "size of displayed data",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "The start position that points to query data",
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.GetLeaderboardRankingResp"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          }
        }
      }
    },
    "/leaderboard/v1/public/namespaces/{namespace}/leaderboards/{leaderboardCode}/archived": {
      "get": {
        "description": "\t\u003cp\u003eGet signed url in an all time leaderboard that archived. NOTE: This will be a bulk endpoint to get sign url\u003c/p\u003e\n\t\t\t",
        "produces": [
          "application/json"
        ],
        "tags": [
          "LeaderboardData"
        ],
        "summary": "Get signed url for archive all time leaderboard ranking data",
        "operationId": "GetArchivedLeaderboardRankingDataV1Handler",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "the human readable unique code to identify the leaderboard. Must be lowercase and maximum length is 48",
            "name": "leaderboardCode",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "list of leaderboard codes split by comma",
            "name": "leaderboardCodes",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "slug type of leaderboard",
            "name": "slug",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/models.ArchiveLeaderboardSignedURLResponse"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          }
        }
      }
    },
    "/leaderboard/v1/public/namespaces/{namespace}/leaderboards/{leaderboardCode}/month": {
      "get": {
        "description": "\u003cp\u003eGet rankings in current month leaderboard.\u003c/p\u003e",
        "produces": [
          "application/json"
        ],
        "tags": [
          "LeaderboardData"
        ],
        "summary": "Get current month leaderboard ranking data",
        "operationId": "GetCurrentMonthLeaderboardRankingPublicV1",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "the human readable unique code to identify the leaderboard. Must be lowercase and maximum length is 48",
            "name": "leaderboardCode",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "size of displayed data",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "The start position that points to query data",
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.GetLeaderboardRankingResp"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          }
        }
      }
    },
    "/leaderboard/v1/public/namespaces/{namespace}/leaderboards/{leaderboardCode}/season": {
      "get": {
        "description": "\u003cp\u003eGet rankings in current season leaderboard.\u003c/p\u003e",
        "produces": [
          "application/json"
        ],
        "tags": [
          "LeaderboardData"
        ],
        "summary": "Get current season leaderboard ranking data",
        "operationId": "GetCurrentSeasonLeaderboardRankingPublicV1",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "the human readable unique code to identify the leaderboard. Must be lowercase and maximum length is 48",
            "name": "leaderboardCode",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "size of displayed data",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "The start position that points to query data",
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.GetLeaderboardRankingResp"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          }
        }
      }
    },
    "/leaderboard/v1/public/namespaces/{namespace}/leaderboards/{leaderboardCode}/today": {
      "get": {
        "description": "\u003cp\u003eGet rankings in today leaderboard.\u003c/p\u003e",
        "produces": [
          "application/json"
        ],
        "tags": [
          "LeaderboardData"
        ],
        "summary": "Get today leaderboard ranking data",
        "operationId": "GetTodayLeaderboardRankingPublicV1",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "the human readable unique code to identify the leaderboard. Must be lowercase and maximum length is 48",
            "name": "leaderboardCode",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "size of displayed data",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "The start position that points to query data",
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.GetLeaderboardRankingResp"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          }
        }
      }
    },
    "/leaderboard/v1/public/namespaces/{namespace}/leaderboards/{leaderboardCode}/users/{userId}": {
      "get": {
        "description": "\u003cp\u003eGet user ranking in leaderboard\u003c/p\u003e",
        "produces": [
          "application/json"
        ],
        "tags": [
          "LeaderboardData"
        ],
        "summary": "Get user ranking",
        "operationId": "getUserRankingPublicV1",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "the human readable unique code to identify the leaderboard. Must be lowercase and maximum length is 48",
            "name": "leaderboardCode",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "User ID",
            "name": "userId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.UserRankingResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "Delete user ranking\nRequired permission: NAMESPACE:{namespace}:LEADERBOARD:USER:{userId} [DELETE]\n\nRemove entry with provided userId from leaderboard. \nIf leaderboard with given leaderboard code not found, it will return http status not found (404).\nIf the leaderboard is found and no entry found in it, it will still return success (204) \n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "LeaderboardData"
        ],
        "summary": "Delete user ranking",
        "operationId": "deleteUserRankingPublicV1",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "the human readable unique code to identify the leaderboard. Must be lowercase and maximum length is 48",
            "name": "leaderboardCode",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "User ID used for leaderboard entry",
            "name": "userId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          }
        }
      }
    },
    "/leaderboard/v1/public/namespaces/{namespace}/leaderboards/{leaderboardCode}/week": {
      "get": {
        "description": "\u003cp\u003eGet rankings in current week leaderboard.\u003c/p\u003e",
        "produces": [
          "application/json"
        ],
        "tags": [
          "LeaderboardData"
        ],
        "summary": "Get current week leaderboard ranking data",
        "operationId": "GetCurrentWeekLeaderboardRankingPublicV1",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "the human readable unique code to identify the leaderboard. Must be lowercase and maximum length is 48",
            "name": "leaderboardCode",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "size of displayed data",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "The start position that points to query data",
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.GetLeaderboardRankingResp"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          }
        }
      }
    },
    "/leaderboard/v2/admin/namespaces/{namespace}/leaderboards/{leaderboardCode}/users/hidden": {
      "get": {
        "description": "Return hidden users on a leaderboard",
        "produces": [
          "application/json"
        ],
        "tags": [
          "UserVisibility"
        ],
        "summary": "Get hidden users on a leaderboard",
        "operationId": "GetHiddenUsersV2",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Leaderboard Code",
            "name": "leaderboardCode",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "size of displayed data",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "The start position that points to query data",
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.GetHiddenUserResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          }
        }
      }
    },
    "/leaderboard/v2/admin/namespaces/{namespace}/leaderboards/{leaderboardCode}/users/{userId}/visibility": {
      "get": {
        "description": "User with false visibility status will have \u003cb\u003ehidden\u003c/b\u003e attribute set to true on it's leaderboard entry",
        "produces": [
          "application/json"
        ],
        "tags": [
          "UserVisibility"
        ],
        "summary": "Get user visibility status",
        "operationId": "GetUserVisibilityStatusV2",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "User ID",
            "name": "userId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Leaderboard Code",
            "name": "leaderboardCode",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.GetUserVisibilityResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "User with false visibility status will have \u003cb\u003ehidden\u003c/b\u003e attribute  set to true on it's leaderboard entry",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "UserVisibility"
        ],
        "summary": "Set user visibility status on a specific leaderboard code",
        "operationId": "SetUserLeaderboardVisibilityStatusV2",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.SetUserVisibilityRequest"
            }
          },
          {
            "type": "string",
            "description": "User ID",
            "name": "userId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Leaderboard Code",
            "name": "leaderboardCode",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.GetUserVisibilityResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          }
        }
      }
    },
    "/leaderboard/v2/admin/namespaces/{namespace}/users/{userId}/visibility": {
      "put": {
        "description": "User with false visibility status will have \u003cb\u003ehidden\u003c/b\u003e attribute  set to true on it's leaderboard entry",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "UserVisibility"
        ],
        "summary": "Set user visibility status on a all current leaderboard",
        "operationId": "SetUserVisibilityStatusV2",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.SetUserVisibilityRequest"
            }
          },
          {
            "type": "string",
            "description": "User ID",
            "name": "userId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.GetUserVisibilityResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          }
        }
      }
    },
    "/leaderboard/v2/public/namespaces/{namespace}/leaderboards": {
      "get": {
        "description": "This endpoint return all leaderboard configurations",
        "produces": [
          "application/json"
        ],
        "tags": [
          "LeaderboardConfiguration"
        ],
        "summary": "list all leaderboards by given namespace",
        "operationId": "GetLeaderboardConfigurationsPublicV2",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "size of displayed data",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "The start position that points to query data",
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v2.GetAllLeaderboardConfigsPublicResp"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          }
        }
      }
    },
    "/leaderboard/v2/public/namespaces/{namespace}/leaderboards/{leaderboardCode}/alltime": {
      "get": {
        "description": "Get rankings in an all time leaderboard.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "LeaderboardData"
        ],
        "summary": "Get all time leaderboard ranking data",
        "operationId": "GetAllTimeLeaderboardRankingPublicV2",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "the human readable unique code to identify the leaderboard. Must be lowercase and maximum length is 48",
            "name": "leaderboardCode",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "size of displayed data",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "The start position that points to query data",
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v2.GetPublicLeaderboardRankingResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "models.ArchiveLeaderboardReq": {
      "required": [
        "slug",
        "limit",
        "leaderboardCodes"
      ],
      "properties": {
        "leaderboardCodes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "limit": {
          "type": "integer",
          "format": "int64"
        },
        "slug": {
          "type": "string"
        }
      }
    },
    "models.ArchiveLeaderboardSignedURLResponse": {
      "required": [
        "leaderboardCode",
        "url"
      ],
      "properties": {
        "leaderboardCode": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "models.DailyConfig": {
      "required": [
        "resetTime"
      ],
      "properties": {
        "resetTime": {
          "type": "string"
        }
      }
    },
    "models.DeleteBulkLeaderboardFailedResp": {
      "required": [
        "leaderboardCode",
        "error"
      ],
      "properties": {
        "error": {
          "type": "string"
        },
        "leaderboardCode": {
          "type": "string"
        }
      }
    },
    "models.DeleteBulkLeaderboardsReq": {
      "required": [
        "leaderboardCodes"
      ],
      "properties": {
        "leaderboardCodes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "models.DeleteBulkLeaderboardsResp": {
      "required": [
        "failed"
      ],
      "properties": {
        "failed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/models.DeleteBulkLeaderboardFailedResp"
          }
        }
      }
    },
    "models.GetAllLeaderboardConfigsPublicResp": {
      "required": [
        "data",
        "paging"
      ],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/models.GetLeaderboardConfigPublicResp"
          }
        },
        "paging": {
          "$ref": "#/definitions/models.Pagination"
        }
      }
    },
    "models.GetAllLeaderboardConfigsResp": {
      "required": [
        "data",
        "paging"
      ],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/models.GetLeaderboardConfigResp"
          }
        },
        "paging": {
          "$ref": "#/definitions/models.Pagination"
        }
      }
    },
    "models.GetAllUserLeaderboardsResp": {
      "required": [
        "data",
        "paging"
      ],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/models.UserLeaderboardRanking"
          }
        },
        "paging": {
          "$ref": "#/definitions/models.Pagination"
        }
      }
    },
    "models.GetHiddenUserResponse": {
      "required": [
        "data",
        "paging"
      ],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "paging": {
          "$ref": "#/definitions/models.Pagination"
        }
      }
    },
    "models.GetLeaderboardConfigPublicResp": {
      "required": [
        "leaderboardCode",
        "name",
        "iconURL",
        "statCode"
      ],
      "properties": {
        "iconURL": {
          "type": "string"
        },
        "leaderboardCode": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "statCode": {
          "type": "string"
        }
      }
    },
    "models.GetLeaderboardConfigResp": {
      "required": [
        "leaderboardCode",
        "name",
        "iconURL",
        "descending",
        "isDeleted",
        "isArchived",
        "startTime",
        "seasonPeriod",
        "daily",
        "weekly",
        "monthly",
        "statCode"
      ],
      "properties": {
        "daily": {
          "$ref": "#/definitions/models.DailyConfig"
        },
        "deletedAt": {
          "type": "string",
          "format": "date-time"
        },
        "descending": {
          "type": "boolean"
        },
        "iconURL": {
          "type": "string"
        },
        "isArchived": {
          "type": "boolean"
        },
        "isDeleted": {
          "type": "boolean"
        },
        "leaderboardCode": {
          "type": "string"
        },
        "monthly": {
          "$ref": "#/definitions/models.MonthlyConfig"
        },
        "name": {
          "type": "string"
        },
        "seasonPeriod": {
          "type": "integer",
          "format": "int32"
        },
        "startTime": {
          "type": "string"
        },
        "statCode": {
          "type": "string"
        },
        "weekly": {
          "$ref": "#/definitions/models.WeeklyConfig"
        }
      }
    },
    "models.GetLeaderboardRankingResp": {
      "required": [
        "data",
        "paging"
      ],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/models.UserPoint"
          }
        },
        "paging": {
          "$ref": "#/definitions/models.Pagination"
        }
      }
    },
    "models.GetUserVisibilityResponse": {
      "required": [
        "namespace",
        "userId",
        "visibility"
      ],
      "properties": {
        "namespace": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "visibility": {
          "type": "boolean"
        }
      }
    },
    "models.LeaderboardConfigReq": {
      "required": [
        "leaderboardCode",
        "name",
        "iconURL",
        "descending",
        "startTime",
        "seasonPeriod",
        "daily",
        "weekly",
        "monthly",
        "statCode"
      ],
      "properties": {
        "daily": {
          "$ref": "#/definitions/models.DailyConfig"
        },
        "descending": {
          "type": "boolean"
        },
        "iconURL": {
          "type": "string"
        },
        "leaderboardCode": {
          "type": "string"
        },
        "monthly": {
          "$ref": "#/definitions/models.MonthlyConfig"
        },
        "name": {
          "type": "string"
        },
        "seasonPeriod": {
          "type": "integer",
          "format": "int32"
        },
        "startTime": {
          "type": "string"
        },
        "statCode": {
          "type": "string"
        },
        "weekly": {
          "$ref": "#/definitions/models.WeeklyConfig"
        }
      }
    },
    "models.MonthlyConfig": {
      "required": [
        "resetDate",
        "resetTime"
      ],
      "properties": {
        "resetDate": {
          "type": "integer",
          "format": "integer"
        },
        "resetTime": {
          "type": "string"
        }
      }
    },
    "models.Pagination": {
      "required": [
        "Previous",
        "Next",
        "First",
        "Last"
      ],
      "properties": {
        "First": {
          "type": "string"
        },
        "Last": {
          "type": "string"
        },
        "Next": {
          "type": "string"
        },
        "Previous": {
          "type": "string"
        }
      }
    },
    "models.SetUserVisibilityRequest": {
      "required": [
        "visibility"
      ],
      "properties": {
        "visibility": {
          "type": "boolean"
        }
      }
    },
    "models.UpdateLeaderboardConfigReq": {
      "required": [
        "name",
        "iconURL",
        "descending",
        "startTime",
        "seasonPeriod",
        "daily",
        "weekly",
        "monthly",
        "statCode"
      ],
      "properties": {
        "daily": {
          "$ref": "#/definitions/models.DailyConfig"
        },
        "descending": {
          "type": "boolean"
        },
        "iconURL": {
          "type": "string"
        },
        "monthly": {
          "$ref": "#/definitions/models.MonthlyConfig"
        },
        "name": {
          "type": "string"
        },
        "seasonPeriod": {
          "type": "integer",
          "format": "int32"
        },
        "startTime": {
          "type": "string"
        },
        "statCode": {
          "type": "string"
        },
        "weekly": {
          "$ref": "#/definitions/models.WeeklyConfig"
        }
      }
    },
    "models.UpdateUserPointAdminV1Request": {
      "required": [
        "inc",
        "latestValue"
      ],
      "properties": {
        "inc": {
          "type": "number",
          "format": "double"
        },
        "latestValue": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "models.UpdateUserPointAdminV1Response": {
      "required": [
        "userId",
        "point"
      ],
      "properties": {
        "point": {
          "type": "number",
          "format": "double"
        },
        "userId": {
          "type": "string"
        }
      }
    },
    "models.UserLeaderboardRanking": {
      "required": [
        "weekly",
        "monthly",
        "allTime",
        "current",
        "userId",
        "daily",
        "leaderboardCode",
        "leaderboardName"
      ],
      "properties": {
        "allTime": {
          "$ref": "#/definitions/models.UserRankingResponseDetail"
        },
        "current": {
          "$ref": "#/definitions/models.UserRankingResponseDetail"
        },
        "daily": {
          "$ref": "#/definitions/models.UserRankingResponseDetail"
        },
        "leaderboardCode": {
          "type": "string"
        },
        "leaderboardName": {
          "type": "string"
        },
        "monthly": {
          "$ref": "#/definitions/models.UserRankingResponseDetail"
        },
        "userId": {
          "type": "string"
        },
        "weekly": {
          "$ref": "#/definitions/models.UserRankingResponseDetail"
        }
      }
    },
    "models.UserPoint": {
      "required": [
        "userId",
        "point",
        "additionalData"
      ],
      "properties": {
        "additionalData": {
          "type": "object"
        },
        "hidden": {
          "type": "boolean"
        },
        "point": {
          "type": "number",
          "format": "double"
        },
        "userId": {
          "type": "string"
        }
      }
    },
    "models.UserRankingResponse": {
      "required": [
        "userId",
        "daily",
        "weekly",
        "monthly",
        "allTime",
        "current"
      ],
      "properties": {
        "allTime": {
          "$ref": "#/definitions/models.UserRankingResponseDetail"
        },
        "current": {
          "$ref": "#/definitions/models.UserRankingResponseDetail"
        },
        "daily": {
          "$ref": "#/definitions/models.UserRankingResponseDetail"
        },
        "monthly": {
          "$ref": "#/definitions/models.UserRankingResponseDetail"
        },
        "userId": {
          "type": "string"
        },
        "weekly": {
          "$ref": "#/definitions/models.UserRankingResponseDetail"
        }
      }
    },
    "models.UserRankingResponseDetail": {
      "required": [
        "rank",
        "point",
        "additionalData"
      ],
      "properties": {
        "additionalData": {
          "type": "object"
        },
        "hidden": {
          "type": "boolean"
        },
        "point": {
          "type": "number",
          "format": "double"
        },
        "rank": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "models.WeeklyConfig": {
      "required": [
        "resetDay",
        "resetTime"
      ],
      "properties": {
        "resetDay": {
          "type": "integer",
          "format": "integer"
        },
        "resetTime": {
          "type": "string"
        }
      }
    },
    "response.ErrorResponse": {
      "required": [
        "errorCode",
        "errorMessage"
      ],
      "properties": {
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "errorMessage": {
          "type": "string"
        }
      }
    },
    "v2.Entry": {
      "required": [
        "point"
      ],
      "properties": {
        "additionalData": {
          "type": "object"
        },
        "hidden": {
          "type": "boolean"
        },
        "point": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "v2.GetAllLeaderboardConfigsPublicResp": {
      "required": [
        "data",
        "paging"
      ],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2.GetLeaderboardConfigPublicResp"
          }
        },
        "paging": {
          "$ref": "#/definitions/v2.Pagination"
        }
      }
    },
    "v2.GetLeaderboardConfigPublicResp": {
      "required": [
        "leaderboardCode",
        "name",
        "iconURL",
        "statCode"
      ],
      "properties": {
        "iconURL": {
          "type": "string"
        },
        "leaderboardCode": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "statCode": {
          "type": "string"
        }
      }
    },
    "v2.GetPublicLeaderboardRankingResponse": {
      "required": [
        "data",
        "paging"
      ],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2.Entry"
          }
        },
        "paging": {
          "$ref": "#/definitions/v2.Pagination"
        }
      }
    },
    "v2.Pagination": {
      "required": [
        "previous",
        "next",
        "first",
        "last"
      ],
      "properties": {
        "first": {
          "type": "string"
        },
        "last": {
          "type": "string"
        },
        "next": {
          "type": "string"
        },
        "previous": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "authorization": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "authorization": []
    }
  ]
}
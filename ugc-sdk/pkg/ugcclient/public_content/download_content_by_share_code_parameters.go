// Code generated by go-swagger; DO NOT EDIT.

package public_content

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewDownloadContentByShareCodeParams creates a new DownloadContentByShareCodeParams object
// with the default values initialized.
func NewDownloadContentByShareCodeParams() *DownloadContentByShareCodeParams {
	var ()
	return &DownloadContentByShareCodeParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDownloadContentByShareCodeParamsWithTimeout creates a new DownloadContentByShareCodeParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDownloadContentByShareCodeParamsWithTimeout(timeout time.Duration) *DownloadContentByShareCodeParams {
	var ()
	return &DownloadContentByShareCodeParams{

		timeout: timeout,
	}
}

// NewDownloadContentByShareCodeParamsWithContext creates a new DownloadContentByShareCodeParams object
// with the default values initialized, and the ability to set a context for a request
func NewDownloadContentByShareCodeParamsWithContext(ctx context.Context) *DownloadContentByShareCodeParams {
	var ()
	return &DownloadContentByShareCodeParams{

		Context: ctx,
	}
}

// NewDownloadContentByShareCodeParamsWithHTTPClient creates a new DownloadContentByShareCodeParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDownloadContentByShareCodeParamsWithHTTPClient(client *http.Client) *DownloadContentByShareCodeParams {
	var ()
	return &DownloadContentByShareCodeParams{
		HTTPClient: client,
	}
}

/*DownloadContentByShareCodeParams contains all the parameters to send to the API endpoint
for the download content by share code operation typically these are written to a http.Request
*/
type DownloadContentByShareCodeParams struct {

	/*Namespace
	  namespace of the game

	*/
	Namespace string
	/*ShareCode
	  content sharecode

	*/
	ShareCode string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the download content by share code params
func (o *DownloadContentByShareCodeParams) WithTimeout(timeout time.Duration) *DownloadContentByShareCodeParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the download content by share code params
func (o *DownloadContentByShareCodeParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the download content by share code params
func (o *DownloadContentByShareCodeParams) WithContext(ctx context.Context) *DownloadContentByShareCodeParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the download content by share code params
func (o *DownloadContentByShareCodeParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the download content by share code params
func (o *DownloadContentByShareCodeParams) WithHTTPClient(client *http.Client) *DownloadContentByShareCodeParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the download content by share code params
func (o *DownloadContentByShareCodeParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithNamespace adds the namespace to the download content by share code params
func (o *DownloadContentByShareCodeParams) WithNamespace(namespace string) *DownloadContentByShareCodeParams {
	o.SetNamespace(namespace)
	return o
}

// SetNamespace adds the namespace to the download content by share code params
func (o *DownloadContentByShareCodeParams) SetNamespace(namespace string) {
	o.Namespace = namespace
}

// WithShareCode adds the shareCode to the download content by share code params
func (o *DownloadContentByShareCodeParams) WithShareCode(shareCode string) *DownloadContentByShareCodeParams {
	o.SetShareCode(shareCode)
	return o
}

// SetShareCode adds the shareCode to the download content by share code params
func (o *DownloadContentByShareCodeParams) SetShareCode(shareCode string) {
	o.ShareCode = shareCode
}

// WriteToRequest writes these params to a swagger request
func (o *DownloadContentByShareCodeParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param namespace
	if err := r.SetPathParam("namespace", o.Namespace); err != nil {
		return err
	}

	// path param shareCode
	if err := r.SetPathParam("shareCode", o.ShareCode); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
